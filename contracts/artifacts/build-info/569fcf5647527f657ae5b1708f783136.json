{
	"id": "569fcf5647527f657ae5b1708f783136",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DeepToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\ncontract DeepToken is ERC20, Ownable, Pausable {\r\n    // 토큰 발행 관련 변수\r\n    uint256 public maxSupply; // 최대 발행량\r\n    uint256 public tokenPrice; // 토큰 가격 (1 ETH = tokenPrice 토큰)\r\n    uint256 public totalMinted; // 현재까지 발행된 토큰 수량\r\n\r\n    // 이벤트\r\n    event TokensPurchased(address indexed buyer, uint256 amount);\r\n    event TokensMinted(address indexed to, uint256 amount);\r\n    event TokenPriceUpdated(uint256 newPrice);\r\n\r\n    // 생성자: 토큰 이름, 심볼, 초기 발행량, 최대 발행량, 토큰 가격 설정\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialSupply,\r\n        uint256 _maxSupply,\r\n        uint256 _tokenPrice\r\n    ) ERC20(name, symbol) Ownable(msg.sender) {\r\n        require(initialSupply <= _maxSupply, \"Initial supply exceeds max supply\");\r\n        maxSupply = _maxSupply;\r\n        tokenPrice = _tokenPrice;\r\n        _mint(msg.sender, initialSupply);\r\n        totalMinted = initialSupply;\r\n    }\r\n\r\n    // 토큰 구매 함수 (ETH로 토큰 구매)\r\n    function buyTokens() external payable whenNotPaused {\r\n        require(msg.value > 0, \"Send ETH to buy tokens\");\r\n        uint256 tokensToBuy = (msg.value * tokenPrice) / 1 ether;\r\n        require(totalMinted + tokensToBuy <= maxSupply, \"Exceeds max supply\");\r\n\r\n        _mint(msg.sender, tokensToBuy);\r\n        totalMinted += tokensToBuy;\r\n        emit TokensPurchased(msg.sender, tokensToBuy);\r\n    }\r\n\r\n    // 토큰 수로 토큰 구매 (토큰 수량을 입력하면 필요한 ETH 계산)\r\n    function buyTokensWithAmount(uint256 tokenAmount) external payable whenNotPaused {\r\n        require(tokenAmount > 0, \"Token amount must be greater than 0\");\r\n        uint256 requiredETH = (tokenAmount * 1 ether) / tokenPrice;\r\n        require(msg.value >= requiredETH, \"Insufficient ETH sent\");\r\n\r\n        require(totalMinted + tokenAmount <= maxSupply, \"Exceeds max supply\");\r\n\r\n        _mint(msg.sender, tokenAmount);\r\n        totalMinted += tokenAmount;\r\n\r\n        // 남은 ETH 환불\r\n        if (msg.value > requiredETH) {\r\n            payable(msg.sender).transfer(msg.value - requiredETH);\r\n        }\r\n\r\n        emit TokensPurchased(msg.sender, tokenAmount);\r\n    }\r\n\r\n    // 관리자만 토큰 발행 가능 (추가 발행)\r\n    function mint(address to, uint256 amount) external onlyOwner whenNotPaused {\r\n        require(totalMinted + amount <= maxSupply, \"Exceeds max supply\");\r\n        _mint(to, amount);\r\n        totalMinted += amount;\r\n        emit TokensMinted(to, amount);\r\n    }\r\n\r\n    // 토큰 가격 업데이트 (관리자만 가능)\r\n    function setTokenPrice(uint256 newPrice) external onlyOwner {\r\n        require(newPrice > 0, \"Price must be greater than 0\");\r\n        tokenPrice = newPrice;\r\n        emit TokenPriceUpdated(newPrice);\r\n    }\r\n\r\n    // 컨트랙트 일시 정지 (관리자만 가능)\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    // 컨트랙트 재개 (관리자만 가능)\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    // 컨트랙트에 모인 ETH 출금 (관리자만 가능)\r\n    function withdraw() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"No ETH to withdraw\");\r\n        payable(owner()).transfer(balance);\r\n    }\r\n\r\n    // 현재까지 발행된 토큰 수량 조회\r\n    function getTotalMinted() external view returns (uint256) {\r\n        return totalMinted;\r\n    }\r\n\r\n    // 현재 토큰 가격 조회\r\n    function getTokenPrice() external view returns (uint256) {\r\n        return tokenPrice;\r\n    }\r\n\r\n    // 컨트랙트의 ETH 잔고 조회\r\n    function getContractBalance() external view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    // 특정 주소의 토큰 잔고 조회\r\n    function getTokenBalance(address account) external view returns (uint256) {\r\n        return balanceOf(account);\r\n    }\r\n\r\n    // 토근 소각\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DeepToken.sol": {
				"DeepToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "TokenPriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokensWithAmount",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "setTokenPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DeepToken.sol\":231:4356  contract DeepToken is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DeepToken.sol\":819:1270  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DeepToken.sol\":1017:1027  msg.sender */\n  caller\n    /* \"contracts/DeepToken.sol\":995:999  name */\n  dup6\n    /* \"contracts/DeepToken.sol\":1001:1007  symbol */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeepToken.sol\":1065:1075  _maxSupply */\n  dup2\n    /* \"contracts/DeepToken.sol\":1048:1061  initialSupply */\n  dup4\n    /* \"contracts/DeepToken.sol\":1048:1075  initialSupply <= _maxSupply */\n  gt\n  iszero\n    /* \"contracts/DeepToken.sol\":1040:1113  require(initialSupply <= _maxSupply, \"Initial supply exceeds max supply\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"contracts/DeepToken.sol\":1136:1146  _maxSupply */\n  dup2\n    /* \"contracts/DeepToken.sol\":1124:1133  maxSupply */\n  0x06\n    /* \"contracts/DeepToken.sol\":1124:1146  maxSupply = _maxSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeepToken.sol\":1170:1181  _tokenPrice */\n  dup1\n    /* \"contracts/DeepToken.sol\":1157:1167  tokenPrice */\n  0x07\n    /* \"contracts/DeepToken.sol\":1157:1181  tokenPrice = _tokenPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeepToken.sol\":1192:1224  _mint(msg.sender, initialSupply) */\n  tag_23\n    /* \"contracts/DeepToken.sol\":1198:1208  msg.sender */\n  caller\n    /* \"contracts/DeepToken.sol\":1210:1223  initialSupply */\n  dup5\n    /* \"contracts/DeepToken.sol\":1192:1197  _mint */\n  shl(0x20, tag_24)\n    /* \"contracts/DeepToken.sol\":1192:1224  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/DeepToken.sol\":1249:1262  initialSupply */\n  dup3\n    /* \"contracts/DeepToken.sol\":1235:1246  totalMinted */\n  0x08\n    /* \"contracts/DeepToken.sol\":1235:1262  totalMinted = initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DeepToken.sol\":819:1270  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/DeepToken.sol\":231:4356  contract DeepToken is ERC20, Ownable, Pausable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_44:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_45:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_46:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_47:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_48:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_49:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_50:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_51:\n    /* \"#utility.yul\":957:984   */\n  tag_95\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_49\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_97\n  tag_50\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1030:1118   */\ntag_96:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_52:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_99\n  tag_44\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_100\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_51\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_53:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_103\n  tag_50\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1434:1490   */\ntag_102:\n    /* \"#utility.yul\":1508:1537   */\n  tag_104\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_49\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_54:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_55:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_107\n    /* \"#utility.yul\":1885:1934   */\n  tag_108\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_53\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1869:1935   */\n  tag_52\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_110\n  tag_48\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2010:2122   */\ntag_109:\n    /* \"#utility.yul\":2131:2183   */\n  tag_111\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_54\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_56:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_114\n  tag_47\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2292:2414   */\ntag_113:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_115\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_57:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_58:\n    /* \"#utility.yul\":2726:2750   */\n  tag_118\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_57\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_119:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_59:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_121\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_58\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:4253   */\ntag_3:\n    /* \"#utility.yul\":3056:3062   */\n  0x00\n    /* \"#utility.yul\":3064:3070   */\n  dup1\n    /* \"#utility.yul\":3072:3078   */\n  0x00\n    /* \"#utility.yul\":3080:3086   */\n  dup1\n    /* \"#utility.yul\":3088:3094   */\n  0x00\n    /* \"#utility.yul\":3137:3140   */\n  0xa0\n    /* \"#utility.yul\":3125:3134   */\n  dup7\n    /* \"#utility.yul\":3116:3123   */\n  dup9\n    /* \"#utility.yul\":3112:3135   */\n  sub\n    /* \"#utility.yul\":3108:3141   */\n  slt\n    /* \"#utility.yul\":3105:3225   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":3144:3223   */\n  tag_124\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3105:3225   */\ntag_123:\n    /* \"#utility.yul\":3285:3286   */\n  0x00\n    /* \"#utility.yul\":3274:3283   */\n  dup7\n    /* \"#utility.yul\":3270:3287   */\n  add\n    /* \"#utility.yul\":3264:3288   */\n  mload\n    /* \"#utility.yul\":3315:3333   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3307:3313   */\n  dup2\n    /* \"#utility.yul\":3304:3334   */\n  gt\n    /* \"#utility.yul\":3301:3418   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":3337:3416   */\n  tag_126\n  tag_46\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3301:3418   */\ntag_125:\n    /* \"#utility.yul\":3442:3516   */\n  tag_127\n    /* \"#utility.yul\":3508:3515   */\n  dup9\n    /* \"#utility.yul\":3499:3505   */\n  dup3\n    /* \"#utility.yul\":3488:3497   */\n  dup10\n    /* \"#utility.yul\":3484:3506   */\n  add\n    /* \"#utility.yul\":3442:3516   */\n  tag_56\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3432:3516   */\n  swap6\n  pop\n    /* \"#utility.yul\":3235:3526   */\n  pop\n    /* \"#utility.yul\":3586:3588   */\n  0x20\n    /* \"#utility.yul\":3575:3584   */\n  dup7\n    /* \"#utility.yul\":3571:3589   */\n  add\n    /* \"#utility.yul\":3565:3590   */\n  mload\n    /* \"#utility.yul\":3617:3635   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3609:3615   */\n  dup2\n    /* \"#utility.yul\":3606:3636   */\n  gt\n    /* \"#utility.yul\":3603:3720   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3639:3718   */\n  tag_129\n  tag_46\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3603:3720   */\ntag_128:\n    /* \"#utility.yul\":3744:3818   */\n  tag_130\n    /* \"#utility.yul\":3810:3817   */\n  dup9\n    /* \"#utility.yul\":3801:3807   */\n  dup3\n    /* \"#utility.yul\":3790:3799   */\n  dup10\n    /* \"#utility.yul\":3786:3808   */\n  add\n    /* \"#utility.yul\":3744:3818   */\n  tag_56\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3734:3818   */\n  swap5\n  pop\n    /* \"#utility.yul\":3536:3828   */\n  pop\n    /* \"#utility.yul\":3867:3869   */\n  0x40\n    /* \"#utility.yul\":3893:3957   */\n  tag_131\n    /* \"#utility.yul\":3949:3956   */\n  dup9\n    /* \"#utility.yul\":3940:3946   */\n  dup3\n    /* \"#utility.yul\":3929:3938   */\n  dup10\n    /* \"#utility.yul\":3925:3947   */\n  add\n    /* \"#utility.yul\":3893:3957   */\n  tag_59\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3883:3957   */\n  swap4\n  pop\n    /* \"#utility.yul\":3838:3967   */\n  pop\n    /* \"#utility.yul\":4006:4008   */\n  0x60\n    /* \"#utility.yul\":4032:4096   */\n  tag_132\n    /* \"#utility.yul\":4088:4095   */\n  dup9\n    /* \"#utility.yul\":4079:4085   */\n  dup3\n    /* \"#utility.yul\":4068:4077   */\n  dup10\n    /* \"#utility.yul\":4064:4086   */\n  add\n    /* \"#utility.yul\":4032:4096   */\n  tag_59\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4022:4096   */\n  swap3\n  pop\n    /* \"#utility.yul\":3977:4106   */\n  pop\n    /* \"#utility.yul\":4145:4148   */\n  0x80\n    /* \"#utility.yul\":4172:4236   */\n  tag_133\n    /* \"#utility.yul\":4228:4235   */\n  dup9\n    /* \"#utility.yul\":4219:4225   */\n  dup3\n    /* \"#utility.yul\":4208:4217   */\n  dup10\n    /* \"#utility.yul\":4204:4226   */\n  add\n    /* \"#utility.yul\":4172:4236   */\n  tag_59\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4162:4236   */\n  swap2\n  pop\n    /* \"#utility.yul\":4116:4246   */\n  pop\n    /* \"#utility.yul\":2930:4253   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4358   */\ntag_60:\n    /* \"#utility.yul\":4311:4317   */\n  0x00\n    /* \"#utility.yul\":4345:4350   */\n  dup2\n    /* \"#utility.yul\":4339:4351   */\n  mload\n    /* \"#utility.yul\":4329:4351   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4358   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4364:4544   */\ntag_61:\n    /* \"#utility.yul\":4412:4489   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4409:4410   */\n  0x00\n    /* \"#utility.yul\":4402:4490   */\n  mstore\n    /* \"#utility.yul\":4509:4513   */\n  0x22\n    /* \"#utility.yul\":4506:4507   */\n  0x04\n    /* \"#utility.yul\":4499:4514   */\n  mstore\n    /* \"#utility.yul\":4533:4537   */\n  0x24\n    /* \"#utility.yul\":4530:4531   */\n  0x00\n    /* \"#utility.yul\":4523:4538   */\n  revert\n    /* \"#utility.yul\":4550:4870   */\ntag_62:\n    /* \"#utility.yul\":4594:4600   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x02\n    /* \"#utility.yul\":4625:4629   */\n  dup3\n    /* \"#utility.yul\":4621:4633   */\n  div\n    /* \"#utility.yul\":4611:4633   */\n  swap1\n  pop\n    /* \"#utility.yul\":4678:4679   */\n  0x01\n    /* \"#utility.yul\":4672:4676   */\n  dup3\n    /* \"#utility.yul\":4668:4680   */\n  and\n    /* \"#utility.yul\":4699:4717   */\n  dup1\n    /* \"#utility.yul\":4689:4770   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4755:4759   */\n  0x7f\n    /* \"#utility.yul\":4747:4753   */\n  dup3\n    /* \"#utility.yul\":4743:4760   */\n  and\n    /* \"#utility.yul\":4733:4760   */\n  swap2\n  pop\n    /* \"#utility.yul\":4689:4770   */\ntag_137:\n    /* \"#utility.yul\":4817:4819   */\n  0x20\n    /* \"#utility.yul\":4809:4815   */\n  dup3\n    /* \"#utility.yul\":4806:4820   */\n  lt\n    /* \"#utility.yul\":4786:4804   */\n  dup2\n    /* \"#utility.yul\":4783:4821   */\n  sub\n    /* \"#utility.yul\":4780:4864   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4836:4854   */\n  tag_139\n  tag_61\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4780:4864   */\ntag_138:\n    /* \"#utility.yul\":4601:4870   */\n  pop\n    /* \"#utility.yul\":4550:4870   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4876:5017   */\ntag_63:\n    /* \"#utility.yul\":4925:4929   */\n  0x00\n    /* \"#utility.yul\":4948:4951   */\n  dup2\n    /* \"#utility.yul\":4940:4951   */\n  swap1\n  pop\n    /* \"#utility.yul\":4971:4974   */\n  dup2\n    /* \"#utility.yul\":4968:4969   */\n  0x00\n    /* \"#utility.yul\":4961:4975   */\n  mstore\n    /* \"#utility.yul\":5005:5009   */\n  0x20\n    /* \"#utility.yul\":5002:5003   */\n  0x00\n    /* \"#utility.yul\":4992:5010   */\n  keccak256\n    /* \"#utility.yul\":4984:5010   */\n  swap1\n  pop\n    /* \"#utility.yul\":4876:5017   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5023:5116   */\ntag_64:\n    /* \"#utility.yul\":5060:5066   */\n  0x00\n    /* \"#utility.yul\":5107:5109   */\n  0x20\n    /* \"#utility.yul\":5102:5104   */\n  0x1f\n    /* \"#utility.yul\":5095:5100   */\n  dup4\n    /* \"#utility.yul\":5091:5105   */\n  add\n    /* \"#utility.yul\":5087:5110   */\n  div\n    /* \"#utility.yul\":5077:5110   */\n  swap1\n  pop\n    /* \"#utility.yul\":5023:5116   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5122:5229   */\ntag_65:\n    /* \"#utility.yul\":5166:5174   */\n  0x00\n    /* \"#utility.yul\":5216:5221   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup3\n    /* \"#utility.yul\":5206:5222   */\n  shl\n    /* \"#utility.yul\":5185:5222   */\n  swap1\n  pop\n    /* \"#utility.yul\":5122:5229   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5235:5628   */\ntag_66:\n    /* \"#utility.yul\":5304:5310   */\n  0x00\n    /* \"#utility.yul\":5354:5355   */\n  0x08\n    /* \"#utility.yul\":5342:5352   */\n  dup4\n    /* \"#utility.yul\":5338:5356   */\n  mul\n    /* \"#utility.yul\":5377:5474   */\n  tag_144\n    /* \"#utility.yul\":5407:5473   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5396:5405   */\n  dup3\n    /* \"#utility.yul\":5377:5474   */\n  tag_65\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5495:5534   */\n  tag_145\n    /* \"#utility.yul\":5525:5533   */\n  dup7\n    /* \"#utility.yul\":5514:5523   */\n  dup4\n    /* \"#utility.yul\":5495:5534   */\n  tag_65\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5483:5534   */\n  swap6\n  pop\n    /* \"#utility.yul\":5567:5571   */\n  dup1\n    /* \"#utility.yul\":5563:5572   */\n  not\n    /* \"#utility.yul\":5556:5561   */\n  dup5\n    /* \"#utility.yul\":5552:5573   */\n  and\n    /* \"#utility.yul\":5543:5573   */\n  swap4\n  pop\n    /* \"#utility.yul\":5616:5620   */\n  dup1\n    /* \"#utility.yul\":5606:5614   */\n  dup7\n    /* \"#utility.yul\":5602:5621   */\n  and\n    /* \"#utility.yul\":5595:5600   */\n  dup5\n    /* \"#utility.yul\":5592:5622   */\n  or\n    /* \"#utility.yul\":5582:5622   */\n  swap3\n  pop\n    /* \"#utility.yul\":5311:5628   */\n  pop\n  pop\n    /* \"#utility.yul\":5235:5628   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5634:5694   */\ntag_67:\n    /* \"#utility.yul\":5662:5665   */\n  0x00\n    /* \"#utility.yul\":5683:5688   */\n  dup2\n    /* \"#utility.yul\":5676:5688   */\n  swap1\n  pop\n    /* \"#utility.yul\":5634:5694   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5700:5842   */\ntag_68:\n    /* \"#utility.yul\":5750:5759   */\n  0x00\n    /* \"#utility.yul\":5783:5836   */\n  tag_148\n    /* \"#utility.yul\":5801:5835   */\n  tag_149\n    /* \"#utility.yul\":5810:5834   */\n  tag_150\n    /* \"#utility.yul\":5828:5833   */\n  dup5\n    /* \"#utility.yul\":5810:5834   */\n  tag_57\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5801:5835   */\n  tag_67\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5783:5836   */\n  tag_57\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5770:5836   */\n  swap1\n  pop\n    /* \"#utility.yul\":5700:5842   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5848:5923   */\ntag_69:\n    /* \"#utility.yul\":5891:5894   */\n  0x00\n    /* \"#utility.yul\":5912:5917   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5848:5923   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5929:6198   */\ntag_70:\n    /* \"#utility.yul\":6039:6078   */\n  tag_153\n    /* \"#utility.yul\":6070:6077   */\n  dup4\n    /* \"#utility.yul\":6039:6078   */\n  tag_68\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6100:6191   */\n  tag_154\n    /* \"#utility.yul\":6149:6190   */\n  tag_155\n    /* \"#utility.yul\":6173:6189   */\n  dup3\n    /* \"#utility.yul\":6149:6190   */\n  tag_69\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6141:6147   */\n  dup5\n    /* \"#utility.yul\":6134:6138   */\n  dup5\n    /* \"#utility.yul\":6128:6139   */\n  sload\n    /* \"#utility.yul\":6100:6191   */\n  tag_66\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6094:6098   */\n  dup3\n    /* \"#utility.yul\":6087:6192   */\n  sstore\n    /* \"#utility.yul\":6005:6198   */\n  pop\n    /* \"#utility.yul\":5929:6198   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6204:6277   */\ntag_71:\n    /* \"#utility.yul\":6249:6252   */\n  0x00\n    /* \"#utility.yul\":6204:6277   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6283:6472   */\ntag_72:\n    /* \"#utility.yul\":6360:6392   */\n  tag_158\n  tag_71\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6401:6466   */\n  tag_159\n    /* \"#utility.yul\":6459:6465   */\n  dup2\n    /* \"#utility.yul\":6451:6457   */\n  dup5\n    /* \"#utility.yul\":6445:6449   */\n  dup5\n    /* \"#utility.yul\":6401:6466   */\n  tag_70\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6336:6472   */\n  pop\n    /* \"#utility.yul\":6283:6472   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6478:6664   */\ntag_73:\n    /* \"#utility.yul\":6538:6658   */\ntag_161:\n    /* \"#utility.yul\":6555:6558   */\n  dup2\n    /* \"#utility.yul\":6548:6553   */\n  dup2\n    /* \"#utility.yul\":6545:6559   */\n  lt\n    /* \"#utility.yul\":6538:6658   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6609:6648   */\n  tag_164\n    /* \"#utility.yul\":6646:6647   */\n  0x00\n    /* \"#utility.yul\":6639:6644   */\n  dup3\n    /* \"#utility.yul\":6609:6648   */\n  tag_72\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6582:6583   */\n  0x01\n    /* \"#utility.yul\":6575:6580   */\n  dup2\n    /* \"#utility.yul\":6571:6584   */\n  add\n    /* \"#utility.yul\":6562:6584   */\n  swap1\n  pop\n    /* \"#utility.yul\":6538:6658   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":6478:6664   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6670:7213   */\ntag_74:\n    /* \"#utility.yul\":6771:6773   */\n  0x1f\n    /* \"#utility.yul\":6766:6769   */\n  dup3\n    /* \"#utility.yul\":6763:6774   */\n  gt\n    /* \"#utility.yul\":6760:7206   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6805:6843   */\n  tag_167\n    /* \"#utility.yul\":6837:6842   */\n  dup2\n    /* \"#utility.yul\":6805:6843   */\n  tag_63\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6889:6918   */\n  tag_168\n    /* \"#utility.yul\":6907:6917   */\n  dup5\n    /* \"#utility.yul\":6889:6918   */\n  tag_64\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6879:6887   */\n  dup2\n    /* \"#utility.yul\":6875:6919   */\n  add\n    /* \"#utility.yul\":7072:7074   */\n  0x20\n    /* \"#utility.yul\":7060:7070   */\n  dup6\n    /* \"#utility.yul\":7057:7075   */\n  lt\n    /* \"#utility.yul\":7054:7103   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7093:7101   */\n  dup2\n    /* \"#utility.yul\":7078:7101   */\n  swap1\n  pop\n    /* \"#utility.yul\":7054:7103   */\ntag_169:\n    /* \"#utility.yul\":7116:7196   */\n  tag_170\n    /* \"#utility.yul\":7172:7194   */\n  tag_171\n    /* \"#utility.yul\":7190:7193   */\n  dup6\n    /* \"#utility.yul\":7172:7194   */\n  tag_64\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7162:7170   */\n  dup4\n    /* \"#utility.yul\":7158:7195   */\n  add\n    /* \"#utility.yul\":7145:7156   */\n  dup3\n    /* \"#utility.yul\":7116:7196   */\n  tag_73\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6775:7206   */\n  pop\n  pop\n    /* \"#utility.yul\":6760:7206   */\ntag_166:\n    /* \"#utility.yul\":6670:7213   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7219:7336   */\ntag_75:\n    /* \"#utility.yul\":7273:7281   */\n  0x00\n    /* \"#utility.yul\":7323:7328   */\n  dup3\n    /* \"#utility.yul\":7317:7321   */\n  dup3\n    /* \"#utility.yul\":7313:7329   */\n  shr\n    /* \"#utility.yul\":7292:7329   */\n  swap1\n  pop\n    /* \"#utility.yul\":7219:7336   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7342:7511   */\ntag_76:\n    /* \"#utility.yul\":7386:7392   */\n  0x00\n    /* \"#utility.yul\":7419:7470   */\n  tag_174\n    /* \"#utility.yul\":7467:7468   */\n  0x00\n    /* \"#utility.yul\":7463:7469   */\n  not\n    /* \"#utility.yul\":7455:7460   */\n  dup5\n    /* \"#utility.yul\":7452:7453   */\n  0x08\n    /* \"#utility.yul\":7448:7461   */\n  mul\n    /* \"#utility.yul\":7419:7470   */\n  tag_75\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7415:7471   */\n  not\n    /* \"#utility.yul\":7500:7504   */\n  dup1\n    /* \"#utility.yul\":7494:7498   */\n  dup4\n    /* \"#utility.yul\":7490:7505   */\n  and\n    /* \"#utility.yul\":7480:7505   */\n  swap2\n  pop\n    /* \"#utility.yul\":7393:7511   */\n  pop\n    /* \"#utility.yul\":7342:7511   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7516:7811   */\ntag_77:\n    /* \"#utility.yul\":7592:7596   */\n  0x00\n    /* \"#utility.yul\":7738:7767   */\n  tag_176\n    /* \"#utility.yul\":7763:7766   */\n  dup4\n    /* \"#utility.yul\":7757:7761   */\n  dup4\n    /* \"#utility.yul\":7738:7767   */\n  tag_76\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7730:7767   */\n  swap2\n  pop\n    /* \"#utility.yul\":7800:7803   */\n  dup3\n    /* \"#utility.yul\":7797:7798   */\n  0x02\n    /* \"#utility.yul\":7793:7804   */\n  mul\n    /* \"#utility.yul\":7787:7791   */\n  dup3\n    /* \"#utility.yul\":7784:7805   */\n  or\n    /* \"#utility.yul\":7776:7805   */\n  swap1\n  pop\n    /* \"#utility.yul\":7516:7811   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7816:9211   */\ntag_10:\n    /* \"#utility.yul\":7933:7970   */\n  tag_178\n    /* \"#utility.yul\":7966:7969   */\n  dup3\n    /* \"#utility.yul\":7933:7970   */\n  tag_60\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8035:8053   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8027:8033   */\n  dup2\n    /* \"#utility.yul\":8024:8054   */\n  gt\n    /* \"#utility.yul\":8021:8077   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8057:8075   */\n  tag_180\n  tag_50\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8021:8077   */\ntag_179:\n    /* \"#utility.yul\":8101:8139   */\n  tag_181\n    /* \"#utility.yul\":8133:8137   */\n  dup3\n    /* \"#utility.yul\":8127:8138   */\n  sload\n    /* \"#utility.yul\":8101:8139   */\n  tag_62\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8186:8253   */\n  tag_182\n    /* \"#utility.yul\":8246:8252   */\n  dup3\n    /* \"#utility.yul\":8238:8244   */\n  dup3\n    /* \"#utility.yul\":8232:8236   */\n  dup6\n    /* \"#utility.yul\":8186:8253   */\n  tag_74\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8280:8281   */\n  0x00\n    /* \"#utility.yul\":8304:8308   */\n  0x20\n    /* \"#utility.yul\":8291:8308   */\n  swap1\n  pop\n    /* \"#utility.yul\":8336:8338   */\n  0x1f\n    /* \"#utility.yul\":8328:8334   */\n  dup4\n    /* \"#utility.yul\":8325:8339   */\n  gt\n    /* \"#utility.yul\":8353:8354   */\n  0x01\n    /* \"#utility.yul\":8348:8966   */\n  dup2\n  eq\n  tag_184\n  jumpi\n    /* \"#utility.yul\":9010:9011   */\n  0x00\n    /* \"#utility.yul\":9027:9033   */\n  dup5\n    /* \"#utility.yul\":9024:9101   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":9076:9085   */\n  dup3\n    /* \"#utility.yul\":9071:9074   */\n  dup8\n    /* \"#utility.yul\":9067:9086   */\n  add\n    /* \"#utility.yul\":9061:9087   */\n  mload\n    /* \"#utility.yul\":9052:9087   */\n  swap1\n  pop\n    /* \"#utility.yul\":9024:9101   */\ntag_185:\n    /* \"#utility.yul\":9127:9194   */\n  tag_186\n    /* \"#utility.yul\":9187:9193   */\n  dup6\n    /* \"#utility.yul\":9180:9185   */\n  dup3\n    /* \"#utility.yul\":9127:9194   */\n  tag_77\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9121:9125   */\n  dup7\n    /* \"#utility.yul\":9114:9195   */\n  sstore\n    /* \"#utility.yul\":8983:9205   */\n  pop\n    /* \"#utility.yul\":8318:9205   */\n  jump(tag_183)\n    /* \"#utility.yul\":8348:8966   */\ntag_184:\n    /* \"#utility.yul\":8400:8404   */\n  0x1f\n    /* \"#utility.yul\":8396:8405   */\n  not\n    /* \"#utility.yul\":8388:8394   */\n  dup5\n    /* \"#utility.yul\":8384:8406   */\n  and\n    /* \"#utility.yul\":8434:8471   */\n  tag_187\n    /* \"#utility.yul\":8466:8470   */\n  dup7\n    /* \"#utility.yul\":8434:8471   */\n  tag_63\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8493:8494   */\n  0x00\n    /* \"#utility.yul\":8507:8715   */\ntag_188:\n    /* \"#utility.yul\":8521:8528   */\n  dup3\n    /* \"#utility.yul\":8518:8519   */\n  dup2\n    /* \"#utility.yul\":8515:8529   */\n  lt\n    /* \"#utility.yul\":8507:8715   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":8600:8609   */\n  dup5\n    /* \"#utility.yul\":8595:8598   */\n  dup10\n    /* \"#utility.yul\":8591:8610   */\n  add\n    /* \"#utility.yul\":8585:8611   */\n  mload\n    /* \"#utility.yul\":8577:8583   */\n  dup3\n    /* \"#utility.yul\":8570:8612   */\n  sstore\n    /* \"#utility.yul\":8651:8652   */\n  0x01\n    /* \"#utility.yul\":8643:8649   */\n  dup3\n    /* \"#utility.yul\":8639:8653   */\n  add\n    /* \"#utility.yul\":8629:8653   */\n  swap2\n  pop\n    /* \"#utility.yul\":8698:8700   */\n  0x20\n    /* \"#utility.yul\":8687:8696   */\n  dup6\n    /* \"#utility.yul\":8683:8701   */\n  add\n    /* \"#utility.yul\":8670:8701   */\n  swap5\n  pop\n    /* \"#utility.yul\":8544:8548   */\n  0x20\n    /* \"#utility.yul\":8541:8542   */\n  dup2\n    /* \"#utility.yul\":8537:8549   */\n  add\n    /* \"#utility.yul\":8532:8549   */\n  swap1\n  pop\n    /* \"#utility.yul\":8507:8715   */\n  jump(tag_188)\ntag_190:\n    /* \"#utility.yul\":8743:8749   */\n  dup7\n    /* \"#utility.yul\":8734:8741   */\n  dup4\n    /* \"#utility.yul\":8731:8750   */\n  lt\n    /* \"#utility.yul\":8728:8907   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8801:8810   */\n  dup5\n    /* \"#utility.yul\":8796:8799   */\n  dup10\n    /* \"#utility.yul\":8792:8811   */\n  add\n    /* \"#utility.yul\":8786:8812   */\n  mload\n    /* \"#utility.yul\":8844:8892   */\n  tag_192\n    /* \"#utility.yul\":8886:8890   */\n  0x1f\n    /* \"#utility.yul\":8878:8884   */\n  dup10\n    /* \"#utility.yul\":8874:8891   */\n  and\n    /* \"#utility.yul\":8863:8872   */\n  dup3\n    /* \"#utility.yul\":8844:8892   */\n  tag_76\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8836:8842   */\n  dup4\n    /* \"#utility.yul\":8829:8893   */\n  sstore\n    /* \"#utility.yul\":8751:8907   */\n  pop\n    /* \"#utility.yul\":8728:8907   */\ntag_191:\n    /* \"#utility.yul\":8953:8954   */\n  0x01\n    /* \"#utility.yul\":8949:8950   */\n  0x02\n    /* \"#utility.yul\":8941:8947   */\n  dup9\n    /* \"#utility.yul\":8937:8951   */\n  mul\n    /* \"#utility.yul\":8933:8955   */\n  add\n    /* \"#utility.yul\":8927:8931   */\n  dup9\n    /* \"#utility.yul\":8920:8956   */\n  sstore\n    /* \"#utility.yul\":8355:8966   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8318:9205   */\ntag_183:\n  pop\n    /* \"#utility.yul\":7908:9211   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7816:9211   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9343   */\ntag_78:\n    /* \"#utility.yul\":9254:9261   */\n  0x00\n    /* \"#utility.yul\":9294:9336   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9287:9292   */\n  dup3\n    /* \"#utility.yul\":9283:9337   */\n  and\n    /* \"#utility.yul\":9272:9337   */\n  swap1\n  pop\n    /* \"#utility.yul\":9217:9343   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9349:9445   */\ntag_79:\n    /* \"#utility.yul\":9386:9393   */\n  0x00\n    /* \"#utility.yul\":9415:9439   */\n  tag_195\n    /* \"#utility.yul\":9433:9438   */\n  dup3\n    /* \"#utility.yul\":9415:9439   */\n  tag_78\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9404:9439   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_80:\n    /* \"#utility.yul\":9538:9562   */\n  tag_197\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_79\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_15:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_199\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_80\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9972   */\ntag_81:\n    /* \"#utility.yul\":9887:9898   */\n  0x00\n    /* \"#utility.yul\":9921:9927   */\n  dup3\n    /* \"#utility.yul\":9916:9919   */\n  dup3\n    /* \"#utility.yul\":9909:9928   */\n  mstore\n    /* \"#utility.yul\":9961:9965   */\n  0x20\n    /* \"#utility.yul\":9956:9959   */\n  dup3\n    /* \"#utility.yul\":9952:9966   */\n  add\n    /* \"#utility.yul\":9937:9966   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9972   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9978:10198   */\ntag_82:\n    /* \"#utility.yul\":10118:10152   */\n  0x496e697469616c20737570706c792065786365656473206d617820737570706c\n    /* \"#utility.yul\":10114:10115   */\n  0x00\n    /* \"#utility.yul\":10106:10112   */\n  dup3\n    /* \"#utility.yul\":10102:10116   */\n  add\n    /* \"#utility.yul\":10095:10153   */\n  mstore\n    /* \"#utility.yul\":10187:10190   */\n  0x7900000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10182:10184   */\n  0x20\n    /* \"#utility.yul\":10174:10180   */\n  dup3\n    /* \"#utility.yul\":10170:10185   */\n  add\n    /* \"#utility.yul\":10163:10191   */\n  mstore\n    /* \"#utility.yul\":9978:10198   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10204:10570   */\ntag_83:\n    /* \"#utility.yul\":10346:10349   */\n  0x00\n    /* \"#utility.yul\":10367:10434   */\n  tag_203\n    /* \"#utility.yul\":10431:10433   */\n  0x21\n    /* \"#utility.yul\":10426:10429   */\n  dup4\n    /* \"#utility.yul\":10367:10434   */\n  tag_81\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10360:10434   */\n  swap2\n  pop\n    /* \"#utility.yul\":10443:10536   */\n  tag_204\n    /* \"#utility.yul\":10532:10535   */\n  dup3\n    /* \"#utility.yul\":10443:10536   */\n  tag_82\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10561:10563   */\n  0x40\n    /* \"#utility.yul\":10556:10559   */\n  dup3\n    /* \"#utility.yul\":10552:10564   */\n  add\n    /* \"#utility.yul\":10545:10564   */\n  swap1\n  pop\n    /* \"#utility.yul\":10204:10570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10576:10995   */\ntag_22:\n    /* \"#utility.yul\":10742:10746   */\n  0x00\n    /* \"#utility.yul\":10780:10782   */\n  0x20\n    /* \"#utility.yul\":10769:10778   */\n  dup3\n    /* \"#utility.yul\":10765:10783   */\n  add\n    /* \"#utility.yul\":10757:10783   */\n  swap1\n  pop\n    /* \"#utility.yul\":10829:10838   */\n  dup2\n    /* \"#utility.yul\":10823:10827   */\n  dup2\n    /* \"#utility.yul\":10819:10839   */\n  sub\n    /* \"#utility.yul\":10815:10816   */\n  0x00\n    /* \"#utility.yul\":10804:10813   */\n  dup4\n    /* \"#utility.yul\":10800:10817   */\n  add\n    /* \"#utility.yul\":10793:10840   */\n  mstore\n    /* \"#utility.yul\":10857:10988   */\n  tag_206\n    /* \"#utility.yul\":10983:10987   */\n  dup2\n    /* \"#utility.yul\":10857:10988   */\n  tag_83\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10849:10988   */\n  swap1\n  pop\n    /* \"#utility.yul\":10576:10995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11001:11181   */\ntag_84:\n    /* \"#utility.yul\":11049:11126   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11046:11047   */\n  0x00\n    /* \"#utility.yul\":11039:11127   */\n  mstore\n    /* \"#utility.yul\":11146:11150   */\n  0x11\n    /* \"#utility.yul\":11143:11144   */\n  0x04\n    /* \"#utility.yul\":11136:11151   */\n  mstore\n    /* \"#utility.yul\":11170:11174   */\n  0x24\n    /* \"#utility.yul\":11167:11168   */\n  0x00\n    /* \"#utility.yul\":11160:11175   */\n  revert\n    /* \"#utility.yul\":11187:11378   */\ntag_35:\n    /* \"#utility.yul\":11227:11230   */\n  0x00\n    /* \"#utility.yul\":11246:11266   */\n  tag_209\n    /* \"#utility.yul\":11264:11265   */\n  dup3\n    /* \"#utility.yul\":11246:11266   */\n  tag_57\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":11241:11266   */\n  swap2\n  pop\n    /* \"#utility.yul\":11280:11300   */\n  tag_210\n    /* \"#utility.yul\":11298:11299   */\n  dup4\n    /* \"#utility.yul\":11280:11300   */\n  tag_57\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":11275:11300   */\n  swap3\n  pop\n    /* \"#utility.yul\":11323:11324   */\n  dup3\n    /* \"#utility.yul\":11320:11321   */\n  dup3\n    /* \"#utility.yul\":11316:11325   */\n  add\n    /* \"#utility.yul\":11309:11325   */\n  swap1\n  pop\n    /* \"#utility.yul\":11344:11347   */\n  dup1\n    /* \"#utility.yul\":11341:11342   */\n  dup3\n    /* \"#utility.yul\":11338:11348   */\n  gt\n    /* \"#utility.yul\":11335:11371   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":11351:11369   */\n  tag_212\n  tag_84\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":11335:11371   */\ntag_211:\n    /* \"#utility.yul\":11187:11378   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11384:11502   */\ntag_85:\n    /* \"#utility.yul\":11471:11495   */\n  tag_214\n    /* \"#utility.yul\":11489:11494   */\n  dup2\n    /* \"#utility.yul\":11471:11495   */\n  tag_57\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":11466:11469   */\n  dup3\n    /* \"#utility.yul\":11459:11496   */\n  mstore\n    /* \"#utility.yul\":11384:11502   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11508:11950   */\ntag_39:\n    /* \"#utility.yul\":11657:11661   */\n  0x00\n    /* \"#utility.yul\":11695:11697   */\n  0x60\n    /* \"#utility.yul\":11684:11693   */\n  dup3\n    /* \"#utility.yul\":11680:11698   */\n  add\n    /* \"#utility.yul\":11672:11698   */\n  swap1\n  pop\n    /* \"#utility.yul\":11708:11779   */\n  tag_216\n    /* \"#utility.yul\":11776:11777   */\n  0x00\n    /* \"#utility.yul\":11765:11774   */\n  dup4\n    /* \"#utility.yul\":11761:11778   */\n  add\n    /* \"#utility.yul\":11752:11758   */\n  dup7\n    /* \"#utility.yul\":11708:11779   */\n  tag_80\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11789:11861   */\n  tag_217\n    /* \"#utility.yul\":11857:11859   */\n  0x20\n    /* \"#utility.yul\":11846:11855   */\n  dup4\n    /* \"#utility.yul\":11842:11860   */\n  add\n    /* \"#utility.yul\":11833:11839   */\n  dup6\n    /* \"#utility.yul\":11789:11861   */\n  tag_85\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11871:11943   */\n  tag_218\n    /* \"#utility.yul\":11939:11941   */\n  0x40\n    /* \"#utility.yul\":11928:11937   */\n  dup4\n    /* \"#utility.yul\":11924:11942   */\n  add\n    /* \"#utility.yul\":11915:11921   */\n  dup5\n    /* \"#utility.yul\":11871:11943   */\n  tag_85\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":11508:11950   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11956:12178   */\ntag_43:\n    /* \"#utility.yul\":12049:12053   */\n  0x00\n    /* \"#utility.yul\":12087:12089   */\n  0x20\n    /* \"#utility.yul\":12076:12085   */\n  dup3\n    /* \"#utility.yul\":12072:12090   */\n  add\n    /* \"#utility.yul\":12064:12090   */\n  swap1\n  pop\n    /* \"#utility.yul\":12100:12171   */\n  tag_220\n    /* \"#utility.yul\":12168:12169   */\n  0x00\n    /* \"#utility.yul\":12157:12166   */\n  dup4\n    /* \"#utility.yul\":12153:12170   */\n  add\n    /* \"#utility.yul\":12144:12150   */\n  dup5\n    /* \"#utility.yul\":12100:12171   */\n  tag_85\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":11956:12178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DeepToken.sol\":231:4356  contract DeepToken is ERC20, Ownable, Pausable {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DeepToken.sol\":231:4356  contract DeepToken is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6f9fb98a\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa2309ff8\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd5abeb01\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfc60c281\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0xa2309ff8\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x7ff9b596\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x7ff9b596\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x6f9fb98a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x3ccfd60b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4b94f50e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6a61e5fc\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x3ccfd60b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x18160ddd\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3aecd0e3\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ca1c5c9\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeepToken.sol\":3677:3772  function getTotalMinted() external view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeepToken.sol\":4122:4240  function getTokenBalance(address account) external view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeepToken.sol\":3422:3617  function withdraw() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/DeepToken.sol\":3283:3350  function unpause() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/DeepToken.sol\":2567:2825  function mint(address to, uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/DeepToken.sol\":4270:4353  function burn(uint256 amount) external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/DeepToken.sol\":3816:3909  function getTokenPrice() external view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeepToken.sol\":2890:3097  function setTokenPrice(uint256 newPrice) external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/DeepToken.sol\":3959:4068  function getContractBalance() external view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/DeepToken.sol\":372:397  uint256 public tokenPrice */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeepToken.sol\":3162:3225  function pause() external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeepToken.sol\":449:475  uint256 public totalMinted */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeepToken.sol\":1330:1732  function buyTokens() external payable whenNotPaused {... */\n    tag_25:\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      stop\n        /* \"contracts/DeepToken.sol\":321:345  uint256 public maxSupply */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      tag_149\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      stop\n        /* \"contracts/DeepToken.sol\":1829:2501  function buyTokensWithAmount(uint256 tokenAmount) external payable whenNotPaused {... */\n    tag_29:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":3677:3772  function getTotalMinted() external view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/DeepToken.sol\":3726:3733  uint256 */\n      0x00\n        /* \"contracts/DeepToken.sol\":3753:3764  totalMinted */\n      sload(0x08)\n        /* \"contracts/DeepToken.sol\":3746:3764  return totalMinted */\n      swap1\n      pop\n        /* \"contracts/DeepToken.sol\":3677:3772  function getTotalMinted() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":4122:4240  function getTokenBalance(address account) external view returns (uint256) {... */\n    tag_73:\n        /* \"contracts/DeepToken.sol\":4187:4194  uint256 */\n      0x00\n        /* \"contracts/DeepToken.sol\":4214:4232  balanceOf(account) */\n      tag_180\n        /* \"contracts/DeepToken.sol\":4224:4231  account */\n      dup3\n        /* \"contracts/DeepToken.sol\":4214:4223  balanceOf */\n      tag_109\n        /* \"contracts/DeepToken.sol\":4214:4232  balanceOf(account) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/DeepToken.sol\":4207:4232  return balanceOf(account) */\n      swap1\n      pop\n        /* \"contracts/DeepToken.sol\":4122:4240  function getTokenBalance(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":3422:3617  function withdraw() external onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/DeepToken.sol\":3472:3487  uint256 balance */\n      0x00\n        /* \"contracts/DeepToken.sol\":3490:3511  address(this).balance */\n      selfbalance\n        /* \"contracts/DeepToken.sol\":3472:3511  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/DeepToken.sol\":3540:3541  0 */\n      0x00\n        /* \"contracts/DeepToken.sol\":3530:3537  balance */\n      dup2\n        /* \"contracts/DeepToken.sol\":3530:3541  balance > 0 */\n      gt\n        /* \"contracts/DeepToken.sol\":3522:3564  require(balance > 0, \"No ETH to withdraw\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/DeepToken.sol\":3583:3590  owner() */\n      tag_188\n        /* \"contracts/DeepToken.sol\":3583:3588  owner */\n      tag_123\n        /* \"contracts/DeepToken.sol\":3583:3590  owner() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/DeepToken.sol\":3575:3600  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeepToken.sol\":3575:3609  payable(owner()).transfer(balance) */\n      0x08fc\n        /* \"contracts/DeepToken.sol\":3601:3608  balance */\n      dup3\n        /* \"contracts/DeepToken.sol\":3575:3609  payable(owner()).transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n        /* \"contracts/DeepToken.sol\":3461:3617  {... */\n      pop\n        /* \"contracts/DeepToken.sol\":3422:3617  function withdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":3283:3350  function unpause() external onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/DeepToken.sol\":3332:3342  _unpause() */\n      tag_194\n        /* \"contracts/DeepToken.sol\":3332:3340  _unpause */\n      tag_195\n        /* \"contracts/DeepToken.sol\":3332:3342  _unpause() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/DeepToken.sol\":3283:3350  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":2567:2825  function mint(address to, uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_199\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_200\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/DeepToken.sol\":2685:2694  maxSupply */\n      sload(0x06)\n        /* \"contracts/DeepToken.sol\":2675:2681  amount */\n      dup2\n        /* \"contracts/DeepToken.sol\":2661:2672  totalMinted */\n      sload(0x08)\n        /* \"contracts/DeepToken.sol\":2661:2681  totalMinted + amount */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"contracts/DeepToken.sol\":2661:2694  totalMinted + amount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/DeepToken.sol\":2653:2717  require(totalMinted + amount <= maxSupply, \"Exceeds max supply\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/DeepToken.sol\":2728:2745  _mint(to, amount) */\n      tag_207\n        /* \"contracts/DeepToken.sol\":2734:2736  to */\n      dup3\n        /* \"contracts/DeepToken.sol\":2738:2744  amount */\n      dup3\n        /* \"contracts/DeepToken.sol\":2728:2733  _mint */\n      tag_208\n        /* \"contracts/DeepToken.sol\":2728:2745  _mint(to, amount) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/DeepToken.sol\":2771:2777  amount */\n      dup1\n        /* \"contracts/DeepToken.sol\":2756:2767  totalMinted */\n      0x08\n      0x00\n        /* \"contracts/DeepToken.sol\":2756:2777  totalMinted += amount */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_209:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeepToken.sol\":2806:2808  to */\n      dup2\n        /* \"contracts/DeepToken.sol\":2793:2817  TokensMinted(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273\n        /* \"contracts/DeepToken.sol\":2810:2816  amount */\n      dup3\n        /* \"contracts/DeepToken.sol\":2793:2817  TokensMinted(to, amount) */\n      mload(0x40)\n      tag_210\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeepToken.sol\":2567:2825  function mint(address to, uint256 amount) external onlyOwner whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":4270:4353  function burn(uint256 amount) external {... */\n    tag_89:\n        /* \"contracts/DeepToken.sol\":4320:4345  _burn(msg.sender, amount) */\n      tag_212\n        /* \"contracts/DeepToken.sol\":4326:4336  msg.sender */\n      caller\n        /* \"contracts/DeepToken.sol\":4338:4344  amount */\n      dup3\n        /* \"contracts/DeepToken.sol\":4320:4325  _burn */\n      tag_213\n        /* \"contracts/DeepToken.sol\":4320:4345  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/DeepToken.sol\":4270:4353  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":3816:3909  function getTokenPrice() external view returns (uint256) {... */\n    tag_92:\n        /* \"contracts/DeepToken.sol\":3864:3871  uint256 */\n      0x00\n        /* \"contracts/DeepToken.sol\":3891:3901  tokenPrice */\n      sload(0x07)\n        /* \"contracts/DeepToken.sol\":3884:3901  return tokenPrice */\n      swap1\n      pop\n        /* \"contracts/DeepToken.sol\":3816:3909  function getTokenPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":2890:3097  function setTokenPrice(uint256 newPrice) external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/DeepToken.sol\":2980:2981  0 */\n      0x00\n        /* \"contracts/DeepToken.sol\":2969:2977  newPrice */\n      dup2\n        /* \"contracts/DeepToken.sol\":2969:2981  newPrice > 0 */\n      gt\n        /* \"contracts/DeepToken.sol\":2961:3014  require(newPrice > 0, \"Price must be greater than 0\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/DeepToken.sol\":3038:3046  newPrice */\n      dup1\n        /* \"contracts/DeepToken.sol\":3025:3035  tokenPrice */\n      0x07\n        /* \"contracts/DeepToken.sol\":3025:3046  tokenPrice = newPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeepToken.sol\":3062:3089  TokenPriceUpdated(newPrice) */\n      0x6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e93976890\n        /* \"contracts/DeepToken.sol\":3080:3088  newPrice */\n      dup2\n        /* \"contracts/DeepToken.sol\":3062:3089  TokenPriceUpdated(newPrice) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DeepToken.sol\":2890:3097  function setTokenPrice(uint256 newPrice) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":3959:4068  function getContractBalance() external view returns (uint256) {... */\n    tag_104:\n        /* \"contracts/DeepToken.sol\":4012:4019  uint256 */\n      0x00\n        /* \"contracts/DeepToken.sol\":4039:4060  address(this).balance */\n      selfbalance\n        /* \"contracts/DeepToken.sol\":4032:4060  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/DeepToken.sol\":3959:4068  function getContractBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":372:397  uint256 public tokenPrice */\n    tag_116:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":3162:3225  function pause() external onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/DeepToken.sol\":3209:3217  _pause() */\n      tag_233\n        /* \"contracts/DeepToken.sol\":3209:3215  _pause */\n      tag_234\n        /* \"contracts/DeepToken.sol\":3209:3217  _pause() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/DeepToken.sol\":3162:3225  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_237\n      swap1\n      tag_160\n      jump\t// in\n    tag_237:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_238\n      swap1\n      tag_160\n      jump\t// in\n    tag_238:\n      dup1\n      iszero\n      tag_239\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_240\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_239)\n    tag_240:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_241:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_241\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":449:475  uint256 public totalMinted */\n    tag_132:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":1330:1732  function buyTokens() external payable whenNotPaused {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_246\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_200\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/DeepToken.sol\":1413:1414  0 */\n      0x00\n        /* \"contracts/DeepToken.sol\":1401:1410  msg.value */\n      callvalue\n        /* \"contracts/DeepToken.sol\":1401:1414  msg.value > 0 */\n      gt\n        /* \"contracts/DeepToken.sol\":1393:1441  require(msg.value > 0, \"Send ETH to buy tokens\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"contracts/DeepToken.sol\":1452:1471  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/DeepToken.sol\":1501:1508  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DeepToken.sol\":1487:1497  tokenPrice */\n      sload(0x07)\n        /* \"contracts/DeepToken.sol\":1475:1484  msg.value */\n      callvalue\n        /* \"contracts/DeepToken.sol\":1475:1497  msg.value * tokenPrice */\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"contracts/DeepToken.sol\":1474:1508  (msg.value * tokenPrice) / 1 ether */\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"contracts/DeepToken.sol\":1452:1508  uint256 tokensToBuy = (msg.value * tokenPrice) / 1 ether */\n      swap1\n      pop\n        /* \"contracts/DeepToken.sol\":1556:1565  maxSupply */\n      sload(0x06)\n        /* \"contracts/DeepToken.sol\":1541:1552  tokensToBuy */\n      dup2\n        /* \"contracts/DeepToken.sol\":1527:1538  totalMinted */\n      sload(0x08)\n        /* \"contracts/DeepToken.sol\":1527:1552  totalMinted + tokensToBuy */\n      tag_255\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_255:\n        /* \"contracts/DeepToken.sol\":1527:1565  totalMinted + tokensToBuy <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/DeepToken.sol\":1519:1588  require(totalMinted + tokensToBuy <= maxSupply, \"Exceeds max supply\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_206\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/DeepToken.sol\":1601:1631  _mint(msg.sender, tokensToBuy) */\n      tag_258\n        /* \"contracts/DeepToken.sol\":1607:1617  msg.sender */\n      caller\n        /* \"contracts/DeepToken.sol\":1619:1630  tokensToBuy */\n      dup3\n        /* \"contracts/DeepToken.sol\":1601:1606  _mint */\n      tag_208\n        /* \"contracts/DeepToken.sol\":1601:1631  _mint(msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/DeepToken.sol\":1657:1668  tokensToBuy */\n      dup1\n        /* \"contracts/DeepToken.sol\":1642:1653  totalMinted */\n      0x08\n      0x00\n        /* \"contracts/DeepToken.sol\":1642:1668  totalMinted += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_259\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_259:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeepToken.sol\":1700:1710  msg.sender */\n      caller\n        /* \"contracts/DeepToken.sol\":1684:1724  TokensPurchased(msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc271\n        /* \"contracts/DeepToken.sol\":1712:1723  tokensToBuy */\n      dup3\n        /* \"contracts/DeepToken.sol\":1684:1724  TokensPurchased(msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeepToken.sol\":1382:1732  {... */\n      pop\n        /* \"contracts/DeepToken.sol\":1330:1732  function buyTokens() external payable whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":321:345  uint256 public maxSupply */\n    tag_143:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeepToken.sol\":1829:2501  function buyTokensWithAmount(uint256 tokenAmount) external payable whenNotPaused {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_269\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_200\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/DeepToken.sol\":1943:1944  0 */\n      0x00\n        /* \"contracts/DeepToken.sol\":1929:1940  tokenAmount */\n      dup2\n        /* \"contracts/DeepToken.sol\":1929:1944  tokenAmount > 0 */\n      gt\n        /* \"contracts/DeepToken.sol\":1921:1984  require(tokenAmount > 0, \"Token amount must be greater than 0\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"contracts/DeepToken.sol\":1995:2014  uint256 requiredETH */\n      0x00\n        /* \"contracts/DeepToken.sol\":2043:2053  tokenPrice */\n      sload(0x07)\n        /* \"contracts/DeepToken.sol\":2032:2039  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DeepToken.sol\":2018:2029  tokenAmount */\n      dup4\n        /* \"contracts/DeepToken.sol\":2018:2039  tokenAmount * 1 ether */\n      tag_274\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_274:\n        /* \"contracts/DeepToken.sol\":2017:2053  (tokenAmount * 1 ether) / tokenPrice */\n      tag_275\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_275:\n        /* \"contracts/DeepToken.sol\":1995:2053  uint256 requiredETH = (tokenAmount * 1 ether) / tokenPrice */\n      swap1\n      pop\n        /* \"contracts/DeepToken.sol\":2085:2096  requiredETH */\n      dup1\n        /* \"contracts/DeepToken.sol\":2072:2081  msg.value */\n      callvalue\n        /* \"contracts/DeepToken.sol\":2072:2096  msg.value >= requiredETH */\n      lt\n      iszero\n        /* \"contracts/DeepToken.sol\":2064:2122  require(msg.value >= requiredETH, \"Insufficient ETH sent\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"contracts/DeepToken.sol\":2172:2181  maxSupply */\n      sload(0x06)\n        /* \"contracts/DeepToken.sol\":2157:2168  tokenAmount */\n      dup3\n        /* \"contracts/DeepToken.sol\":2143:2154  totalMinted */\n      sload(0x08)\n        /* \"contracts/DeepToken.sol\":2143:2168  totalMinted + tokenAmount */\n      tag_279\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_279:\n        /* \"contracts/DeepToken.sol\":2143:2181  totalMinted + tokenAmount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/DeepToken.sol\":2135:2204  require(totalMinted + tokenAmount <= maxSupply, \"Exceeds max supply\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_206\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/DeepToken.sol\":2217:2247  _mint(msg.sender, tokenAmount) */\n      tag_282\n        /* \"contracts/DeepToken.sol\":2223:2233  msg.sender */\n      caller\n        /* \"contracts/DeepToken.sol\":2235:2246  tokenAmount */\n      dup4\n        /* \"contracts/DeepToken.sol\":2217:2222  _mint */\n      tag_208\n        /* \"contracts/DeepToken.sol\":2217:2247  _mint(msg.sender, tokenAmount) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/DeepToken.sol\":2273:2284  tokenAmount */\n      dup2\n        /* \"contracts/DeepToken.sol\":2258:2269  totalMinted */\n      0x08\n      0x00\n        /* \"contracts/DeepToken.sol\":2258:2284  totalMinted += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_283\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_283:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DeepToken.sol\":2343:2354  requiredETH */\n      dup1\n        /* \"contracts/DeepToken.sol\":2331:2340  msg.value */\n      callvalue\n        /* \"contracts/DeepToken.sol\":2331:2354  msg.value > requiredETH */\n      gt\n        /* \"contracts/DeepToken.sol\":2327:2436  if (msg.value > requiredETH) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"contracts/DeepToken.sol\":2379:2389  msg.sender */\n      caller\n        /* \"contracts/DeepToken.sol\":2371:2399  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DeepToken.sol\":2371:2424  payable(msg.sender).transfer(msg.value - requiredETH) */\n      0x08fc\n        /* \"contracts/DeepToken.sol\":2412:2423  requiredETH */\n      dup3\n        /* \"contracts/DeepToken.sol\":2400:2409  msg.value */\n      callvalue\n        /* \"contracts/DeepToken.sol\":2400:2423  msg.value - requiredETH */\n      tag_285\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"contracts/DeepToken.sol\":2371:2424  payable(msg.sender).transfer(msg.value - requiredETH) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n        /* \"contracts/DeepToken.sol\":2327:2436  if (msg.value > requiredETH) {... */\n    tag_284:\n        /* \"contracts/DeepToken.sol\":2469:2479  msg.sender */\n      caller\n        /* \"contracts/DeepToken.sol\":2453:2493  TokensPurchased(msg.sender, tokenAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc271\n        /* \"contracts/DeepToken.sol\":2481:2492  tokenAmount */\n      dup4\n        /* \"contracts/DeepToken.sol\":2453:2493  TokensPurchased(msg.sender, tokenAmount) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DeepToken.sol\":1910:2501  {... */\n      pop\n        /* \"contracts/DeepToken.sol\":1829:2501  function buyTokensWithAmount(uint256 tokenAmount) external payable whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_309\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_310\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_315\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_316\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_318\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_319\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_321\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_335\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_200\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_337\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_338\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_343\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_345\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_348\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_348:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_349)\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_353)\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_354\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_356\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap1\n      tag_359\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_357:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_360:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_361:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_362:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_363:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_364:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_406\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_360\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":711:782   */\n      tag_407\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_361\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_408\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_362\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":881:910   */\n      tag_409\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_363\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_41:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_411\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_364\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_366:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_368:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_369:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_417\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_368\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_370:\n        /* \"#utility.yul\":1876:1900   */\n      tag_419\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_369\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_420:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_371:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_422\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_370\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_372:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_373:\n        /* \"#utility.yul\":2232:2256   */\n      tag_425\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_372\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_426:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_374:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_428\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_373\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_45:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_431\n      tag_366\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2525:2644   */\n    tag_430:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_432\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_371\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_433\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_374\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_375:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_376:\n        /* \"#utility.yul\":3089:3110   */\n      tag_436\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_375\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_48:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_438\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_376\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_377:\n        /* \"#utility.yul\":3426:3450   */\n      tag_440\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_372\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_53:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_442\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_377\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_61:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_445\n      tag_366\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3801:3920   */\n    tag_444:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_446\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_371\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_447\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_371\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_448\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_374\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_378:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_379:\n        /* \"#utility.yul\":4491:4513   */\n      tag_451\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_378\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_68:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_453\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_379\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_72:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_456\n      tag_366\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4822:4941   */\n    tag_455:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_457\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_371\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_88:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_460\n      tag_366\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5157:5276   */\n    tag_459:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_461\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_374\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_380:\n        /* \"#utility.yul\":5503:5527   */\n      tag_463\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_369\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_125:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_465\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_380\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_148:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_468\n      tag_366\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5861:5980   */\n    tag_467:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_469\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_371\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_470\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_371\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_381:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_160:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_473:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_475\n      tag_381\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6664:6748   */\n    tag_474:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6928   */\n    tag_382:\n        /* \"#utility.yul\":6900:6920   */\n      0x4e6f2045544820746f2077697468647261770000000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6921   */\n      mstore\n        /* \"#utility.yul\":6760:6928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6934:7300   */\n    tag_383:\n        /* \"#utility.yul\":7076:7079   */\n      0x00\n        /* \"#utility.yul\":7097:7164   */\n      tag_478\n        /* \"#utility.yul\":7161:7163   */\n      0x12\n        /* \"#utility.yul\":7156:7159   */\n      dup4\n        /* \"#utility.yul\":7097:7164   */\n      tag_361\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7090:7164   */\n      swap2\n      pop\n        /* \"#utility.yul\":7173:7266   */\n      tag_479\n        /* \"#utility.yul\":7262:7265   */\n      dup3\n        /* \"#utility.yul\":7173:7266   */\n      tag_382\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7291:7293   */\n      0x20\n        /* \"#utility.yul\":7286:7289   */\n      dup3\n        /* \"#utility.yul\":7282:7294   */\n      add\n        /* \"#utility.yul\":7275:7294   */\n      swap1\n      pop\n        /* \"#utility.yul\":6934:7300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7306:7725   */\n    tag_187:\n        /* \"#utility.yul\":7472:7476   */\n      0x00\n        /* \"#utility.yul\":7510:7512   */\n      0x20\n        /* \"#utility.yul\":7499:7508   */\n      dup3\n        /* \"#utility.yul\":7495:7513   */\n      add\n        /* \"#utility.yul\":7487:7513   */\n      swap1\n      pop\n        /* \"#utility.yul\":7559:7568   */\n      dup2\n        /* \"#utility.yul\":7553:7557   */\n      dup2\n        /* \"#utility.yul\":7549:7569   */\n      sub\n        /* \"#utility.yul\":7545:7546   */\n      0x00\n        /* \"#utility.yul\":7534:7543   */\n      dup4\n        /* \"#utility.yul\":7530:7547   */\n      add\n        /* \"#utility.yul\":7523:7570   */\n      mstore\n        /* \"#utility.yul\":7587:7718   */\n      tag_481\n        /* \"#utility.yul\":7713:7717   */\n      dup2\n        /* \"#utility.yul\":7587:7718   */\n      tag_383\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7579:7718   */\n      swap1\n      pop\n        /* \"#utility.yul\":7306:7725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7731:7911   */\n    tag_384:\n        /* \"#utility.yul\":7779:7856   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7776:7777   */\n      0x00\n        /* \"#utility.yul\":7769:7857   */\n      mstore\n        /* \"#utility.yul\":7876:7880   */\n      0x11\n        /* \"#utility.yul\":7873:7874   */\n      0x04\n        /* \"#utility.yul\":7866:7881   */\n      mstore\n        /* \"#utility.yul\":7900:7904   */\n      0x24\n        /* \"#utility.yul\":7897:7898   */\n      0x00\n        /* \"#utility.yul\":7890:7905   */\n      revert\n        /* \"#utility.yul\":7917:8108   */\n    tag_203:\n        /* \"#utility.yul\":7957:7960   */\n      0x00\n        /* \"#utility.yul\":7976:7996   */\n      tag_484\n        /* \"#utility.yul\":7994:7995   */\n      dup3\n        /* \"#utility.yul\":7976:7996   */\n      tag_372\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7971:7996   */\n      swap2\n      pop\n        /* \"#utility.yul\":8010:8030   */\n      tag_485\n        /* \"#utility.yul\":8028:8029   */\n      dup4\n        /* \"#utility.yul\":8010:8030   */\n      tag_372\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8005:8030   */\n      swap3\n      pop\n        /* \"#utility.yul\":8053:8054   */\n      dup3\n        /* \"#utility.yul\":8050:8051   */\n      dup3\n        /* \"#utility.yul\":8046:8055   */\n      add\n        /* \"#utility.yul\":8039:8055   */\n      swap1\n      pop\n        /* \"#utility.yul\":8074:8077   */\n      dup1\n        /* \"#utility.yul\":8071:8072   */\n      dup3\n        /* \"#utility.yul\":8068:8078   */\n      gt\n        /* \"#utility.yul\":8065:8101   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":8081:8099   */\n      tag_487\n      tag_384\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8065:8101   */\n    tag_486:\n        /* \"#utility.yul\":7917:8108   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8114:8282   */\n    tag_385:\n        /* \"#utility.yul\":8254:8274   */\n      0x45786365656473206d617820737570706c790000000000000000000000000000\n        /* \"#utility.yul\":8250:8251   */\n      0x00\n        /* \"#utility.yul\":8242:8248   */\n      dup3\n        /* \"#utility.yul\":8238:8252   */\n      add\n        /* \"#utility.yul\":8231:8275   */\n      mstore\n        /* \"#utility.yul\":8114:8282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8288:8654   */\n    tag_386:\n        /* \"#utility.yul\":8430:8433   */\n      0x00\n        /* \"#utility.yul\":8451:8518   */\n      tag_490\n        /* \"#utility.yul\":8515:8517   */\n      0x12\n        /* \"#utility.yul\":8510:8513   */\n      dup4\n        /* \"#utility.yul\":8451:8518   */\n      tag_361\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8444:8518   */\n      swap2\n      pop\n        /* \"#utility.yul\":8527:8620   */\n      tag_491\n        /* \"#utility.yul\":8616:8619   */\n      dup3\n        /* \"#utility.yul\":8527:8620   */\n      tag_385\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8645:8647   */\n      0x20\n        /* \"#utility.yul\":8640:8643   */\n      dup3\n        /* \"#utility.yul\":8636:8648   */\n      add\n        /* \"#utility.yul\":8629:8648   */\n      swap1\n      pop\n        /* \"#utility.yul\":8288:8654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8660:9079   */\n    tag_206:\n        /* \"#utility.yul\":8826:8830   */\n      0x00\n        /* \"#utility.yul\":8864:8866   */\n      0x20\n        /* \"#utility.yul\":8853:8862   */\n      dup3\n        /* \"#utility.yul\":8849:8867   */\n      add\n        /* \"#utility.yul\":8841:8867   */\n      swap1\n      pop\n        /* \"#utility.yul\":8913:8922   */\n      dup2\n        /* \"#utility.yul\":8907:8911   */\n      dup2\n        /* \"#utility.yul\":8903:8923   */\n      sub\n        /* \"#utility.yul\":8899:8900   */\n      0x00\n        /* \"#utility.yul\":8888:8897   */\n      dup4\n        /* \"#utility.yul\":8884:8901   */\n      add\n        /* \"#utility.yul\":8877:8924   */\n      mstore\n        /* \"#utility.yul\":8941:9072   */\n      tag_493\n        /* \"#utility.yul\":9067:9071   */\n      dup2\n        /* \"#utility.yul\":8941:9072   */\n      tag_386\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8933:9072   */\n      swap1\n      pop\n        /* \"#utility.yul\":8660:9079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:9263   */\n    tag_387:\n        /* \"#utility.yul\":9225:9255   */\n      0x5072696365206d7573742062652067726561746572207468616e203000000000\n        /* \"#utility.yul\":9221:9222   */\n      0x00\n        /* \"#utility.yul\":9213:9219   */\n      dup3\n        /* \"#utility.yul\":9209:9223   */\n      add\n        /* \"#utility.yul\":9202:9256   */\n      mstore\n        /* \"#utility.yul\":9085:9263   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9269:9635   */\n    tag_388:\n        /* \"#utility.yul\":9411:9414   */\n      0x00\n        /* \"#utility.yul\":9432:9499   */\n      tag_496\n        /* \"#utility.yul\":9496:9498   */\n      0x1c\n        /* \"#utility.yul\":9491:9494   */\n      dup4\n        /* \"#utility.yul\":9432:9499   */\n      tag_361\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9425:9499   */\n      swap2\n      pop\n        /* \"#utility.yul\":9508:9601   */\n      tag_497\n        /* \"#utility.yul\":9597:9600   */\n      dup3\n        /* \"#utility.yul\":9508:9601   */\n      tag_387\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9626:9628   */\n      0x20\n        /* \"#utility.yul\":9621:9624   */\n      dup3\n        /* \"#utility.yul\":9617:9629   */\n      add\n        /* \"#utility.yul\":9610:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9269:9635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9641:10060   */\n    tag_221:\n        /* \"#utility.yul\":9807:9811   */\n      0x00\n        /* \"#utility.yul\":9845:9847   */\n      0x20\n        /* \"#utility.yul\":9834:9843   */\n      dup3\n        /* \"#utility.yul\":9830:9848   */\n      add\n        /* \"#utility.yul\":9822:9848   */\n      swap1\n      pop\n        /* \"#utility.yul\":9894:9903   */\n      dup2\n        /* \"#utility.yul\":9888:9892   */\n      dup2\n        /* \"#utility.yul\":9884:9904   */\n      sub\n        /* \"#utility.yul\":9880:9881   */\n      0x00\n        /* \"#utility.yul\":9869:9878   */\n      dup4\n        /* \"#utility.yul\":9865:9882   */\n      add\n        /* \"#utility.yul\":9858:9905   */\n      mstore\n        /* \"#utility.yul\":9922:10053   */\n      tag_499\n        /* \"#utility.yul\":10048:10052   */\n      dup2\n        /* \"#utility.yul\":9922:10053   */\n      tag_388\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9914:10053   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:10060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10066:10238   */\n    tag_389:\n        /* \"#utility.yul\":10206:10230   */\n      0x53656e642045544820746f2062757920746f6b656e7300000000000000000000\n        /* \"#utility.yul\":10202:10203   */\n      0x00\n        /* \"#utility.yul\":10194:10200   */\n      dup3\n        /* \"#utility.yul\":10190:10204   */\n      add\n        /* \"#utility.yul\":10183:10231   */\n      mstore\n        /* \"#utility.yul\":10066:10238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10244:10610   */\n    tag_390:\n        /* \"#utility.yul\":10386:10389   */\n      0x00\n        /* \"#utility.yul\":10407:10474   */\n      tag_502\n        /* \"#utility.yul\":10471:10473   */\n      0x16\n        /* \"#utility.yul\":10466:10469   */\n      dup4\n        /* \"#utility.yul\":10407:10474   */\n      tag_361\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10400:10474   */\n      swap2\n      pop\n        /* \"#utility.yul\":10483:10576   */\n      tag_503\n        /* \"#utility.yul\":10572:10575   */\n      dup3\n        /* \"#utility.yul\":10483:10576   */\n      tag_389\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10601:10603   */\n      0x20\n        /* \"#utility.yul\":10596:10599   */\n      dup3\n        /* \"#utility.yul\":10592:10604   */\n      add\n        /* \"#utility.yul\":10585:10604   */\n      swap1\n      pop\n        /* \"#utility.yul\":10244:10610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10616:11035   */\n    tag_250:\n        /* \"#utility.yul\":10782:10786   */\n      0x00\n        /* \"#utility.yul\":10820:10822   */\n      0x20\n        /* \"#utility.yul\":10809:10818   */\n      dup3\n        /* \"#utility.yul\":10805:10823   */\n      add\n        /* \"#utility.yul\":10797:10823   */\n      swap1\n      pop\n        /* \"#utility.yul\":10869:10878   */\n      dup2\n        /* \"#utility.yul\":10863:10867   */\n      dup2\n        /* \"#utility.yul\":10859:10879   */\n      sub\n        /* \"#utility.yul\":10855:10856   */\n      0x00\n        /* \"#utility.yul\":10844:10853   */\n      dup4\n        /* \"#utility.yul\":10840:10857   */\n      add\n        /* \"#utility.yul\":10833:10880   */\n      mstore\n        /* \"#utility.yul\":10897:11028   */\n      tag_505\n        /* \"#utility.yul\":11023:11027   */\n      dup2\n        /* \"#utility.yul\":10897:11028   */\n      tag_390\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10889:11028   */\n      swap1\n      pop\n        /* \"#utility.yul\":10616:11035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11041:11451   */\n    tag_252:\n        /* \"#utility.yul\":11081:11088   */\n      0x00\n        /* \"#utility.yul\":11104:11124   */\n      tag_507\n        /* \"#utility.yul\":11122:11123   */\n      dup3\n        /* \"#utility.yul\":11104:11124   */\n      tag_372\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":11099:11124   */\n      swap2\n      pop\n        /* \"#utility.yul\":11138:11158   */\n      tag_508\n        /* \"#utility.yul\":11156:11157   */\n      dup4\n        /* \"#utility.yul\":11138:11158   */\n      tag_372\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":11133:11158   */\n      swap3\n      pop\n        /* \"#utility.yul\":11193:11194   */\n      dup3\n        /* \"#utility.yul\":11190:11191   */\n      dup3\n        /* \"#utility.yul\":11186:11195   */\n      mul\n        /* \"#utility.yul\":11215:11245   */\n      tag_509\n        /* \"#utility.yul\":11233:11244   */\n      dup2\n        /* \"#utility.yul\":11215:11245   */\n      tag_372\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11204:11245   */\n      swap2\n      pop\n        /* \"#utility.yul\":11394:11395   */\n      dup3\n        /* \"#utility.yul\":11385:11392   */\n      dup3\n        /* \"#utility.yul\":11381:11396   */\n      div\n        /* \"#utility.yul\":11378:11379   */\n      dup5\n        /* \"#utility.yul\":11375:11397   */\n      eq\n        /* \"#utility.yul\":11355:11356   */\n      dup4\n        /* \"#utility.yul\":11348:11357   */\n      iszero\n        /* \"#utility.yul\":11328:11411   */\n      or\n        /* \"#utility.yul\":11305:11444   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":11424:11442   */\n      tag_511\n      tag_384\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":11305:11444   */\n    tag_510:\n        /* \"#utility.yul\":11089:11451   */\n      pop\n        /* \"#utility.yul\":11041:11451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11457:11637   */\n    tag_391:\n        /* \"#utility.yul\":11505:11582   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11502:11503   */\n      0x00\n        /* \"#utility.yul\":11495:11583   */\n      mstore\n        /* \"#utility.yul\":11602:11606   */\n      0x12\n        /* \"#utility.yul\":11599:11600   */\n      0x04\n        /* \"#utility.yul\":11592:11607   */\n      mstore\n        /* \"#utility.yul\":11626:11630   */\n      0x24\n        /* \"#utility.yul\":11623:11624   */\n      0x00\n        /* \"#utility.yul\":11616:11631   */\n      revert\n        /* \"#utility.yul\":11643:11828   */\n    tag_254:\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11700:11720   */\n      tag_514\n        /* \"#utility.yul\":11718:11719   */\n      dup3\n        /* \"#utility.yul\":11700:11720   */\n      tag_372\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":11695:11720   */\n      swap2\n      pop\n        /* \"#utility.yul\":11734:11754   */\n      tag_515\n        /* \"#utility.yul\":11752:11753   */\n      dup4\n        /* \"#utility.yul\":11734:11754   */\n      tag_372\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11729:11754   */\n      swap3\n      pop\n        /* \"#utility.yul\":11773:11774   */\n      dup3\n        /* \"#utility.yul\":11763:11798   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":11778:11796   */\n      tag_517\n      tag_391\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11763:11798   */\n    tag_516:\n        /* \"#utility.yul\":11820:11821   */\n      dup3\n        /* \"#utility.yul\":11817:11818   */\n      dup3\n        /* \"#utility.yul\":11813:11822   */\n      div\n        /* \"#utility.yul\":11808:11822   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:11828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11834:12056   */\n    tag_392:\n        /* \"#utility.yul\":11974:12008   */\n      0x546f6b656e20616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":11970:11971   */\n      0x00\n        /* \"#utility.yul\":11962:11968   */\n      dup3\n        /* \"#utility.yul\":11958:11972   */\n      add\n        /* \"#utility.yul\":11951:12009   */\n      mstore\n        /* \"#utility.yul\":12043:12048   */\n      0x6e20300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12038:12040   */\n      0x20\n        /* \"#utility.yul\":12030:12036   */\n      dup3\n        /* \"#utility.yul\":12026:12041   */\n      add\n        /* \"#utility.yul\":12019:12049   */\n      mstore\n        /* \"#utility.yul\":11834:12056   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12062:12428   */\n    tag_393:\n        /* \"#utility.yul\":12204:12207   */\n      0x00\n        /* \"#utility.yul\":12225:12292   */\n      tag_520\n        /* \"#utility.yul\":12289:12291   */\n      0x23\n        /* \"#utility.yul\":12284:12287   */\n      dup4\n        /* \"#utility.yul\":12225:12292   */\n      tag_361\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12218:12292   */\n      swap2\n      pop\n        /* \"#utility.yul\":12301:12394   */\n      tag_521\n        /* \"#utility.yul\":12390:12393   */\n      dup3\n        /* \"#utility.yul\":12301:12394   */\n      tag_392\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":12419:12421   */\n      0x40\n        /* \"#utility.yul\":12414:12417   */\n      dup3\n        /* \"#utility.yul\":12410:12422   */\n      add\n        /* \"#utility.yul\":12403:12422   */\n      swap1\n      pop\n        /* \"#utility.yul\":12062:12428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12434:12853   */\n    tag_273:\n        /* \"#utility.yul\":12600:12604   */\n      0x00\n        /* \"#utility.yul\":12638:12640   */\n      0x20\n        /* \"#utility.yul\":12627:12636   */\n      dup3\n        /* \"#utility.yul\":12623:12641   */\n      add\n        /* \"#utility.yul\":12615:12641   */\n      swap1\n      pop\n        /* \"#utility.yul\":12687:12696   */\n      dup2\n        /* \"#utility.yul\":12681:12685   */\n      dup2\n        /* \"#utility.yul\":12677:12697   */\n      sub\n        /* \"#utility.yul\":12673:12674   */\n      0x00\n        /* \"#utility.yul\":12662:12671   */\n      dup4\n        /* \"#utility.yul\":12658:12675   */\n      add\n        /* \"#utility.yul\":12651:12698   */\n      mstore\n        /* \"#utility.yul\":12715:12846   */\n      tag_523\n        /* \"#utility.yul\":12841:12845   */\n      dup2\n        /* \"#utility.yul\":12715:12846   */\n      tag_393\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":12707:12846   */\n      swap1\n      pop\n        /* \"#utility.yul\":12434:12853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12859:13030   */\n    tag_394:\n        /* \"#utility.yul\":12999:13022   */\n      0x496e73756666696369656e74204554482073656e740000000000000000000000\n        /* \"#utility.yul\":12995:12996   */\n      0x00\n        /* \"#utility.yul\":12987:12993   */\n      dup3\n        /* \"#utility.yul\":12983:12997   */\n      add\n        /* \"#utility.yul\":12976:13023   */\n      mstore\n        /* \"#utility.yul\":12859:13030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13036:13402   */\n    tag_395:\n        /* \"#utility.yul\":13178:13181   */\n      0x00\n        /* \"#utility.yul\":13199:13266   */\n      tag_526\n        /* \"#utility.yul\":13263:13265   */\n      0x15\n        /* \"#utility.yul\":13258:13261   */\n      dup4\n        /* \"#utility.yul\":13199:13266   */\n      tag_361\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":13192:13266   */\n      swap2\n      pop\n        /* \"#utility.yul\":13275:13368   */\n      tag_527\n        /* \"#utility.yul\":13364:13367   */\n      dup3\n        /* \"#utility.yul\":13275:13368   */\n      tag_394\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":13393:13395   */\n      0x20\n        /* \"#utility.yul\":13388:13391   */\n      dup3\n        /* \"#utility.yul\":13384:13396   */\n      add\n        /* \"#utility.yul\":13377:13396   */\n      swap1\n      pop\n        /* \"#utility.yul\":13036:13402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13408:13827   */\n    tag_278:\n        /* \"#utility.yul\":13574:13578   */\n      0x00\n        /* \"#utility.yul\":13612:13614   */\n      0x20\n        /* \"#utility.yul\":13601:13610   */\n      dup3\n        /* \"#utility.yul\":13597:13615   */\n      add\n        /* \"#utility.yul\":13589:13615   */\n      swap1\n      pop\n        /* \"#utility.yul\":13661:13670   */\n      dup2\n        /* \"#utility.yul\":13655:13659   */\n      dup2\n        /* \"#utility.yul\":13651:13671   */\n      sub\n        /* \"#utility.yul\":13647:13648   */\n      0x00\n        /* \"#utility.yul\":13636:13645   */\n      dup4\n        /* \"#utility.yul\":13632:13649   */\n      add\n        /* \"#utility.yul\":13625:13672   */\n      mstore\n        /* \"#utility.yul\":13689:13820   */\n      tag_529\n        /* \"#utility.yul\":13815:13819   */\n      dup2\n        /* \"#utility.yul\":13689:13820   */\n      tag_395\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13681:13820   */\n      swap1\n      pop\n        /* \"#utility.yul\":13408:13827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13833:14027   */\n    tag_286:\n        /* \"#utility.yul\":13873:13877   */\n      0x00\n        /* \"#utility.yul\":13893:13913   */\n      tag_531\n        /* \"#utility.yul\":13911:13912   */\n      dup3\n        /* \"#utility.yul\":13893:13913   */\n      tag_372\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":13888:13913   */\n      swap2\n      pop\n        /* \"#utility.yul\":13927:13947   */\n      tag_532\n        /* \"#utility.yul\":13945:13946   */\n      dup4\n        /* \"#utility.yul\":13927:13947   */\n      tag_372\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":13922:13947   */\n      swap3\n      pop\n        /* \"#utility.yul\":13971:13972   */\n      dup3\n        /* \"#utility.yul\":13968:13969   */\n      dup3\n        /* \"#utility.yul\":13964:13973   */\n      sub\n        /* \"#utility.yul\":13956:13973   */\n      swap1\n      pop\n        /* \"#utility.yul\":13995:13996   */\n      dup2\n        /* \"#utility.yul\":13989:13993   */\n      dup2\n        /* \"#utility.yul\":13986:13997   */\n      gt\n        /* \"#utility.yul\":13983:14020   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":14000:14018   */\n      tag_534\n      tag_384\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13983:14020   */\n    tag_533:\n        /* \"#utility.yul\":13833:14027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14033:14475   */\n    tag_299:\n        /* \"#utility.yul\":14182:14186   */\n      0x00\n        /* \"#utility.yul\":14220:14222   */\n      0x60\n        /* \"#utility.yul\":14209:14218   */\n      dup3\n        /* \"#utility.yul\":14205:14223   */\n      add\n        /* \"#utility.yul\":14197:14223   */\n      swap1\n      pop\n        /* \"#utility.yul\":14233:14304   */\n      tag_536\n        /* \"#utility.yul\":14301:14302   */\n      0x00\n        /* \"#utility.yul\":14290:14299   */\n      dup4\n        /* \"#utility.yul\":14286:14303   */\n      add\n        /* \"#utility.yul\":14277:14283   */\n      dup7\n        /* \"#utility.yul\":14233:14304   */\n      tag_380\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14314:14386   */\n      tag_537\n        /* \"#utility.yul\":14382:14384   */\n      0x20\n        /* \"#utility.yul\":14371:14380   */\n      dup4\n        /* \"#utility.yul\":14367:14385   */\n      add\n        /* \"#utility.yul\":14358:14364   */\n      dup6\n        /* \"#utility.yul\":14314:14386   */\n      tag_377\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14396:14468   */\n      tag_538\n        /* \"#utility.yul\":14464:14466   */\n      0x40\n        /* \"#utility.yul\":14453:14462   */\n      dup4\n        /* \"#utility.yul\":14449:14467   */\n      add\n        /* \"#utility.yul\":14440:14446   */\n      dup5\n        /* \"#utility.yul\":14396:14468   */\n      tag_377\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14033:14475   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14481:14647   */\n    tag_396:\n        /* \"#utility.yul\":14621:14639   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":14617:14618   */\n      0x00\n        /* \"#utility.yul\":14609:14615   */\n      dup3\n        /* \"#utility.yul\":14605:14619   */\n      add\n        /* \"#utility.yul\":14598:14640   */\n      mstore\n        /* \"#utility.yul\":14481:14647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14653:15019   */\n    tag_397:\n        /* \"#utility.yul\":14795:14798   */\n      0x00\n        /* \"#utility.yul\":14816:14883   */\n      tag_541\n        /* \"#utility.yul\":14880:14882   */\n      0x10\n        /* \"#utility.yul\":14875:14878   */\n      dup4\n        /* \"#utility.yul\":14816:14883   */\n      tag_361\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14809:14883   */\n      swap2\n      pop\n        /* \"#utility.yul\":14892:14985   */\n      tag_542\n        /* \"#utility.yul\":14981:14984   */\n      dup3\n        /* \"#utility.yul\":14892:14985   */\n      tag_396\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15010:15012   */\n      0x20\n        /* \"#utility.yul\":15005:15008   */\n      dup3\n        /* \"#utility.yul\":15001:15013   */\n      add\n        /* \"#utility.yul\":14994:15013   */\n      swap1\n      pop\n        /* \"#utility.yul\":14653:15019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15025:15444   */\n    tag_324:\n        /* \"#utility.yul\":15191:15195   */\n      0x00\n        /* \"#utility.yul\":15229:15231   */\n      0x20\n        /* \"#utility.yul\":15218:15227   */\n      dup3\n        /* \"#utility.yul\":15214:15232   */\n      add\n        /* \"#utility.yul\":15206:15232   */\n      swap1\n      pop\n        /* \"#utility.yul\":15278:15287   */\n      dup2\n        /* \"#utility.yul\":15272:15276   */\n      dup2\n        /* \"#utility.yul\":15268:15288   */\n      sub\n        /* \"#utility.yul\":15264:15265   */\n      0x00\n        /* \"#utility.yul\":15253:15262   */\n      dup4\n        /* \"#utility.yul\":15249:15266   */\n      add\n        /* \"#utility.yul\":15242:15289   */\n      mstore\n        /* \"#utility.yul\":15306:15437   */\n      tag_544\n        /* \"#utility.yul\":15432:15436   */\n      dup2\n        /* \"#utility.yul\":15306:15437   */\n      tag_397\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15298:15437   */\n      swap1\n      pop\n        /* \"#utility.yul\":15025:15444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15450:15620   */\n    tag_398:\n        /* \"#utility.yul\":15590:15612   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":15586:15587   */\n      0x00\n        /* \"#utility.yul\":15578:15584   */\n      dup3\n        /* \"#utility.yul\":15574:15588   */\n      add\n        /* \"#utility.yul\":15567:15613   */\n      mstore\n        /* \"#utility.yul\":15450:15620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15626:15992   */\n    tag_399:\n        /* \"#utility.yul\":15768:15771   */\n      0x00\n        /* \"#utility.yul\":15789:15856   */\n      tag_547\n        /* \"#utility.yul\":15853:15855   */\n      0x14\n        /* \"#utility.yul\":15848:15851   */\n      dup4\n        /* \"#utility.yul\":15789:15856   */\n      tag_361\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":15782:15856   */\n      swap2\n      pop\n        /* \"#utility.yul\":15865:15958   */\n      tag_548\n        /* \"#utility.yul\":15954:15957   */\n      dup3\n        /* \"#utility.yul\":15865:15958   */\n      tag_398\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15983:15985   */\n      0x20\n        /* \"#utility.yul\":15978:15981   */\n      dup3\n        /* \"#utility.yul\":15974:15986   */\n      add\n        /* \"#utility.yul\":15967:15986   */\n      swap1\n      pop\n        /* \"#utility.yul\":15626:15992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15998:16417   */\n    tag_359:\n        /* \"#utility.yul\":16164:16168   */\n      0x00\n        /* \"#utility.yul\":16202:16204   */\n      0x20\n        /* \"#utility.yul\":16191:16200   */\n      dup3\n        /* \"#utility.yul\":16187:16205   */\n      add\n        /* \"#utility.yul\":16179:16205   */\n      swap1\n      pop\n        /* \"#utility.yul\":16251:16260   */\n      dup2\n        /* \"#utility.yul\":16245:16249   */\n      dup2\n        /* \"#utility.yul\":16241:16261   */\n      sub\n        /* \"#utility.yul\":16237:16238   */\n      0x00\n        /* \"#utility.yul\":16226:16235   */\n      dup4\n        /* \"#utility.yul\":16222:16239   */\n      add\n        /* \"#utility.yul\":16215:16262   */\n      mstore\n        /* \"#utility.yul\":16279:16410   */\n      tag_550\n        /* \"#utility.yul\":16405:16409   */\n      dup2\n        /* \"#utility.yul\":16279:16410   */\n      tag_399\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":16271:16410   */\n      swap1\n      pop\n        /* \"#utility.yul\":15998:16417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122092017a355a0f9c45c6e8c2142711d2995adba25e6d52940f0cde03a23b176bbf64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_747": {
									"entryPoint": 549,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 354,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 682,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2858,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12181:8",
										"nodeType": "YulBlock",
										"src": "0:12181:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "423:28:8",
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:8",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:12:8",
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nativeSrc": "433:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nativeSrc": "546:28:8",
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nativeSrc": "556:12:8",
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nativeSrc": "556:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nativeSrc": "628:54:8",
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nativeSrc": "638:38:8",
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:8",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nativeSrc": "652:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:8",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nativeSrc": "668:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nativeSrc": "648:28:8",
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:8",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:8",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nativeSrc": "716:152:8",
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:8",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:8",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nativeSrc": "726:88:8",
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nativeSrc": "726:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:8",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:8",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nativeSrc": "823:15:8",
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nativeSrc": "823:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:8",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nativeSrc": "847:15:8",
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nativeSrc": "847:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nativeSrc": "917:238:8",
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nativeSrc": "927:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nativeSrc": "957:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nativeSrc": "945:40:8",
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:8",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:8",
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nativeSrc": "1098:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nativeSrc": "1098:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nativeSrc": "1036:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nativeSrc": "1072:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nativeSrc": "1033:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nativeSrc": "1030:88:8",
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nativeSrc": "1127:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nativeSrc": "1127:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:8",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:8",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nativeSrc": "1202:88:8",
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nativeSrc": "1212:30:8",
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nativeSrc": "1222:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nativeSrc": "1251:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nativeSrc": "1251:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:8",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:8",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nativeSrc": "1363:241:8",
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:8",
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nativeSrc": "1470:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nativeSrc": "1470:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nativeSrc": "1437:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nativeSrc": "1434:56:8",
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nativeSrc": "1500:37:8",
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nativeSrc": "1508:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nativeSrc": "1574:23:8",
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nativeSrc": "1582:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:8",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:8",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nativeSrc": "1672:77:8",
													"nodeType": "YulBlock",
													"src": "1672:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:8"
																},
																"nativeSrc": "1683:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:8"
															},
															"nativeSrc": "1683:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:8"
																		},
																		"nativeSrc": "1722:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:8"
																},
																"nativeSrc": "1715:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:8"
															},
															"nativeSrc": "1715:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:8",
														"nodeType": "YulTypedName",
														"src": "1654:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:8",
														"nodeType": "YulTypedName",
														"src": "1659:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:8",
														"nodeType": "YulTypedName",
														"src": "1664:6:8",
														"type": ""
													}
												],
												"src": "1610:139:8"
											},
											{
												"body": {
													"nativeSrc": "1850:339:8",
													"nodeType": "YulBlock",
													"src": "1850:339:8",
													"statements": [
														{
															"nativeSrc": "1860:75:8",
															"nodeType": "YulAssignment",
															"src": "1860:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:8"
																		},
																		"nativeSrc": "1885:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:8"
																},
																"nativeSrc": "1869:66:8",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																},
																"nativeSrc": "1944:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:8"
															},
															"nativeSrc": "1944:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:8"
														},
														{
															"nativeSrc": "1974:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:8"
																},
																"nativeSrc": "1985:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:8",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:8",
																"nodeType": "YulBlock",
																"src": "2039:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:8"
																			},
																			"nativeSrc": "2041:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:8"
																		},
																		"nativeSrc": "2041:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:8"
																		},
																		"nativeSrc": "2016:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:8"
																},
																"nativeSrc": "2013:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:8"
															},
															"nativeSrc": "2010:112:8",
															"nodeType": "YulIf",
															"src": "2010:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:8"
																},
																"nativeSrc": "2131:52:8",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:8"
															},
															"nativeSrc": "2131:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:8",
														"nodeType": "YulTypedName",
														"src": "1823:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:8",
														"nodeType": "YulTypedName",
														"src": "1828:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:8",
														"nodeType": "YulTypedName",
														"src": "1836:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:8",
														"nodeType": "YulTypedName",
														"src": "1844:5:8",
														"type": ""
													}
												],
												"src": "1755:434:8"
											},
											{
												"body": {
													"nativeSrc": "2282:282:8",
													"nodeType": "YulBlock",
													"src": "2282:282:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:8",
																"nodeType": "YulBlock",
																"src": "2331:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:8"
																			},
																			"nativeSrc": "2333:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:8"
																		},
																		"nativeSrc": "2333:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:8"
																				},
																				"nativeSrc": "2306:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:8"
																		},
																		"nativeSrc": "2302:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:8"
																},
																"nativeSrc": "2295:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:8"
															},
															"nativeSrc": "2292:122:8",
															"nodeType": "YulIf",
															"src": "2292:122:8"
														},
														{
															"nativeSrc": "2423:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:8"
																},
																"nativeSrc": "2437:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:8",
															"nodeType": "YulAssignment",
															"src": "2459:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:8"
																		},
																		"nativeSrc": "2527:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:8"
																},
																"nativeSrc": "2468:90:8",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:8",
														"nodeType": "YulTypedName",
														"src": "2260:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:8",
														"nodeType": "YulTypedName",
														"src": "2268:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:8",
														"nodeType": "YulTypedName",
														"src": "2276:5:8",
														"type": ""
													}
												],
												"src": "2209:355:8"
											},
											{
												"body": {
													"nativeSrc": "2615:32:8",
													"nodeType": "YulBlock",
													"src": "2615:32:8",
													"statements": [
														{
															"nativeSrc": "2625:16:8",
															"nodeType": "YulAssignment",
															"src": "2625:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:8",
																"nodeType": "YulIdentifier",
																"src": "2636:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:8",
														"nodeType": "YulTypedName",
														"src": "2597:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:8",
														"nodeType": "YulTypedName",
														"src": "2607:7:8",
														"type": ""
													}
												],
												"src": "2570:77:8"
											},
											{
												"body": {
													"nativeSrc": "2696:79:8",
													"nodeType": "YulBlock",
													"src": "2696:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:8",
																"nodeType": "YulBlock",
																"src": "2753:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:8"
																			},
																			"nativeSrc": "2755:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:8"
																		},
																		"nativeSrc": "2755:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:8"
																				},
																				"nativeSrc": "2726:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:8"
																		},
																		"nativeSrc": "2716:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:8"
																},
																"nativeSrc": "2709:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:8"
															},
															"nativeSrc": "2706:63:8",
															"nodeType": "YulIf",
															"src": "2706:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:8",
														"nodeType": "YulTypedName",
														"src": "2689:5:8",
														"type": ""
													}
												],
												"src": "2653:122:8"
											},
											{
												"body": {
													"nativeSrc": "2844:80:8",
													"nodeType": "YulBlock",
													"src": "2844:80:8",
													"statements": [
														{
															"nativeSrc": "2854:22:8",
															"nodeType": "YulAssignment",
															"src": "2854:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:8"
																},
																"nativeSrc": "2863:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:8"
																},
																"nativeSrc": "2885:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:8"
															},
															"nativeSrc": "2885:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:8",
														"nodeType": "YulTypedName",
														"src": "2822:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:8",
														"nodeType": "YulTypedName",
														"src": "2830:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:8",
														"nodeType": "YulTypedName",
														"src": "2838:5:8",
														"type": ""
													}
												],
												"src": "2781:143:8"
											},
											{
												"body": {
													"nativeSrc": "3095:1158:8",
													"nodeType": "YulBlock",
													"src": "3095:1158:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3142:83:8",
																"nodeType": "YulBlock",
																"src": "3142:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3144:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3144:77:8"
																			},
																			"nativeSrc": "3144:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3144:79:8"
																		},
																		"nativeSrc": "3144:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3144:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:8"
																		},
																		"nativeSrc": "3112:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3112:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3137:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3108:3:8"
																},
																"nativeSrc": "3108:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3108:33:8"
															},
															"nativeSrc": "3105:120:8",
															"nodeType": "YulIf",
															"src": "3105:120:8"
														},
														{
															"nativeSrc": "3235:291:8",
															"nodeType": "YulBlock",
															"src": "3235:291:8",
															"statements": [
																{
																	"nativeSrc": "3250:38:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3250:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3274:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3274:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3285:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3285:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3270:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3270:3:8"
																				},
																				"nativeSrc": "3270:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3270:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3264:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3264:5:8"
																		},
																		"nativeSrc": "3264:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3264:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3254:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3254:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3335:83:8",
																		"nodeType": "YulBlock",
																		"src": "3335:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3337:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3337:77:8"
																					},
																					"nativeSrc": "3337:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3337:79:8"
																				},
																				"nativeSrc": "3337:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3337:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3307:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3307:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3315:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3315:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3304:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3304:2:8"
																		},
																		"nativeSrc": "3304:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3304:30:8"
																	},
																	"nativeSrc": "3301:117:8",
																	"nodeType": "YulIf",
																	"src": "3301:117:8"
																},
																{
																	"nativeSrc": "3432:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3432:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3488:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3488:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3499:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3499:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3484:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3484:3:8"
																				},
																				"nativeSrc": "3484:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3484:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3508:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3508:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3442:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3442:41:8"
																		},
																		"nativeSrc": "3442:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3442:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3432:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3432:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3536:292:8",
															"nodeType": "YulBlock",
															"src": "3536:292:8",
															"statements": [
																{
																	"nativeSrc": "3551:39:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3551:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3575:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3586:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3586:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3571:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:8"
																				},
																				"nativeSrc": "3571:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3565:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3565:5:8"
																		},
																		"nativeSrc": "3565:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3565:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3555:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3555:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3637:83:8",
																		"nodeType": "YulBlock",
																		"src": "3637:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3639:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3639:77:8"
																					},
																					"nativeSrc": "3639:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3639:79:8"
																				},
																				"nativeSrc": "3639:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3639:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3609:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3617:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3617:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3606:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3606:2:8"
																		},
																		"nativeSrc": "3606:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:30:8"
																	},
																	"nativeSrc": "3603:117:8",
																	"nodeType": "YulIf",
																	"src": "3603:117:8"
																},
																{
																	"nativeSrc": "3734:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3734:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3790:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3790:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3801:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3801:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3786:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3786:3:8"
																				},
																				"nativeSrc": "3786:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3810:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3810:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3744:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3744:41:8"
																		},
																		"nativeSrc": "3744:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3744:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3734:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3734:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3838:129:8",
															"nodeType": "YulBlock",
															"src": "3838:129:8",
															"statements": [
																{
																	"nativeSrc": "3853:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3867:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3883:74:8",
																	"nodeType": "YulAssignment",
																	"src": "3883:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3929:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3929:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3940:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3940:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3925:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3925:3:8"
																				},
																				"nativeSrc": "3925:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3925:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3949:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3949:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3893:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "3893:31:8"
																		},
																		"nativeSrc": "3893:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3883:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3883:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3977:129:8",
															"nodeType": "YulBlock",
															"src": "3977:129:8",
															"statements": [
																{
																	"nativeSrc": "3992:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3992:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4006:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3996:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3996:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4022:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4022:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4068:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4068:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4079:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4079:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4064:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4064:3:8"
																				},
																				"nativeSrc": "4064:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4064:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4088:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4088:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4032:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4032:31:8"
																		},
																		"nativeSrc": "4032:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4032:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4022:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4022:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4116:130:8",
															"nodeType": "YulBlock",
															"src": "4116:130:8",
															"statements": [
																{
																	"nativeSrc": "4131:17:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4131:17:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4145:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4145:3:8",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4135:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4135:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4162:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4162:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4208:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4208:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4219:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4219:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4204:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4204:3:8"
																				},
																				"nativeSrc": "4204:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4228:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4228:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4172:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4172:31:8"
																		},
																		"nativeSrc": "4172:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4172:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "2930:1323:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3033:9:8",
														"nodeType": "YulTypedName",
														"src": "3033:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3044:7:8",
														"nodeType": "YulTypedName",
														"src": "3044:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3056:6:8",
														"nodeType": "YulTypedName",
														"src": "3056:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3064:6:8",
														"nodeType": "YulTypedName",
														"src": "3064:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3072:6:8",
														"nodeType": "YulTypedName",
														"src": "3072:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3080:6:8",
														"nodeType": "YulTypedName",
														"src": "3080:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3088:6:8",
														"nodeType": "YulTypedName",
														"src": "3088:6:8",
														"type": ""
													}
												],
												"src": "2930:1323:8"
											},
											{
												"body": {
													"nativeSrc": "4318:40:8",
													"nodeType": "YulBlock",
													"src": "4318:40:8",
													"statements": [
														{
															"nativeSrc": "4329:22:8",
															"nodeType": "YulAssignment",
															"src": "4329:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4345:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4339:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4339:5:8"
																},
																"nativeSrc": "4339:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4339:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4329:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4259:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4301:5:8",
														"nodeType": "YulTypedName",
														"src": "4301:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4311:6:8",
														"nodeType": "YulTypedName",
														"src": "4311:6:8",
														"type": ""
													}
												],
												"src": "4259:99:8"
											},
											{
												"body": {
													"nativeSrc": "4392:152:8",
													"nodeType": "YulBlock",
													"src": "4392:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4409:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4409:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4412:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4412:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:8"
																},
																"nativeSrc": "4402:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4402:88:8"
															},
															"nativeSrc": "4402:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4402:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4506:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4506:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4509:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4509:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4499:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4499:6:8"
																},
																"nativeSrc": "4499:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4499:15:8"
															},
															"nativeSrc": "4499:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4499:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4530:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4530:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4533:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4533:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4523:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4523:6:8"
																},
																"nativeSrc": "4523:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4523:15:8"
															},
															"nativeSrc": "4523:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4523:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4364:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4364:180:8"
											},
											{
												"body": {
													"nativeSrc": "4601:269:8",
													"nodeType": "YulBlock",
													"src": "4601:269:8",
													"statements": [
														{
															"nativeSrc": "4611:22:8",
															"nodeType": "YulAssignment",
															"src": "4611:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4625:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4625:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4621:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:8"
																},
																"nativeSrc": "4621:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4621:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4611:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:8"
																}
															]
														},
														{
															"nativeSrc": "4642:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4672:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4672:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4678:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4678:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4668:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:8"
																},
																"nativeSrc": "4668:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4668:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4646:18:8",
																	"nodeType": "YulTypedName",
																	"src": "4646:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4719:51:8",
																"nodeType": "YulBlock",
																"src": "4719:51:8",
																"statements": [
																	{
																		"nativeSrc": "4733:27:8",
																		"nodeType": "YulAssignment",
																		"src": "4733:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4747:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4747:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4755:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4755:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4743:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4743:3:8"
																			},
																			"nativeSrc": "4743:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4743:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4733:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4733:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4699:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4699:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4692:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:8"
																},
																"nativeSrc": "4692:26:8",
																"nodeType": "YulFunctionCall",
																"src": "4692:26:8"
															},
															"nativeSrc": "4689:81:8",
															"nodeType": "YulIf",
															"src": "4689:81:8"
														},
														{
															"body": {
																"nativeSrc": "4822:42:8",
																"nodeType": "YulBlock",
																"src": "4822:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4836:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4836:16:8"
																			},
																			"nativeSrc": "4836:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4836:18:8"
																		},
																		"nativeSrc": "4836:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4836:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4786:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4786:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4809:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4809:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4817:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4817:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4806:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4806:2:8"
																		},
																		"nativeSrc": "4806:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4806:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4783:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4783:2:8"
																},
																"nativeSrc": "4783:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4783:38:8"
															},
															"nativeSrc": "4780:84:8",
															"nodeType": "YulIf",
															"src": "4780:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4550:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4585:4:8",
														"nodeType": "YulTypedName",
														"src": "4585:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4594:6:8",
														"nodeType": "YulTypedName",
														"src": "4594:6:8",
														"type": ""
													}
												],
												"src": "4550:320:8"
											},
											{
												"body": {
													"nativeSrc": "4930:87:8",
													"nodeType": "YulBlock",
													"src": "4930:87:8",
													"statements": [
														{
															"nativeSrc": "4940:11:8",
															"nodeType": "YulAssignment",
															"src": "4940:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "4948:3:8",
																"nodeType": "YulIdentifier",
																"src": "4948:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4940:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4940:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4968:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4968:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4971:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4971:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4961:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4961:6:8"
																},
																"nativeSrc": "4961:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4961:14:8"
															},
															"nativeSrc": "4961:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "4961:14:8"
														},
														{
															"nativeSrc": "4984:26:8",
															"nodeType": "YulAssignment",
															"src": "4984:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5002:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5002:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5005:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4992:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4992:9:8"
																},
																"nativeSrc": "4992:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4992:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4984:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4984:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4876:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4917:3:8",
														"nodeType": "YulTypedName",
														"src": "4917:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4925:4:8",
														"nodeType": "YulTypedName",
														"src": "4925:4:8",
														"type": ""
													}
												],
												"src": "4876:141:8"
											},
											{
												"body": {
													"nativeSrc": "5067:49:8",
													"nodeType": "YulBlock",
													"src": "5067:49:8",
													"statements": [
														{
															"nativeSrc": "5077:33:8",
															"nodeType": "YulAssignment",
															"src": "5077:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5095:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5095:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5102:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5102:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5091:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5091:3:8"
																		},
																		"nativeSrc": "5091:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5107:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5087:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5087:3:8"
																},
																"nativeSrc": "5087:23:8",
																"nodeType": "YulFunctionCall",
																"src": "5087:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5077:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5023:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5050:5:8",
														"nodeType": "YulTypedName",
														"src": "5050:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5060:6:8",
														"nodeType": "YulTypedName",
														"src": "5060:6:8",
														"type": ""
													}
												],
												"src": "5023:93:8"
											},
											{
												"body": {
													"nativeSrc": "5175:54:8",
													"nodeType": "YulBlock",
													"src": "5175:54:8",
													"statements": [
														{
															"nativeSrc": "5185:37:8",
															"nodeType": "YulAssignment",
															"src": "5185:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5210:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5216:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5216:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5206:3:8"
																},
																"nativeSrc": "5206:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5206:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5185:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5185:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5122:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5150:4:8",
														"nodeType": "YulTypedName",
														"src": "5150:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5156:5:8",
														"nodeType": "YulTypedName",
														"src": "5156:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5166:8:8",
														"nodeType": "YulTypedName",
														"src": "5166:8:8",
														"type": ""
													}
												],
												"src": "5122:107:8"
											},
											{
												"body": {
													"nativeSrc": "5311:317:8",
													"nodeType": "YulBlock",
													"src": "5311:317:8",
													"statements": [
														{
															"nativeSrc": "5321:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5321:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5342:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5342:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5354:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5354:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5338:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:8"
																},
																"nativeSrc": "5338:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5338:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5325:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5325:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5365:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5365:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5396:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5396:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5407:66:8",
																		"nodeType": "YulLiteral",
																		"src": "5407:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5377:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5377:18:8"
																},
																"nativeSrc": "5377:97:8",
																"nodeType": "YulFunctionCall",
																"src": "5377:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5369:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5369:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5483:51:8",
															"nodeType": "YulAssignment",
															"src": "5483:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5514:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5525:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "5525:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5495:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5495:18:8"
																},
																"nativeSrc": "5495:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5495:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5483:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5483:8:8"
																}
															]
														},
														{
															"nativeSrc": "5543:30:8",
															"nodeType": "YulAssignment",
															"src": "5543:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5556:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5556:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5567:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5567:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5563:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:8"
																		},
																		"nativeSrc": "5563:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5563:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5552:3:8"
																},
																"nativeSrc": "5552:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5552:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5543:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5543:5:8"
																}
															]
														},
														{
															"nativeSrc": "5582:40:8",
															"nodeType": "YulAssignment",
															"src": "5582:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5595:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5595:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5606:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "5606:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5616:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5616:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5602:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5602:3:8"
																		},
																		"nativeSrc": "5602:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5592:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5592:2:8"
																},
																"nativeSrc": "5592:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5592:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5582:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5582:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5235:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5272:5:8",
														"nodeType": "YulTypedName",
														"src": "5272:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5279:10:8",
														"nodeType": "YulTypedName",
														"src": "5279:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5291:8:8",
														"nodeType": "YulTypedName",
														"src": "5291:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5304:6:8",
														"nodeType": "YulTypedName",
														"src": "5304:6:8",
														"type": ""
													}
												],
												"src": "5235:393:8"
											},
											{
												"body": {
													"nativeSrc": "5666:28:8",
													"nodeType": "YulBlock",
													"src": "5666:28:8",
													"statements": [
														{
															"nativeSrc": "5676:12:8",
															"nodeType": "YulAssignment",
															"src": "5676:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5683:5:8",
																"nodeType": "YulIdentifier",
																"src": "5683:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5676:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5676:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5634:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5652:5:8",
														"nodeType": "YulTypedName",
														"src": "5652:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5662:3:8",
														"nodeType": "YulTypedName",
														"src": "5662:3:8",
														"type": ""
													}
												],
												"src": "5634:60:8"
											},
											{
												"body": {
													"nativeSrc": "5760:82:8",
													"nodeType": "YulBlock",
													"src": "5760:82:8",
													"statements": [
														{
															"nativeSrc": "5770:66:8",
															"nodeType": "YulAssignment",
															"src": "5770:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5828:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5828:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5810:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5810:17:8"
																				},
																				"nativeSrc": "5810:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5810:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5801:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "5801:8:8"
																		},
																		"nativeSrc": "5801:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5801:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5783:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5783:17:8"
																},
																"nativeSrc": "5783:53:8",
																"nodeType": "YulFunctionCall",
																"src": "5783:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5770:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5770:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5700:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5740:5:8",
														"nodeType": "YulTypedName",
														"src": "5740:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5750:9:8",
														"nodeType": "YulTypedName",
														"src": "5750:9:8",
														"type": ""
													}
												],
												"src": "5700:142:8"
											},
											{
												"body": {
													"nativeSrc": "5895:28:8",
													"nodeType": "YulBlock",
													"src": "5895:28:8",
													"statements": [
														{
															"nativeSrc": "5905:12:8",
															"nodeType": "YulAssignment",
															"src": "5905:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5912:5:8",
																"nodeType": "YulIdentifier",
																"src": "5912:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5905:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5905:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5848:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5881:5:8",
														"nodeType": "YulTypedName",
														"src": "5881:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5891:3:8",
														"nodeType": "YulTypedName",
														"src": "5891:3:8",
														"type": ""
													}
												],
												"src": "5848:75:8"
											},
											{
												"body": {
													"nativeSrc": "6005:193:8",
													"nodeType": "YulBlock",
													"src": "6005:193:8",
													"statements": [
														{
															"nativeSrc": "6015:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6015:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6070:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "6070:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6039:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6039:30:8"
																},
																"nativeSrc": "6039:39:8",
																"nodeType": "YulFunctionCall",
																"src": "6039:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6019:16:8",
																	"nodeType": "YulTypedName",
																	"src": "6019:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6094:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6094:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6134:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6134:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6128:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6128:5:8"
																				},
																				"nativeSrc": "6128:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6128:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6141:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6141:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6173:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "6173:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6149:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "6149:23:8"
																				},
																				"nativeSrc": "6149:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6149:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6100:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "6100:27:8"
																		},
																		"nativeSrc": "6100:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6087:6:8"
																},
																"nativeSrc": "6087:105:8",
																"nodeType": "YulFunctionCall",
																"src": "6087:105:8"
															},
															"nativeSrc": "6087:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "6087:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5929:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5982:4:8",
														"nodeType": "YulTypedName",
														"src": "5982:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5988:6:8",
														"nodeType": "YulTypedName",
														"src": "5988:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5996:7:8",
														"nodeType": "YulTypedName",
														"src": "5996:7:8",
														"type": ""
													}
												],
												"src": "5929:269:8"
											},
											{
												"body": {
													"nativeSrc": "6253:24:8",
													"nodeType": "YulBlock",
													"src": "6253:24:8",
													"statements": [
														{
															"nativeSrc": "6263:8:8",
															"nodeType": "YulAssignment",
															"src": "6263:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6270:1:8",
																"nodeType": "YulLiteral",
																"src": "6270:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6263:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6263:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6204:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6249:3:8",
														"nodeType": "YulTypedName",
														"src": "6249:3:8",
														"type": ""
													}
												],
												"src": "6204:73:8"
											},
											{
												"body": {
													"nativeSrc": "6336:136:8",
													"nodeType": "YulBlock",
													"src": "6336:136:8",
													"statements": [
														{
															"nativeSrc": "6346:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6346:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6360:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6360:30:8"
																},
																"nativeSrc": "6360:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6360:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6350:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6350:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6445:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6445:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6451:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6451:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6459:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6459:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6401:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6401:43:8"
																},
																"nativeSrc": "6401:65:8",
																"nodeType": "YulFunctionCall",
																"src": "6401:65:8"
															},
															"nativeSrc": "6401:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "6401:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6283:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6322:4:8",
														"nodeType": "YulTypedName",
														"src": "6322:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6328:6:8",
														"nodeType": "YulTypedName",
														"src": "6328:6:8",
														"type": ""
													}
												],
												"src": "6283:189:8"
											},
											{
												"body": {
													"nativeSrc": "6528:136:8",
													"nodeType": "YulBlock",
													"src": "6528:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6595:63:8",
																"nodeType": "YulBlock",
																"src": "6595:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6639:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6639:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6646:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6646:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6609:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "6609:29:8"
																			},
																			"nativeSrc": "6609:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6609:39:8"
																		},
																		"nativeSrc": "6609:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6609:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6548:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6548:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6555:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6555:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6545:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6545:2:8"
																},
																"nativeSrc": "6545:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6545:14:8"
															},
															"nativeSrc": "6538:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6560:26:8",
																"nodeType": "YulBlock",
																"src": "6560:26:8",
																"statements": [
																	{
																		"nativeSrc": "6562:22:8",
																		"nodeType": "YulAssignment",
																		"src": "6562:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6575:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6575:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6582:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6582:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6571:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6571:3:8"
																			},
																			"nativeSrc": "6571:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6571:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6562:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6562:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6542:2:8",
																"nodeType": "YulBlock",
																"src": "6542:2:8",
																"statements": []
															},
															"src": "6538:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6478:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6516:5:8",
														"nodeType": "YulTypedName",
														"src": "6516:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6523:3:8",
														"nodeType": "YulTypedName",
														"src": "6523:3:8",
														"type": ""
													}
												],
												"src": "6478:186:8"
											},
											{
												"body": {
													"nativeSrc": "6749:464:8",
													"nodeType": "YulBlock",
													"src": "6749:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6775:431:8",
																"nodeType": "YulBlock",
																"src": "6775:431:8",
																"statements": [
																	{
																		"nativeSrc": "6789:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6789:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6837:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6837:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6805:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "6805:31:8"
																			},
																			"nativeSrc": "6805:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6805:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6793:8:8",
																				"nodeType": "YulTypedName",
																				"src": "6793:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6856:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6856:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6879:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "6879:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6907:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6907:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6889:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "6889:17:8"
																					},
																					"nativeSrc": "6889:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6889:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6875:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6875:3:8"
																			},
																			"nativeSrc": "6875:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6875:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6860:11:8",
																				"nodeType": "YulTypedName",
																				"src": "6860:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7076:27:8",
																			"nodeType": "YulBlock",
																			"src": "7076:27:8",
																			"statements": [
																				{
																					"nativeSrc": "7078:23:8",
																					"nodeType": "YulAssignment",
																					"src": "7078:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7093:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "7093:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7078:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "7078:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7060:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "7060:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7072:2:8",
																					"nodeType": "YulLiteral",
																					"src": "7072:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7057:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7057:2:8"
																			},
																			"nativeSrc": "7057:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7057:18:8"
																		},
																		"nativeSrc": "7054:49:8",
																		"nodeType": "YulIf",
																		"src": "7054:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7145:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "7145:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7162:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "7162:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7190:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7190:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7172:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "7172:17:8"
																							},
																							"nativeSrc": "7172:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7172:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7158:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7158:3:8"
																					},
																					"nativeSrc": "7158:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7158:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7116:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "7116:28:8"
																			},
																			"nativeSrc": "7116:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7116:80:8"
																		},
																		"nativeSrc": "7116:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7116:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6766:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6771:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6763:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6763:2:8"
																},
																"nativeSrc": "6763:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6763:11:8"
															},
															"nativeSrc": "6760:446:8",
															"nodeType": "YulIf",
															"src": "6760:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6670:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6725:5:8",
														"nodeType": "YulTypedName",
														"src": "6725:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6732:3:8",
														"nodeType": "YulTypedName",
														"src": "6732:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6737:10:8",
														"nodeType": "YulTypedName",
														"src": "6737:10:8",
														"type": ""
													}
												],
												"src": "6670:543:8"
											},
											{
												"body": {
													"nativeSrc": "7282:54:8",
													"nodeType": "YulBlock",
													"src": "7282:54:8",
													"statements": [
														{
															"nativeSrc": "7292:37:8",
															"nodeType": "YulAssignment",
															"src": "7292:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7317:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7323:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7323:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7313:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7313:3:8"
																},
																"nativeSrc": "7313:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7313:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7292:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7292:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7219:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7257:4:8",
														"nodeType": "YulTypedName",
														"src": "7257:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7263:5:8",
														"nodeType": "YulTypedName",
														"src": "7263:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7273:8:8",
														"nodeType": "YulTypedName",
														"src": "7273:8:8",
														"type": ""
													}
												],
												"src": "7219:117:8"
											},
											{
												"body": {
													"nativeSrc": "7393:118:8",
													"nodeType": "YulBlock",
													"src": "7393:118:8",
													"statements": [
														{
															"nativeSrc": "7403:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7403:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7452:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7452:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7455:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7455:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7448:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7448:3:8"
																				},
																				"nativeSrc": "7448:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7448:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7467:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7467:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7463:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7463:3:8"
																				},
																				"nativeSrc": "7463:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7463:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7419:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "7419:28:8"
																		},
																		"nativeSrc": "7419:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7419:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7415:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:8"
																},
																"nativeSrc": "7415:56:8",
																"nodeType": "YulFunctionCall",
																"src": "7415:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7407:4:8",
																	"nodeType": "YulTypedName",
																	"src": "7407:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7480:25:8",
															"nodeType": "YulAssignment",
															"src": "7480:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7494:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7494:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7500:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7500:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7490:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7490:3:8"
																},
																"nativeSrc": "7490:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7490:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7480:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7342:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7370:4:8",
														"nodeType": "YulTypedName",
														"src": "7370:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7376:5:8",
														"nodeType": "YulTypedName",
														"src": "7376:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7386:6:8",
														"nodeType": "YulTypedName",
														"src": "7386:6:8",
														"type": ""
													}
												],
												"src": "7342:169:8"
											},
											{
												"body": {
													"nativeSrc": "7597:214:8",
													"nodeType": "YulBlock",
													"src": "7597:214:8",
													"statements": [
														{
															"nativeSrc": "7730:37:8",
															"nodeType": "YulAssignment",
															"src": "7730:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7757:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7757:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7763:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7738:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "7738:18:8"
																},
																"nativeSrc": "7738:29:8",
																"nodeType": "YulFunctionCall",
																"src": "7738:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7730:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7730:4:8"
																}
															]
														},
														{
															"nativeSrc": "7776:29:8",
															"nodeType": "YulAssignment",
															"src": "7776:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7787:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7787:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7797:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7797:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7800:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7800:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7793:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:8"
																		},
																		"nativeSrc": "7793:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7793:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7784:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7784:2:8"
																},
																"nativeSrc": "7784:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7784:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7776:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7776:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7516:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7578:4:8",
														"nodeType": "YulTypedName",
														"src": "7578:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7584:3:8",
														"nodeType": "YulTypedName",
														"src": "7584:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7592:4:8",
														"nodeType": "YulTypedName",
														"src": "7592:4:8",
														"type": ""
													}
												],
												"src": "7516:295:8"
											},
											{
												"body": {
													"nativeSrc": "7908:1303:8",
													"nodeType": "YulBlock",
													"src": "7908:1303:8",
													"statements": [
														{
															"nativeSrc": "7919:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7919:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7966:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7966:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7933:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "7933:32:8"
																},
																"nativeSrc": "7933:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7933:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7923:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7923:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8055:22:8",
																"nodeType": "YulBlock",
																"src": "8055:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8057:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8057:16:8"
																			},
																			"nativeSrc": "8057:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8057:18:8"
																		},
																		"nativeSrc": "8057:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8057:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8027:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8027:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8035:18:8",
																		"nodeType": "YulLiteral",
																		"src": "8035:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8024:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8024:2:8"
																},
																"nativeSrc": "8024:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8024:30:8"
															},
															"nativeSrc": "8021:56:8",
															"nodeType": "YulIf",
															"src": "8021:56:8"
														},
														{
															"nativeSrc": "8087:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8087:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8133:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8133:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8127:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "8127:5:8"
																		},
																		"nativeSrc": "8127:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8101:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "8101:25:8"
																},
																"nativeSrc": "8101:38:8",
																"nodeType": "YulFunctionCall",
																"src": "8101:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8091:6:8",
																	"nodeType": "YulTypedName",
																	"src": "8091:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8232:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8232:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8238:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8246:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8246:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8186:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "8186:45:8"
																},
																"nativeSrc": "8186:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8186:67:8"
															},
															"nativeSrc": "8186:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "8186:67:8"
														},
														{
															"nativeSrc": "8263:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8263:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8280:1:8",
																"nodeType": "YulLiteral",
																"src": "8280:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8267:9:8",
																	"nodeType": "YulTypedName",
																	"src": "8267:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8291:17:8",
															"nodeType": "YulAssignment",
															"src": "8291:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8304:4:8",
																"nodeType": "YulLiteral",
																"src": "8304:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8291:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8291:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8355:611:8",
																		"nodeType": "YulBlock",
																		"src": "8355:611:8",
																		"statements": [
																			{
																				"nativeSrc": "8369:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8369:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8388:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8388:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8400:4:8",
																									"nodeType": "YulLiteral",
																									"src": "8400:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8396:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8396:3:8"
																							},
																							"nativeSrc": "8396:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8396:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8384:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8384:3:8"
																					},
																					"nativeSrc": "8384:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8384:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8373:7:8",
																						"nodeType": "YulTypedName",
																						"src": "8373:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8420:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8420:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8466:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8466:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8434:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "8434:31:8"
																					},
																					"nativeSrc": "8434:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8434:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8424:6:8",
																						"nodeType": "YulTypedName",
																						"src": "8424:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8484:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8484:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8493:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8493:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8488:1:8",
																						"nodeType": "YulTypedName",
																						"src": "8488:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8552:163:8",
																					"nodeType": "YulBlock",
																					"src": "8552:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8577:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8577:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8595:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "8595:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8600:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "8600:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8591:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8591:3:8"
																												},
																												"nativeSrc": "8591:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8591:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8585:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "8585:5:8"
																										},
																										"nativeSrc": "8585:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8585:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8570:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8570:6:8"
																								},
																								"nativeSrc": "8570:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8570:42:8"
																							},
																							"nativeSrc": "8570:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8570:42:8"
																						},
																						{
																							"nativeSrc": "8629:24:8",
																							"nodeType": "YulAssignment",
																							"src": "8629:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8643:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8643:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8651:1:8",
																										"nodeType": "YulLiteral",
																										"src": "8651:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8639:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8639:3:8"
																								},
																								"nativeSrc": "8639:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8639:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8629:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8629:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8670:31:8",
																							"nodeType": "YulAssignment",
																							"src": "8670:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8687:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "8687:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8698:2:8",
																										"nodeType": "YulLiteral",
																										"src": "8698:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8683:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8683:3:8"
																								},
																								"nativeSrc": "8683:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8683:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8670:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "8670:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8518:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "8518:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8521:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8521:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8515:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8515:2:8"
																					},
																					"nativeSrc": "8515:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8515:14:8"
																				},
																				"nativeSrc": "8507:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8530:21:8",
																					"nodeType": "YulBlock",
																					"src": "8530:21:8",
																					"statements": [
																						{
																							"nativeSrc": "8532:17:8",
																							"nodeType": "YulAssignment",
																							"src": "8532:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8541:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "8541:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8544:4:8",
																										"nodeType": "YulLiteral",
																										"src": "8544:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8537:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8537:3:8"
																								},
																								"nativeSrc": "8537:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8537:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8532:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "8532:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8511:3:8",
																					"nodeType": "YulBlock",
																					"src": "8511:3:8",
																					"statements": []
																				},
																				"src": "8507:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "8751:156:8",
																					"nodeType": "YulBlock",
																					"src": "8751:156:8",
																					"statements": [
																						{
																							"nativeSrc": "8769:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8769:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8796:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8796:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8801:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8801:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8792:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8792:3:8"
																										},
																										"nativeSrc": "8792:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8792:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8786:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8786:5:8"
																								},
																								"nativeSrc": "8786:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8786:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8773:9:8",
																									"nodeType": "YulTypedName",
																									"src": "8773:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8836:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8836:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8863:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8863:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8878:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "8878:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8886:4:8",
																														"nodeType": "YulLiteral",
																														"src": "8886:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8874:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8874:3:8"
																												},
																												"nativeSrc": "8874:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8874:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8844:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "8844:18:8"
																										},
																										"nativeSrc": "8844:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8844:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8829:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8829:6:8"
																								},
																								"nativeSrc": "8829:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8829:64:8"
																							},
																							"nativeSrc": "8829:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8829:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8734:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8734:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8743:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8743:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8731:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8731:2:8"
																					},
																					"nativeSrc": "8731:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8731:19:8"
																				},
																				"nativeSrc": "8728:179:8",
																				"nodeType": "YulIf",
																				"src": "8728:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8927:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8927:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8941:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "8941:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8949:1:8",
																											"nodeType": "YulLiteral",
																											"src": "8949:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8937:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "8937:3:8"
																									},
																									"nativeSrc": "8937:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "8937:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8953:1:8",
																									"nodeType": "YulLiteral",
																									"src": "8953:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8933:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8933:3:8"
																							},
																							"nativeSrc": "8933:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8933:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8920:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8920:6:8"
																					},
																					"nativeSrc": "8920:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8920:36:8"
																				},
																				"nativeSrc": "8920:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8920:36:8"
																			}
																		]
																	},
																	"nativeSrc": "8348:618:8",
																	"nodeType": "YulCase",
																	"src": "8348:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8353:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8353:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8983:222:8",
																		"nodeType": "YulBlock",
																		"src": "8983:222:8",
																		"statements": [
																			{
																				"nativeSrc": "8997:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8997:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9010:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9010:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9001:5:8",
																						"nodeType": "YulTypedName",
																						"src": "9001:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9034:67:8",
																					"nodeType": "YulBlock",
																					"src": "9034:67:8",
																					"statements": [
																						{
																							"nativeSrc": "9052:35:8",
																							"nodeType": "YulAssignment",
																							"src": "9052:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9071:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "9071:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9076:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "9076:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9067:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "9067:3:8"
																										},
																										"nativeSrc": "9067:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "9067:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9061:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9061:5:8"
																								},
																								"nativeSrc": "9061:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9061:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9052:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9052:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9027:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9027:6:8"
																				},
																				"nativeSrc": "9024:77:8",
																				"nodeType": "YulIf",
																				"src": "9024:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9121:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9121:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9180:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9180:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9187:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "9187:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9127:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "9127:52:8"
																							},
																							"nativeSrc": "9127:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9127:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9114:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9114:6:8"
																					},
																					"nativeSrc": "9114:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9114:81:8"
																				},
																				"nativeSrc": "9114:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "9114:81:8"
																			}
																		]
																	},
																	"nativeSrc": "8975:230:8",
																	"nodeType": "YulCase",
																	"src": "8975:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8328:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8328:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8336:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8325:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8325:2:8"
																},
																"nativeSrc": "8325:14:8",
																"nodeType": "YulFunctionCall",
																"src": "8325:14:8"
															},
															"nativeSrc": "8318:887:8",
															"nodeType": "YulSwitch",
															"src": "8318:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7816:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7897:4:8",
														"nodeType": "YulTypedName",
														"src": "7897:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7903:3:8",
														"nodeType": "YulTypedName",
														"src": "7903:3:8",
														"type": ""
													}
												],
												"src": "7816:1395:8"
											},
											{
												"body": {
													"nativeSrc": "9262:81:8",
													"nodeType": "YulBlock",
													"src": "9262:81:8",
													"statements": [
														{
															"nativeSrc": "9272:65:8",
															"nodeType": "YulAssignment",
															"src": "9272:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9287:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9287:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9294:42:8",
																		"nodeType": "YulLiteral",
																		"src": "9294:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9283:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:8"
																},
																"nativeSrc": "9283:54:8",
																"nodeType": "YulFunctionCall",
																"src": "9283:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9272:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9272:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9217:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9244:5:8",
														"nodeType": "YulTypedName",
														"src": "9244:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9254:7:8",
														"nodeType": "YulTypedName",
														"src": "9254:7:8",
														"type": ""
													}
												],
												"src": "9217:126:8"
											},
											{
												"body": {
													"nativeSrc": "9394:51:8",
													"nodeType": "YulBlock",
													"src": "9394:51:8",
													"statements": [
														{
															"nativeSrc": "9404:35:8",
															"nodeType": "YulAssignment",
															"src": "9404:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9433:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9433:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9415:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9415:17:8"
																},
																"nativeSrc": "9415:24:8",
																"nodeType": "YulFunctionCall",
																"src": "9415:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9404:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9404:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9349:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9376:5:8",
														"nodeType": "YulTypedName",
														"src": "9376:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9386:7:8",
														"nodeType": "YulTypedName",
														"src": "9386:7:8",
														"type": ""
													}
												],
												"src": "9349:96:8"
											},
											{
												"body": {
													"nativeSrc": "9516:53:8",
													"nodeType": "YulBlock",
													"src": "9516:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:8"
																		},
																		"nativeSrc": "9538:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:8"
																},
																"nativeSrc": "9526:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:8"
															},
															"nativeSrc": "9526:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:8",
														"nodeType": "YulTypedName",
														"src": "9504:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:8",
														"nodeType": "YulTypedName",
														"src": "9511:3:8",
														"type": ""
													}
												],
												"src": "9451:118:8"
											},
											{
												"body": {
													"nativeSrc": "9673:124:8",
													"nodeType": "YulBlock",
													"src": "9673:124:8",
													"statements": [
														{
															"nativeSrc": "9683:26:8",
															"nodeType": "YulAssignment",
															"src": "9683:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:8"
																},
																"nativeSrc": "9691:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:8"
																		},
																		"nativeSrc": "9772:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:8"
																},
																"nativeSrc": "9719:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:8"
															},
															"nativeSrc": "9719:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:8",
														"nodeType": "YulTypedName",
														"src": "9645:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:8",
														"nodeType": "YulTypedName",
														"src": "9657:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:8",
														"nodeType": "YulTypedName",
														"src": "9668:4:8",
														"type": ""
													}
												],
												"src": "9575:222:8"
											},
											{
												"body": {
													"nativeSrc": "9899:73:8",
													"nodeType": "YulBlock",
													"src": "9899:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9916:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9916:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9921:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9921:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:8"
																},
																"nativeSrc": "9909:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9909:19:8"
															},
															"nativeSrc": "9909:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "9909:19:8"
														},
														{
															"nativeSrc": "9937:29:8",
															"nodeType": "YulAssignment",
															"src": "9937:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9956:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9961:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9961:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9952:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9952:3:8"
																},
																"nativeSrc": "9952:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9952:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9937:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9937:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9803:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9871:3:8",
														"nodeType": "YulTypedName",
														"src": "9871:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9876:6:8",
														"nodeType": "YulTypedName",
														"src": "9876:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9887:11:8",
														"nodeType": "YulTypedName",
														"src": "9887:11:8",
														"type": ""
													}
												],
												"src": "9803:169:8"
											},
											{
												"body": {
													"nativeSrc": "10084:114:8",
													"nodeType": "YulBlock",
													"src": "10084:114:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10106:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10106:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10114:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10114:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10102:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:8"
																		},
																		"nativeSrc": "10102:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10102:14:8"
																	},
																	{
																		"hexValue": "496e697469616c20737570706c792065786365656473206d617820737570706c",
																		"kind": "string",
																		"nativeSrc": "10118:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10118:34:8",
																		"type": "",
																		"value": "Initial supply exceeds max suppl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10095:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:8"
																},
																"nativeSrc": "10095:58:8",
																"nodeType": "YulFunctionCall",
																"src": "10095:58:8"
															},
															"nativeSrc": "10095:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "10095:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10174:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10174:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10182:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10182:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10170:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10170:3:8"
																		},
																		"nativeSrc": "10170:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10170:15:8"
																	},
																	{
																		"hexValue": "79",
																		"kind": "string",
																		"nativeSrc": "10187:3:8",
																		"nodeType": "YulLiteral",
																		"src": "10187:3:8",
																		"type": "",
																		"value": "y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10163:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10163:6:8"
																},
																"nativeSrc": "10163:28:8",
																"nodeType": "YulFunctionCall",
																"src": "10163:28:8"
															},
															"nativeSrc": "10163:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "10163:28:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6",
												"nativeSrc": "9978:220:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10076:6:8",
														"nodeType": "YulTypedName",
														"src": "10076:6:8",
														"type": ""
													}
												],
												"src": "9978:220:8"
											},
											{
												"body": {
													"nativeSrc": "10350:220:8",
													"nodeType": "YulBlock",
													"src": "10350:220:8",
													"statements": [
														{
															"nativeSrc": "10360:74:8",
															"nodeType": "YulAssignment",
															"src": "10360:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10426:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10426:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10431:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10431:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10367:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10367:58:8"
																},
																"nativeSrc": "10367:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10367:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10360:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10360:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10532:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10532:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6",
																	"nativeSrc": "10443:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10443:88:8"
																},
																"nativeSrc": "10443:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10443:93:8"
															},
															"nativeSrc": "10443:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10443:93:8"
														},
														{
															"nativeSrc": "10545:19:8",
															"nodeType": "YulAssignment",
															"src": "10545:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10556:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10556:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10561:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10561:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10552:3:8"
																},
																"nativeSrc": "10552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10552:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10545:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10545:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10204:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10338:3:8",
														"nodeType": "YulTypedName",
														"src": "10338:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10346:3:8",
														"nodeType": "YulTypedName",
														"src": "10346:3:8",
														"type": ""
													}
												],
												"src": "10204:366:8"
											},
											{
												"body": {
													"nativeSrc": "10747:248:8",
													"nodeType": "YulBlock",
													"src": "10747:248:8",
													"statements": [
														{
															"nativeSrc": "10757:26:8",
															"nodeType": "YulAssignment",
															"src": "10757:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10769:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10769:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10780:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10780:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10765:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10765:3:8"
																},
																"nativeSrc": "10765:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10765:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10757:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10757:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10804:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10804:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10815:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10815:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10800:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10800:3:8"
																		},
																		"nativeSrc": "10800:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10800:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10823:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10823:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10829:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10829:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10819:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10819:3:8"
																		},
																		"nativeSrc": "10819:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10819:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10793:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10793:6:8"
																},
																"nativeSrc": "10793:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10793:47:8"
															},
															"nativeSrc": "10793:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10793:47:8"
														},
														{
															"nativeSrc": "10849:139:8",
															"nodeType": "YulAssignment",
															"src": "10849:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10983:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10983:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10857:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10857:124:8"
																},
																"nativeSrc": "10857:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10857:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10849:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10849:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10576:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10727:9:8",
														"nodeType": "YulTypedName",
														"src": "10727:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10742:4:8",
														"nodeType": "YulTypedName",
														"src": "10742:4:8",
														"type": ""
													}
												],
												"src": "10576:419:8"
											},
											{
												"body": {
													"nativeSrc": "11029:152:8",
													"nodeType": "YulBlock",
													"src": "11029:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11046:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11046:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11049:77:8",
																		"nodeType": "YulLiteral",
																		"src": "11049:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11039:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:8"
																},
																"nativeSrc": "11039:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11039:88:8"
															},
															"nativeSrc": "11039:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "11039:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11143:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11143:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11146:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11146:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11136:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11136:6:8"
																},
																"nativeSrc": "11136:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11136:15:8"
															},
															"nativeSrc": "11136:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11136:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11167:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11167:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11170:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11170:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11160:6:8"
																},
																"nativeSrc": "11160:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11160:15:8"
															},
															"nativeSrc": "11160:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11160:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11001:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "11001:180:8"
											},
											{
												"body": {
													"nativeSrc": "11231:147:8",
													"nodeType": "YulBlock",
													"src": "11231:147:8",
													"statements": [
														{
															"nativeSrc": "11241:25:8",
															"nodeType": "YulAssignment",
															"src": "11241:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11264:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11264:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11246:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11246:17:8"
																},
																"nativeSrc": "11246:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11246:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11241:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11241:1:8"
																}
															]
														},
														{
															"nativeSrc": "11275:25:8",
															"nodeType": "YulAssignment",
															"src": "11275:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11298:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11298:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11280:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11280:17:8"
																},
																"nativeSrc": "11280:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11280:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11275:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11275:1:8"
																}
															]
														},
														{
															"nativeSrc": "11309:16:8",
															"nodeType": "YulAssignment",
															"src": "11309:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11320:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11320:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11323:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11323:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11316:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11316:3:8"
																},
																"nativeSrc": "11316:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11316:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11309:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11309:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11349:22:8",
																"nodeType": "YulBlock",
																"src": "11349:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11351:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11351:16:8"
																			},
																			"nativeSrc": "11351:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11351:18:8"
																		},
																		"nativeSrc": "11351:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11351:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11341:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11341:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11344:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11344:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11338:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11338:2:8"
																},
																"nativeSrc": "11338:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11338:10:8"
															},
															"nativeSrc": "11335:36:8",
															"nodeType": "YulIf",
															"src": "11335:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11187:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11218:1:8",
														"nodeType": "YulTypedName",
														"src": "11218:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11221:1:8",
														"nodeType": "YulTypedName",
														"src": "11221:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11227:3:8",
														"nodeType": "YulTypedName",
														"src": "11227:3:8",
														"type": ""
													}
												],
												"src": "11187:191:8"
											},
											{
												"body": {
													"nativeSrc": "11449:53:8",
													"nodeType": "YulBlock",
													"src": "11449:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11466:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11466:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11489:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "11489:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11471:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "11471:17:8"
																		},
																		"nativeSrc": "11471:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11471:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11459:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11459:6:8"
																},
																"nativeSrc": "11459:37:8",
																"nodeType": "YulFunctionCall",
																"src": "11459:37:8"
															},
															"nativeSrc": "11459:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "11459:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11384:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11437:5:8",
														"nodeType": "YulTypedName",
														"src": "11437:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11444:3:8",
														"nodeType": "YulTypedName",
														"src": "11444:3:8",
														"type": ""
													}
												],
												"src": "11384:118:8"
											},
											{
												"body": {
													"nativeSrc": "11662:288:8",
													"nodeType": "YulBlock",
													"src": "11662:288:8",
													"statements": [
														{
															"nativeSrc": "11672:26:8",
															"nodeType": "YulAssignment",
															"src": "11672:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11684:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11684:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11695:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11695:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11680:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11680:3:8"
																},
																"nativeSrc": "11680:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11680:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11672:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11672:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11752:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11752:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11765:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11765:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11776:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11776:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11761:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11761:3:8"
																		},
																		"nativeSrc": "11761:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11761:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11708:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11708:43:8"
																},
																"nativeSrc": "11708:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11708:71:8"
															},
															"nativeSrc": "11708:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11708:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11833:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11833:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11846:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11846:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11857:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11857:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11842:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11842:3:8"
																		},
																		"nativeSrc": "11842:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11842:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11789:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11789:43:8"
																},
																"nativeSrc": "11789:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11789:72:8"
															},
															"nativeSrc": "11789:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11789:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11915:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11915:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11928:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11928:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11939:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11939:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11924:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:8"
																		},
																		"nativeSrc": "11924:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11924:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11871:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11871:43:8"
																},
																"nativeSrc": "11871:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11871:72:8"
															},
															"nativeSrc": "11871:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11871:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11508:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11618:9:8",
														"nodeType": "YulTypedName",
														"src": "11618:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11630:6:8",
														"nodeType": "YulTypedName",
														"src": "11630:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11638:6:8",
														"nodeType": "YulTypedName",
														"src": "11638:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11646:6:8",
														"nodeType": "YulTypedName",
														"src": "11646:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11657:4:8",
														"nodeType": "YulTypedName",
														"src": "11657:4:8",
														"type": ""
													}
												],
												"src": "11508:442:8"
											},
											{
												"body": {
													"nativeSrc": "12054:124:8",
													"nodeType": "YulBlock",
													"src": "12054:124:8",
													"statements": [
														{
															"nativeSrc": "12064:26:8",
															"nodeType": "YulAssignment",
															"src": "12064:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12076:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12076:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12087:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12087:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12072:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12072:3:8"
																},
																"nativeSrc": "12072:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12072:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12064:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12064:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12144:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12157:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12157:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12168:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12168:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12153:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12153:3:8"
																		},
																		"nativeSrc": "12153:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12153:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12100:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12100:43:8"
																},
																"nativeSrc": "12100:71:8",
																"nodeType": "YulFunctionCall",
																"src": "12100:71:8"
															},
															"nativeSrc": "12100:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "12100:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11956:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12026:9:8",
														"nodeType": "YulTypedName",
														"src": "12026:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12038:6:8",
														"nodeType": "YulTypedName",
														"src": "12038:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12049:4:8",
														"nodeType": "YulTypedName",
														"src": "12049:4:8",
														"type": ""
													}
												],
												"src": "11956:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initial supply exceeds max suppl\")\n\n        mstore(add(memPtr, 32), \"y\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612be5380380612be583398181016040528101906100319190610643565b338585816003908161004391906108f6565b50806004908161005391906108f6565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610a04565b60405180910390fd5b6100d58161016260201b60201c565b505f600560146101000a81548160ff02191690831515021790555081831115610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012a90610a9d565b60405180910390fd5b8160068190555080600781905550610151338461022560201b60201c565b826008819055505050505050610b78565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610295575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161028c9190610a04565b60405180910390fd5b6102a65f83836102aa60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102fa578060025f8282546102ee9190610ae8565b925050819055506103c8565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610383578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161037a93929190610b2a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361040f578060025f8282540392505081905550610459565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104b69190610b5f565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610522826104dc565b810181811067ffffffffffffffff82111715610541576105406104ec565b5b80604052505050565b5f6105536104c3565b905061055f8282610519565b919050565b5f67ffffffffffffffff82111561057e5761057d6104ec565b5b610587826104dc565b9050602081019050919050565b8281835e5f83830152505050565b5f6105b46105af84610564565b61054a565b9050828152602081018484840111156105d0576105cf6104d8565b5b6105db848285610594565b509392505050565b5f82601f8301126105f7576105f66104d4565b5b81516106078482602086016105a2565b91505092915050565b5f819050919050565b61062281610610565b811461062c575f80fd5b50565b5f8151905061063d81610619565b92915050565b5f805f805f60a0868803121561065c5761065b6104cc565b5b5f86015167ffffffffffffffff811115610679576106786104d0565b5b610685888289016105e3565b955050602086015167ffffffffffffffff8111156106a6576106a56104d0565b5b6106b2888289016105e3565b94505060406106c38882890161062f565b93505060606106d48882890161062f565b92505060806106e58882890161062f565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061074057607f821691505b602082108103610753576107526106fc565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107b57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261077a565b6107bf868361077a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107fa6107f56107f084610610565b6107d7565b610610565b9050919050565b5f819050919050565b610813836107e0565b61082761081f82610801565b848454610786565b825550505050565b5f90565b61083b61082f565b61084681848461080a565b505050565b5b818110156108695761085e5f82610833565b60018101905061084c565b5050565b601f8211156108ae5761087f81610759565b6108888461076b565b81016020851015610897578190505b6108ab6108a38561076b565b83018261084b565b50505b505050565b5f82821c905092915050565b5f6108ce5f19846008026108b3565b1980831691505092915050565b5f6108e683836108bf565b9150826002028217905092915050565b6108ff826106f2565b67ffffffffffffffff811115610918576109176104ec565b5b6109228254610729565b61092d82828561086d565b5f60209050601f83116001811461095e575f841561094c578287015190505b61095685826108db565b8655506109bd565b601f19841661096c86610759565b5f5b828110156109935784890151825560018201915060208501945060208101905061096e565b868310156109b057848901516109ac601f8916826108bf565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109ee826109c5565b9050919050565b6109fe816109e4565b82525050565b5f602082019050610a175f8301846109f5565b92915050565b5f82825260208201905092915050565b7f496e697469616c20737570706c792065786365656473206d617820737570706c5f8201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b5f610a87602183610a1d565b9150610a9282610a2d565b604082019050919050565b5f6020820190508181035f830152610ab481610a7b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610af282610610565b9150610afd83610610565b9250828201905080821115610b1557610b14610abb565b5b92915050565b610b2481610610565b82525050565b5f606082019050610b3d5f8301866109f5565b610b4a6020830185610b1b565b610b576040830184610b1b565b949350505050565b5f602082019050610b725f830184610b1b565b92915050565b61206080610b855f395ff3fe6080604052600436106101b6575f3560e01c80636f9fb98a116100eb578063a2309ff811610089578063d5abeb0111610063578063d5abeb011461058e578063dd62ed3e146105b8578063f2fde38b146105f4578063fc60c2811461061c576101b6565b8063a2309ff81461051e578063a9059cbb14610548578063d0febe4c14610584576101b6565b80637ff9b596116100c55780637ff9b5961461048a5780638456cb59146104b45780638da5cb5b146104ca57806395d89b41146104f4576101b6565b80636f9fb98a1461040e57806370a0823114610438578063715018a614610474576101b6565b80633ccfd60b1161015857806342966c681161013257806342966c681461036a5780634b94f50e146103925780635c975abb146103bc5780636a61e5fc146103e6576101b6565b80633ccfd60b146103165780633f4ba83a1461032c57806340c10f1914610342576101b6565b806318160ddd1161019457806318160ddd1461024a57806323b872dd14610274578063313ce567146102b05780633aecd0e3146102da576101b6565b806306fdde03146101ba578063095ea7b3146101e45780630ca1c5c914610220575b5f80fd5b3480156101c5575f80fd5b506101ce610638565b6040516101db9190611877565b60405180910390f35b3480156101ef575f80fd5b5061020a60048036038101906102059190611928565b6106c8565b6040516102179190611980565b60405180910390f35b34801561022b575f80fd5b506102346106ea565b60405161024191906119a8565b60405180910390f35b348015610255575f80fd5b5061025e6106f3565b60405161026b91906119a8565b60405180910390f35b34801561027f575f80fd5b5061029a600480360381019061029591906119c1565b6106fc565b6040516102a79190611980565b60405180910390f35b3480156102bb575f80fd5b506102c461072a565b6040516102d19190611a2c565b60405180910390f35b3480156102e5575f80fd5b5061030060048036038101906102fb9190611a45565b610732565b60405161030d91906119a8565b60405180910390f35b348015610321575f80fd5b5061032a610743565b005b348015610337575f80fd5b506103406107df565b005b34801561034d575f80fd5b5061036860048036038101906103639190611928565b6107f1565b005b348015610375575f80fd5b50610390600480360381019061038b9190611a70565b6108c7565b005b34801561039d575f80fd5b506103a66108d4565b6040516103b391906119a8565b60405180910390f35b3480156103c7575f80fd5b506103d06108dd565b6040516103dd9190611980565b60405180910390f35b3480156103f1575f80fd5b5061040c60048036038101906104079190611a70565b6108f3565b005b348015610419575f80fd5b5061042261097e565b60405161042f91906119a8565b60405180910390f35b348015610443575f80fd5b5061045e60048036038101906104599190611a45565b610985565b60405161046b91906119a8565b60405180910390f35b34801561047f575f80fd5b506104886109ca565b005b348015610495575f80fd5b5061049e6109dd565b6040516104ab91906119a8565b60405180910390f35b3480156104bf575f80fd5b506104c86109e3565b005b3480156104d5575f80fd5b506104de6109f5565b6040516104eb9190611aaa565b60405180910390f35b3480156104ff575f80fd5b50610508610a1d565b6040516105159190611877565b60405180910390f35b348015610529575f80fd5b50610532610aad565b60405161053f91906119a8565b60405180910390f35b348015610553575f80fd5b5061056e60048036038101906105699190611928565b610ab3565b60405161057b9190611980565b60405180910390f35b61058c610ad5565b005b348015610599575f80fd5b506105a2610c08565b6040516105af91906119a8565b60405180910390f35b3480156105c3575f80fd5b506105de60048036038101906105d99190611ac3565b610c0e565b6040516105eb91906119a8565b60405180910390f35b3480156105ff575f80fd5b5061061a60048036038101906106159190611a45565b610c90565b005b61063660048036038101906106319190611a70565b610d14565b005b60606003805461064790611b2e565b80601f016020809104026020016040519081016040528092919081815260200182805461067390611b2e565b80156106be5780601f10610695576101008083540402835291602001916106be565b820191905f5260205f20905b8154815290600101906020018083116106a157829003601f168201915b5050505050905090565b5f806106d2610ee3565b90506106df818585610eea565b600191505092915050565b5f600854905090565b5f600254905090565b5f80610706610ee3565b9050610713858285610efc565b61071e858585610f8f565b60019150509392505050565b5f6012905090565b5f61073c82610985565b9050919050565b61074b61107f565b5f4790505f8111610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890611ba8565b60405180910390fd5b6107996109f5565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156107db573d5f803e3d5ffd5b5050565b6107e761107f565b6107ef611106565b565b6107f961107f565b610801611168565b600654816008546108129190611bf3565b1115610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084a90611c70565b60405180910390fd5b61085d82826111b2565b8060085f82825461086e9190611bf3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273826040516108bb91906119a8565b60405180910390a25050565b6108d13382611231565b50565b5f600754905090565b5f600560149054906101000a900460ff16905090565b6108fb61107f565b5f811161093d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093490611cd8565b60405180910390fd5b806007819055507f6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e939768908160405161097391906119a8565b60405180910390a150565b5f47905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109d261107f565b6109db5f6112b0565b565b60075481565b6109eb61107f565b6109f3611373565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a2c90611b2e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5890611b2e565b8015610aa35780601f10610a7a57610100808354040283529160200191610aa3565b820191905f5260205f20905b815481529060010190602001808311610a8657829003601f168201915b5050505050905090565b60085481565b5f80610abd610ee3565b9050610aca818585610f8f565b600191505092915050565b610add611168565b5f3411610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1690611d40565b60405180910390fd5b5f670de0b6b3a764000060075434610b379190611d5e565b610b419190611dcc565b905060065481600854610b549190611bf3565b1115610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c90611c70565b60405180910390fd5b610b9f33826111b2565b8060085f828254610bb09190611bf3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc27182604051610bfd91906119a8565b60405180910390a250565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c9861107f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d08575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cff9190611aaa565b60405180910390fd5b610d11816112b0565b50565b610d1c611168565b5f8111610d5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5590611e6c565b60405180910390fd5b5f600754670de0b6b3a764000083610d769190611d5e565b610d809190611dcc565b905080341015610dc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbc90611ed4565b60405180910390fd5b60065482600854610dd69190611bf3565b1115610e17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0e90611c70565b60405180910390fd5b610e2133836111b2565b8160085f828254610e329190611bf3565b9250508190555080341115610e91573373ffffffffffffffffffffffffffffffffffffffff166108fc8234610e679190611ef2565b90811502906040515f60405180830381858888f19350505050158015610e8f573d5f803e3d5ffd5b505b3373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc27183604051610ed791906119a8565b60405180910390a25050565b5f33905090565b610ef783838360016113d6565b505050565b5f610f078484610c0e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f895781811015610f7a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f7193929190611f25565b60405180910390fd5b610f8884848484035f6113d6565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fff575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ff69190611aaa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361106f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110669190611aaa565b60405180910390fd5b61107a8383836115a5565b505050565b611087610ee3565b73ffffffffffffffffffffffffffffffffffffffff166110a56109f5565b73ffffffffffffffffffffffffffffffffffffffff1614611104576110c8610ee3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110fb9190611aaa565b60405180910390fd5b565b61110e6117be565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611151610ee3565b60405161115e9190611aaa565b60405180910390a1565b6111706108dd565b156111b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a790611fa4565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611222575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112199190611aaa565b60405180910390fd5b61122d5f83836115a5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112989190611aaa565b60405180910390fd5b6112ac825f836115a5565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61137b611168565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113bf610ee3565b6040516113cc9190611aaa565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611446575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161143d9190611aaa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114b6575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114ad9190611aaa565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561159f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161159691906119a8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115f5578060025f8282546115e99190611bf3565b925050819055506116c3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561167e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161167593929190611f25565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361170a578060025f8282540392505081905550611754565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117b191906119a8565b60405180910390a3505050565b6117c66108dd565b611805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fc9061200c565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61184982611807565b6118538185611811565b9350611863818560208601611821565b61186c8161182f565b840191505092915050565b5f6020820190508181035f83015261188f818461183f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118c48261189b565b9050919050565b6118d4816118ba565b81146118de575f80fd5b50565b5f813590506118ef816118cb565b92915050565b5f819050919050565b611907816118f5565b8114611911575f80fd5b50565b5f81359050611922816118fe565b92915050565b5f806040838503121561193e5761193d611897565b5b5f61194b858286016118e1565b925050602061195c85828601611914565b9150509250929050565b5f8115159050919050565b61197a81611966565b82525050565b5f6020820190506119935f830184611971565b92915050565b6119a2816118f5565b82525050565b5f6020820190506119bb5f830184611999565b92915050565b5f805f606084860312156119d8576119d7611897565b5b5f6119e5868287016118e1565b93505060206119f6868287016118e1565b9250506040611a0786828701611914565b9150509250925092565b5f60ff82169050919050565b611a2681611a11565b82525050565b5f602082019050611a3f5f830184611a1d565b92915050565b5f60208284031215611a5a57611a59611897565b5b5f611a67848285016118e1565b91505092915050565b5f60208284031215611a8557611a84611897565b5b5f611a9284828501611914565b91505092915050565b611aa4816118ba565b82525050565b5f602082019050611abd5f830184611a9b565b92915050565b5f8060408385031215611ad957611ad8611897565b5b5f611ae6858286016118e1565b9250506020611af7858286016118e1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b4557607f821691505b602082108103611b5857611b57611b01565b5b50919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f611b92601283611811565b9150611b9d82611b5e565b602082019050919050565b5f6020820190508181035f830152611bbf81611b86565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bfd826118f5565b9150611c08836118f5565b9250828201905080821115611c2057611c1f611bc6565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f611c5a601283611811565b9150611c6582611c26565b602082019050919050565b5f6020820190508181035f830152611c8781611c4e565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e2030000000005f82015250565b5f611cc2601c83611811565b9150611ccd82611c8e565b602082019050919050565b5f6020820190508181035f830152611cef81611cb6565b9050919050565b7f53656e642045544820746f2062757920746f6b656e73000000000000000000005f82015250565b5f611d2a601683611811565b9150611d3582611cf6565b602082019050919050565b5f6020820190508181035f830152611d5781611d1e565b9050919050565b5f611d68826118f5565b9150611d73836118f5565b9250828202611d81816118f5565b91508282048414831517611d9857611d97611bc6565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611dd6826118f5565b9150611de1836118f5565b925082611df157611df0611d9f565b5b828204905092915050565b7f546f6b656e20616d6f756e74206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f611e56602383611811565b9150611e6182611dfc565b604082019050919050565b5f6020820190508181035f830152611e8381611e4a565b9050919050565b7f496e73756666696369656e74204554482073656e7400000000000000000000005f82015250565b5f611ebe601583611811565b9150611ec982611e8a565b602082019050919050565b5f6020820190508181035f830152611eeb81611eb2565b9050919050565b5f611efc826118f5565b9150611f07836118f5565b9250828203905081811115611f1f57611f1e611bc6565b5b92915050565b5f606082019050611f385f830186611a9b565b611f456020830185611999565b611f526040830184611999565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611f8e601083611811565b9150611f9982611f5a565b602082019050919050565b5f6020820190508181035f830152611fbb81611f82565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611ff6601483611811565b915061200182611fc2565b602082019050919050565b5f6020820190508181035f83015261202381611fea565b905091905056fea264697066735822122092017a355a0f9c45c6e8c2142711d2995adba25e6d52940f0cde03a23b176bbf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BE5 CODESIZE SUB DUP1 PUSH2 0x2BE5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST CALLER DUP6 DUP6 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x162 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP4 GT ISZERO PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x151 CALLER DUP5 PUSH2 0x225 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0xB78 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x295 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 PUSH0 DUP4 DUP4 PUSH2 0x2AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3C8 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x383 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x40F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x459 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x522 DUP3 PUSH2 0x4DC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x4EC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x553 PUSH2 0x4C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x55F DUP3 DUP3 PUSH2 0x519 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x57E JUMPI PUSH2 0x57D PUSH2 0x4EC JUMP JUMPDEST JUMPDEST PUSH2 0x587 DUP3 PUSH2 0x4DC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5B4 PUSH2 0x5AF DUP5 PUSH2 0x564 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5CF PUSH2 0x4D8 JUMP JUMPDEST JUMPDEST PUSH2 0x5DB DUP5 DUP3 DUP6 PUSH2 0x594 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x4D4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x607 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x622 DUP2 PUSH2 0x610 JUMP JUMPDEST DUP2 EQ PUSH2 0x62C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x63D DUP2 PUSH2 0x619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x65C JUMPI PUSH2 0x65B PUSH2 0x4CC JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x679 JUMPI PUSH2 0x678 PUSH2 0x4D0 JUMP JUMPDEST JUMPDEST PUSH2 0x685 DUP9 DUP3 DUP10 ADD PUSH2 0x5E3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0x4D0 JUMP JUMPDEST JUMPDEST PUSH2 0x6B2 DUP9 DUP3 DUP10 ADD PUSH2 0x5E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x6C3 DUP9 DUP3 DUP10 ADD PUSH2 0x62F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6D4 DUP9 DUP3 DUP10 ADD PUSH2 0x62F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6E5 DUP9 DUP3 DUP10 ADD PUSH2 0x62F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x740 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x753 JUMPI PUSH2 0x752 PUSH2 0x6FC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7B5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x7BF DUP7 DUP4 PUSH2 0x77A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FA PUSH2 0x7F5 PUSH2 0x7F0 DUP5 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x813 DUP4 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x827 PUSH2 0x81F DUP3 PUSH2 0x801 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x786 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x83B PUSH2 0x82F JUMP JUMPDEST PUSH2 0x846 DUP2 DUP5 DUP5 PUSH2 0x80A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x869 JUMPI PUSH2 0x85E PUSH0 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x84C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8AE JUMPI PUSH2 0x87F DUP2 PUSH2 0x759 JUMP JUMPDEST PUSH2 0x888 DUP5 PUSH2 0x76B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x897 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8AB PUSH2 0x8A3 DUP6 PUSH2 0x76B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x84B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E6 DUP4 DUP4 PUSH2 0x8BF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8FF DUP3 PUSH2 0x6F2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x918 JUMPI PUSH2 0x917 PUSH2 0x4EC JUMP JUMPDEST JUMPDEST PUSH2 0x922 DUP3 SLOAD PUSH2 0x729 JUMP JUMPDEST PUSH2 0x92D DUP3 DUP3 DUP6 PUSH2 0x86D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x95E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x94C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x956 DUP6 DUP3 PUSH2 0x8DB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x96C DUP7 PUSH2 0x759 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x993 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x96E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9B0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9AC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8BF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9EE DUP3 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FE DUP2 PUSH2 0x9E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA17 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20737570706C792065786365656473206D617820737570706C PUSH0 DUP3 ADD MSTORE PUSH32 0x7900000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA87 PUSH1 0x21 DUP4 PUSH2 0xA1D JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 DUP3 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB4 DUP2 PUSH2 0xA7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAF2 DUP3 PUSH2 0x610 JUMP JUMPDEST SWAP2 POP PUSH2 0xAFD DUP4 PUSH2 0x610 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB15 JUMPI PUSH2 0xB14 PUSH2 0xABB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB24 DUP2 PUSH2 0x610 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB3D PUSH0 DUP4 ADD DUP7 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0xB4A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0xB57 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB1B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB72 PUSH0 DUP4 ADD DUP5 PUSH2 0xB1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2060 DUP1 PUSH2 0xB85 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xA2309FF8 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0xFC60C281 EQ PUSH2 0x61C JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x584 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x7FF9B596 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F4 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x474 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x6A61E5FC EQ PUSH2 0x3E6 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x342 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x2DA JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCA1C5C9 EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x743 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DE PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x508 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x532 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58C PUSH2 0xAD5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x599 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A2 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x636 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x647 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x695 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6D2 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DF DUP2 DUP6 DUP6 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x706 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x713 DUP6 DUP3 DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x71E DUP6 DUP6 DUP6 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x73C DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74B PUSH2 0x107F JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1106 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x801 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST GT ISZERO PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D DUP3 DUP3 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x8D1 CALLER DUP3 PUSH2 0x1231 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8FB PUSH2 0x107F JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x93D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x934 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x6B361C807733CC94A3B7BDA39C1C94DCC0511E91AA47B0F7F918068E93976890 DUP2 PUSH1 0x40 MLOAD PUSH2 0x973 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D2 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x9DB PUSH0 PUSH2 0x12B0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9EB PUSH2 0x107F JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x1373 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2C SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA58 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xABD PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADD PUSH2 0x1168 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST GT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8C SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9F CALLER DUP3 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBFD SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC98 PUSH2 0x107F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD11 DUP2 PUSH2 0x12B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x1168 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD55 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP3 PUSH1 0x8 SLOAD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST GT ISZERO PUSH2 0xE17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0E SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE21 CALLER DUP4 PUSH2 0x11B2 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 CALLVALUE GT ISZERO PUSH2 0xE91 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 CALLVALUE PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271 DUP4 PUSH1 0x40 MLOAD PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEF7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF07 DUP5 DUP5 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF89 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF7A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF88 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107A DUP4 DUP4 DUP4 PUSH2 0x15A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1087 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A5 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1104 JUMPI PUSH2 0x10C8 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x110E PUSH2 0x17BE JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1151 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115E SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1170 PUSH2 0x8DD JUMP JUMPDEST ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A7 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1222 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x122D PUSH0 DUP4 DUP4 PUSH2 0x15A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AC DUP3 PUSH0 DUP4 PUSH2 0x15A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x137B PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x13BF PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1446 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AD SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x159F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x167E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1675 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1754 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x17C6 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FC SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1849 DUP3 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x1853 DUP2 DUP6 PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP PUSH2 0x1863 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x182F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188F DUP2 DUP5 PUSH2 0x183F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 DUP3 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP2 EQ PUSH2 0x18DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18EF DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1922 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194B DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195C DUP6 DUP3 DUP7 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP5 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19BB PUSH0 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19D8 JUMPI PUSH2 0x19D7 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E5 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19F6 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A07 DUP7 DUP3 DUP8 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A26 DUP2 PUSH2 0x1A11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1A1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A67 DUP5 DUP3 DUP6 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A92 DUP5 DUP3 DUP6 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP5 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD9 JUMPI PUSH2 0x1AD8 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE6 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AF7 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B45 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B92 PUSH1 0x12 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9D DUP3 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFD DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C08 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5A PUSH1 0x12 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C65 DUP3 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C87 DUP2 PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC2 PUSH1 0x1C DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CEF DUP2 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E642045544820746F2062757920746F6B656E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2A PUSH1 0x16 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D35 DUP3 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D57 DUP2 PUSH2 0x1D1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D68 DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D73 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D81 DUP2 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D98 JUMPI PUSH2 0x1D97 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DD6 DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE1 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DF1 JUMPI PUSH2 0x1DF0 PUSH2 0x1D9F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E56 PUSH1 0x23 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E61 DUP3 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E83 DUP2 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EBE PUSH1 0x15 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC9 DUP3 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EEB DUP2 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFC DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x1F45 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1F52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F8E PUSH1 0x10 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F99 DUP3 PUSH2 0x1F5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FBB DUP2 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF6 PUSH1 0x14 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x2001 DUP3 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2023 DUP2 PUSH2 0x1FEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 ADD PUSH27 0x355A0F9C45C6E8C2142711D2995ADBA25E6D52940F0CDE03A23B17 PUSH12 0xBF64736F6C634300081A0033 ",
							"sourceMap": "231:4125:7:-:0;;;819:451;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1017:10;995:4;1001:6;1675:5:3;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;1065:10:7::2;1048:13;:27;;1040:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1136:10;1124:9;:22;;;;1170:11;1157:10;:24;;;;1192:32;1198:10;1210:13;1192:5;;;:32;;:::i;:::-;1249:13;1235:11;:27;;;;819:451:::0;;;;;231:4125;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1323::-;3056:6;3064;3072;3080;3088;3137:3;3125:9;3116:7;3112:23;3108:33;3105:120;;;3144:79;;:::i;:::-;3105:120;3285:1;3274:9;3270:17;3264:24;3315:18;3307:6;3304:30;3301:117;;;3337:79;;:::i;:::-;3301:117;3442:74;3508:7;3499:6;3488:9;3484:22;3442:74;:::i;:::-;3432:84;;3235:291;3586:2;3575:9;3571:18;3565:25;3617:18;3609:6;3606:30;3603:117;;;3639:79;;:::i;:::-;3603:117;3744:74;3810:7;3801:6;3790:9;3786:22;3744:74;:::i;:::-;3734:84;;3536:292;3867:2;3893:64;3949:7;3940:6;3929:9;3925:22;3893:64;:::i;:::-;3883:74;;3838:129;4006:2;4032:64;4088:7;4079:6;4068:9;4064:22;4032:64;:::i;:::-;4022:74;;3977:129;4145:3;4172:64;4228:7;4219:6;4208:9;4204:22;4172:64;:::i;:::-;4162:74;;4116:130;2930:1323;;;;;;;;:::o;4259:99::-;4311:6;4345:5;4339:12;4329:22;;4259:99;;;:::o;4364:180::-;4412:77;4409:1;4402:88;4509:4;4506:1;4499:15;4533:4;4530:1;4523:15;4550:320;4594:6;4631:1;4625:4;4621:12;4611:22;;4678:1;4672:4;4668:12;4699:18;4689:81;;4755:4;4747:6;4743:17;4733:27;;4689:81;4817:2;4809:6;4806:14;4786:18;4783:38;4780:84;;4836:18;;:::i;:::-;4780:84;4601:269;4550:320;;;:::o;4876:141::-;4925:4;4948:3;4940:11;;4971:3;4968:1;4961:14;5005:4;5002:1;4992:18;4984:26;;4876:141;;;:::o;5023:93::-;5060:6;5107:2;5102;5095:5;5091:14;5087:23;5077:33;;5023:93;;;:::o;5122:107::-;5166:8;5216:5;5210:4;5206:16;5185:37;;5122:107;;;;:::o;5235:393::-;5304:6;5354:1;5342:10;5338:18;5377:97;5407:66;5396:9;5377:97;:::i;:::-;5495:39;5525:8;5514:9;5495:39;:::i;:::-;5483:51;;5567:4;5563:9;5556:5;5552:21;5543:30;;5616:4;5606:8;5602:19;5595:5;5592:30;5582:40;;5311:317;;5235:393;;;;;:::o;5634:60::-;5662:3;5683:5;5676:12;;5634:60;;;:::o;5700:142::-;5750:9;5783:53;5801:34;5810:24;5828:5;5810:24;:::i;:::-;5801:34;:::i;:::-;5783:53;:::i;:::-;5770:66;;5700:142;;;:::o;5848:75::-;5891:3;5912:5;5905:12;;5848:75;;;:::o;5929:269::-;6039:39;6070:7;6039:39;:::i;:::-;6100:91;6149:41;6173:16;6149:41;:::i;:::-;6141:6;6134:4;6128:11;6100:91;:::i;:::-;6094:4;6087:105;6005:193;5929:269;;;:::o;6204:73::-;6249:3;6204:73;:::o;6283:189::-;6360:32;;:::i;:::-;6401:65;6459:6;6451;6445:4;6401:65;:::i;:::-;6336:136;6283:189;;:::o;6478:186::-;6538:120;6555:3;6548:5;6545:14;6538:120;;;6609:39;6646:1;6639:5;6609:39;:::i;:::-;6582:1;6575:5;6571:13;6562:22;;6538:120;;;6478:186;;:::o;6670:543::-;6771:2;6766:3;6763:11;6760:446;;;6805:38;6837:5;6805:38;:::i;:::-;6889:29;6907:10;6889:29;:::i;:::-;6879:8;6875:44;7072:2;7060:10;7057:18;7054:49;;;7093:8;7078:23;;7054:49;7116:80;7172:22;7190:3;7172:22;:::i;:::-;7162:8;7158:37;7145:11;7116:80;:::i;:::-;6775:431;;6760:446;6670:543;;;:::o;7219:117::-;7273:8;7323:5;7317:4;7313:16;7292:37;;7219:117;;;;:::o;7342:169::-;7386:6;7419:51;7467:1;7463:6;7455:5;7452:1;7448:13;7419:51;:::i;:::-;7415:56;7500:4;7494;7490:15;7480:25;;7393:118;7342:169;;;;:::o;7516:295::-;7592:4;7738:29;7763:3;7757:4;7738:29;:::i;:::-;7730:37;;7800:3;7797:1;7793:11;7787:4;7784:21;7776:29;;7516:295;;;;:::o;7816:1395::-;7933:37;7966:3;7933:37;:::i;:::-;8035:18;8027:6;8024:30;8021:56;;;8057:18;;:::i;:::-;8021:56;8101:38;8133:4;8127:11;8101:38;:::i;:::-;8186:67;8246:6;8238;8232:4;8186:67;:::i;:::-;8280:1;8304:4;8291:17;;8336:2;8328:6;8325:14;8353:1;8348:618;;;;9010:1;9027:6;9024:77;;;9076:9;9071:3;9067:19;9061:26;9052:35;;9024:77;9127:67;9187:6;9180:5;9127:67;:::i;:::-;9121:4;9114:81;8983:222;8318:887;;8348:618;8400:4;8396:9;8388:6;8384:22;8434:37;8466:4;8434:37;:::i;:::-;8493:1;8507:208;8521:7;8518:1;8515:14;8507:208;;;8600:9;8595:3;8591:19;8585:26;8577:6;8570:42;8651:1;8643:6;8639:14;8629:24;;8698:2;8687:9;8683:18;8670:31;;8544:4;8541:1;8537:12;8532:17;;8507:208;;;8743:6;8734:7;8731:19;8728:179;;;8801:9;8796:3;8792:19;8786:26;8844:48;8886:4;8878:6;8874:17;8863:9;8844:48;:::i;:::-;8836:6;8829:64;8751:156;8728:179;8953:1;8949;8941:6;8937:14;8933:22;8927:4;8920:36;8355:611;;;8318:887;;7908:1303;;;7816:1395;;:::o;9217:126::-;9254:7;9294:42;9287:5;9283:54;9272:65;;9217:126;;;:::o;9349:96::-;9386:7;9415:24;9433:5;9415:24;:::i;:::-;9404:35;;9349:96;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:169::-;9887:11;9921:6;9916:3;9909:19;9961:4;9956:3;9952:14;9937:29;;9803:169;;;;:::o;9978:220::-;10118:34;10114:1;10106:6;10102:14;10095:58;10187:3;10182:2;10174:6;10170:15;10163:28;9978:220;:::o;10204:366::-;10346:3;10367:67;10431:2;10426:3;10367:67;:::i;:::-;10360:74;;10443:93;10532:3;10443:93;:::i;:::-;10561:2;10556:3;10552:12;10545:19;;10204:366;;;:::o;10576:419::-;10742:4;10780:2;10769:9;10765:18;10757:26;;10829:9;10823:4;10819:20;10815:1;10804:9;10800:17;10793:47;10857:131;10983:4;10857:131;:::i;:::-;10849:139;;10576:419;;;:::o;11001:180::-;11049:77;11046:1;11039:88;11146:4;11143:1;11136:15;11170:4;11167:1;11160:15;11187:191;11227:3;11246:20;11264:1;11246:20;:::i;:::-;11241:25;;11280:20;11298:1;11280:20;:::i;:::-;11275:25;;11323:1;11320;11316:9;11309:16;;11344:3;11341:1;11338:10;11335:36;;;11351:18;;:::i;:::-;11335:36;11187:191;;;;:::o;11384:118::-;11471:24;11489:5;11471:24;:::i;:::-;11466:3;11459:37;11384:118;;:::o;11508:442::-;11657:4;11695:2;11684:9;11680:18;11672:26;;11708:71;11776:1;11765:9;11761:17;11752:6;11708:71;:::i;:::-;11789:72;11857:2;11846:9;11842:18;11833:6;11789:72;:::i;:::-;11871;11939:2;11928:9;11924:18;11915:6;11871:72;:::i;:::-;11508:442;;;;;;:::o;11956:222::-;12049:4;12087:2;12076:9;12072:18;12064:26;;12100:71;12168:1;12157:9;12153:17;12144:6;12100:71;:::i;:::-;11956:222;;;;:::o;231:4125:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_798": {
									"entryPoint": 3818,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_858": {
									"entryPoint": 5078,
									"id": 858,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_780": {
									"entryPoint": 4657,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4223,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_747": {
									"entryPoint": 4530,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1023": {
									"entryPoint": 3811,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_375": {
									"entryPoint": 4979,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 4456,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 6078,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_906": {
									"entryPoint": 3836,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4784,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_637": {
									"entryPoint": 3983,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 4358,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 5541,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_534": {
									"entryPoint": 3086,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_558": {
									"entryPoint": 1736,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_493": {
									"entryPoint": 2437,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1403": {
									"entryPoint": 2247,
									"id": 1403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokensWithAmount_1245": {
									"entryPoint": 3348,
									"id": 1245,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokens_1170": {
									"entryPoint": 2773,
									"id": 1170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_471": {
									"entryPoint": 1834,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getContractBalance_1379": {
									"entryPoint": 2430,
									"id": 1379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenBalance_1391": {
									"entryPoint": 1842,
									"id": 1391,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenPrice_1367": {
									"entryPoint": 2260,
									"id": 1367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalMinted_1359": {
									"entryPoint": 1770,
									"id": 1359,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxSupply_1054": {
									"entryPoint": 3080,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1280": {
									"entryPoint": 2033,
									"id": 1280,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_453": {
									"entryPoint": 1592,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2549,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1312": {
									"entryPoint": 2531,
									"id": 1312,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 2269,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2506,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTokenPrice_1303": {
									"entryPoint": 2291,
									"id": 1303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_462": {
									"entryPoint": 2589,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenPrice_1056": {
									"entryPoint": 2525,
									"id": 1056,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalMinted_1058": {
									"entryPoint": 2733,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_480": {
									"entryPoint": 1779,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_590": {
									"entryPoint": 1788,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3216,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_517": {
									"entryPoint": 2739,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1321": {
									"entryPoint": 2015,
									"id": 1321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1351": {
									"entryPoint": 1859,
									"id": 1351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7973,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9": {
									"entryPoint": 7414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16420:8",
										"nodeType": "YulBlock",
										"src": "0:16420:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5147:263:8",
													"nodeType": "YulBlock",
													"src": "5147:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:8",
																"nodeType": "YulBlock",
																"src": "5193:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:8"
																			},
																			"nativeSrc": "5195:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:8"
																		},
																		"nativeSrc": "5195:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:8"
																		},
																		"nativeSrc": "5164:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:8"
																},
																"nativeSrc": "5160:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:8"
															},
															"nativeSrc": "5157:119:8",
															"nodeType": "YulIf",
															"src": "5157:119:8"
														},
														{
															"nativeSrc": "5286:117:8",
															"nodeType": "YulBlock",
															"src": "5286:117:8",
															"statements": [
																{
																	"nativeSrc": "5301:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:8"
																				},
																				"nativeSrc": "5361:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:8"
																		},
																		"nativeSrc": "5340:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:8",
														"nodeType": "YulTypedName",
														"src": "5117:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:8",
														"nodeType": "YulTypedName",
														"src": "5128:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:8",
														"nodeType": "YulTypedName",
														"src": "5140:6:8",
														"type": ""
													}
												],
												"src": "5081:329:8"
											},
											{
												"body": {
													"nativeSrc": "5481:53:8",
													"nodeType": "YulBlock",
													"src": "5481:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:8"
																		},
																		"nativeSrc": "5503:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:8"
																},
																"nativeSrc": "5491:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:8"
															},
															"nativeSrc": "5491:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:8",
														"nodeType": "YulTypedName",
														"src": "5469:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:8",
														"nodeType": "YulTypedName",
														"src": "5476:3:8",
														"type": ""
													}
												],
												"src": "5416:118:8"
											},
											{
												"body": {
													"nativeSrc": "5638:124:8",
													"nodeType": "YulBlock",
													"src": "5638:124:8",
													"statements": [
														{
															"nativeSrc": "5648:26:8",
															"nodeType": "YulAssignment",
															"src": "5648:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:8"
																},
																"nativeSrc": "5656:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:8"
																		},
																		"nativeSrc": "5737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:8"
																},
																"nativeSrc": "5684:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:8"
															},
															"nativeSrc": "5684:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:8",
														"nodeType": "YulTypedName",
														"src": "5610:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:8",
														"nodeType": "YulTypedName",
														"src": "5622:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:8",
														"nodeType": "YulTypedName",
														"src": "5633:4:8",
														"type": ""
													}
												],
												"src": "5540:222:8"
											},
											{
												"body": {
													"nativeSrc": "5851:391:8",
													"nodeType": "YulBlock",
													"src": "5851:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:8",
																"nodeType": "YulBlock",
																"src": "5897:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:8"
																			},
																			"nativeSrc": "5899:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:8"
																		},
																		"nativeSrc": "5899:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:8"
																		},
																		"nativeSrc": "5868:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:8"
																},
																"nativeSrc": "5864:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:8"
															},
															"nativeSrc": "5861:119:8",
															"nodeType": "YulIf",
															"src": "5861:119:8"
														},
														{
															"nativeSrc": "5990:117:8",
															"nodeType": "YulBlock",
															"src": "5990:117:8",
															"statements": [
																{
																	"nativeSrc": "6005:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:8"
																				},
																				"nativeSrc": "6065:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:8"
																		},
																		"nativeSrc": "6044:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:8",
															"nodeType": "YulBlock",
															"src": "6117:118:8",
															"statements": [
																{
																	"nativeSrc": "6132:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:8"
																				},
																				"nativeSrc": "6193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:8"
																		},
																		"nativeSrc": "6172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:8",
														"nodeType": "YulTypedName",
														"src": "5813:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:8",
														"nodeType": "YulTypedName",
														"src": "5824:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:8",
														"nodeType": "YulTypedName",
														"src": "5836:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:8",
														"nodeType": "YulTypedName",
														"src": "5844:6:8",
														"type": ""
													}
												],
												"src": "5768:474:8"
											},
											{
												"body": {
													"nativeSrc": "6276:152:8",
													"nodeType": "YulBlock",
													"src": "6276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:8"
																},
																"nativeSrc": "6286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:8"
															},
															"nativeSrc": "6286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:8"
																},
																"nativeSrc": "6383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:8"
															},
															"nativeSrc": "6383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nativeSrc": "6407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:8"
															},
															"nativeSrc": "6407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:8"
											},
											{
												"body": {
													"nativeSrc": "6485:269:8",
													"nodeType": "YulBlock",
													"src": "6485:269:8",
													"statements": [
														{
															"nativeSrc": "6495:22:8",
															"nodeType": "YulAssignment",
															"src": "6495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:8"
																},
																"nativeSrc": "6505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																}
															]
														},
														{
															"nativeSrc": "6526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nativeSrc": "6552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:8",
																"nodeType": "YulBlock",
																"src": "6603:51:8",
																"statements": [
																	{
																		"nativeSrc": "6617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:8"
																			},
																			"nativeSrc": "6627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:8"
																},
																"nativeSrc": "6576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:8"
															},
															"nativeSrc": "6573:81:8",
															"nodeType": "YulIf",
															"src": "6573:81:8"
														},
														{
															"body": {
																"nativeSrc": "6706:42:8",
																"nodeType": "YulBlock",
																"src": "6706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:8"
																			},
																			"nativeSrc": "6720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:8"
																		},
																		"nativeSrc": "6720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:8"
																		},
																		"nativeSrc": "6690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:8"
																},
																"nativeSrc": "6667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:8"
															},
															"nativeSrc": "6664:84:8",
															"nodeType": "YulIf",
															"src": "6664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:8",
														"nodeType": "YulTypedName",
														"src": "6469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6434:320:8"
											},
											{
												"body": {
													"nativeSrc": "6866:62:8",
													"nodeType": "YulBlock",
													"src": "6866:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:8"
																		},
																		"nativeSrc": "6884:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:8"
																	},
																	{
																		"hexValue": "4e6f2045544820746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "6900:20:8",
																		"nodeType": "YulLiteral",
																		"src": "6900:20:8",
																		"type": "",
																		"value": "No ETH to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:8"
																},
																"nativeSrc": "6877:44:8",
																"nodeType": "YulFunctionCall",
																"src": "6877:44:8"
															},
															"nativeSrc": "6877:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "6877:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
												"nativeSrc": "6760:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:8",
														"nodeType": "YulTypedName",
														"src": "6858:6:8",
														"type": ""
													}
												],
												"src": "6760:168:8"
											},
											{
												"body": {
													"nativeSrc": "7080:220:8",
													"nodeType": "YulBlock",
													"src": "7080:220:8",
													"statements": [
														{
															"nativeSrc": "7090:74:8",
															"nodeType": "YulAssignment",
															"src": "7090:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7156:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7156:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7161:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7161:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7097:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7097:58:8"
																},
																"nativeSrc": "7097:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7097:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7090:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7262:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7262:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																	"nativeSrc": "7173:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7173:88:8"
																},
																"nativeSrc": "7173:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7173:93:8"
															},
															"nativeSrc": "7173:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7173:93:8"
														},
														{
															"nativeSrc": "7275:19:8",
															"nodeType": "YulAssignment",
															"src": "7275:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7286:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7286:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7291:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7291:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7282:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:8"
																},
																"nativeSrc": "7282:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7282:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7275:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7275:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6934:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7068:3:8",
														"nodeType": "YulTypedName",
														"src": "7068:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7076:3:8",
														"nodeType": "YulTypedName",
														"src": "7076:3:8",
														"type": ""
													}
												],
												"src": "6934:366:8"
											},
											{
												"body": {
													"nativeSrc": "7477:248:8",
													"nodeType": "YulBlock",
													"src": "7477:248:8",
													"statements": [
														{
															"nativeSrc": "7487:26:8",
															"nodeType": "YulAssignment",
															"src": "7487:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7499:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7499:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7510:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7510:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7495:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7495:3:8"
																},
																"nativeSrc": "7495:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7495:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7487:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7487:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7534:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7534:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7545:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7545:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7530:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7530:3:8"
																		},
																		"nativeSrc": "7530:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7530:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7553:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7553:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7559:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7549:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:8"
																		},
																		"nativeSrc": "7549:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7549:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7523:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:8"
																},
																"nativeSrc": "7523:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7523:47:8"
															},
															"nativeSrc": "7523:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7523:47:8"
														},
														{
															"nativeSrc": "7579:139:8",
															"nodeType": "YulAssignment",
															"src": "7579:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7713:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7713:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7587:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7587:124:8"
																},
																"nativeSrc": "7587:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7587:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7579:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7579:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7306:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7457:9:8",
														"nodeType": "YulTypedName",
														"src": "7457:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7472:4:8",
														"nodeType": "YulTypedName",
														"src": "7472:4:8",
														"type": ""
													}
												],
												"src": "7306:419:8"
											},
											{
												"body": {
													"nativeSrc": "7759:152:8",
													"nodeType": "YulBlock",
													"src": "7759:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7776:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7776:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7779:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7779:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7769:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:8"
																},
																"nativeSrc": "7769:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7769:88:8"
															},
															"nativeSrc": "7769:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7769:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7873:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7873:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7876:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7876:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7866:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:8"
																},
																"nativeSrc": "7866:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7866:15:8"
															},
															"nativeSrc": "7866:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7866:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7897:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7897:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7900:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7900:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7890:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7890:6:8"
																},
																"nativeSrc": "7890:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7890:15:8"
															},
															"nativeSrc": "7890:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7890:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7731:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7731:180:8"
											},
											{
												"body": {
													"nativeSrc": "7961:147:8",
													"nodeType": "YulBlock",
													"src": "7961:147:8",
													"statements": [
														{
															"nativeSrc": "7971:25:8",
															"nodeType": "YulAssignment",
															"src": "7971:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7994:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7994:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7976:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7976:17:8"
																},
																"nativeSrc": "7976:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7976:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7971:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7971:1:8"
																}
															]
														},
														{
															"nativeSrc": "8005:25:8",
															"nodeType": "YulAssignment",
															"src": "8005:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8028:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8010:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8010:17:8"
																},
																"nativeSrc": "8010:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8010:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8005:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8005:1:8"
																}
															]
														},
														{
															"nativeSrc": "8039:16:8",
															"nodeType": "YulAssignment",
															"src": "8039:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8050:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8050:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8053:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8053:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8046:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8046:3:8"
																},
																"nativeSrc": "8046:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8046:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8039:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8039:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8079:22:8",
																"nodeType": "YulBlock",
																"src": "8079:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8081:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8081:16:8"
																			},
																			"nativeSrc": "8081:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8081:18:8"
																		},
																		"nativeSrc": "8081:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8081:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8071:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8071:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8074:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8074:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8068:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8068:2:8"
																},
																"nativeSrc": "8068:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8068:10:8"
															},
															"nativeSrc": "8065:36:8",
															"nodeType": "YulIf",
															"src": "8065:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7917:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7948:1:8",
														"nodeType": "YulTypedName",
														"src": "7948:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7951:1:8",
														"nodeType": "YulTypedName",
														"src": "7951:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7957:3:8",
														"nodeType": "YulTypedName",
														"src": "7957:3:8",
														"type": ""
													}
												],
												"src": "7917:191:8"
											},
											{
												"body": {
													"nativeSrc": "8220:62:8",
													"nodeType": "YulBlock",
													"src": "8220:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8242:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8242:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8250:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8250:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8238:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8238:3:8"
																		},
																		"nativeSrc": "8238:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8238:14:8"
																	},
																	{
																		"hexValue": "45786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "8254:20:8",
																		"nodeType": "YulLiteral",
																		"src": "8254:20:8",
																		"type": "",
																		"value": "Exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8231:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8231:6:8"
																},
																"nativeSrc": "8231:44:8",
																"nodeType": "YulFunctionCall",
																"src": "8231:44:8"
															},
															"nativeSrc": "8231:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "8231:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
												"nativeSrc": "8114:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8212:6:8",
														"nodeType": "YulTypedName",
														"src": "8212:6:8",
														"type": ""
													}
												],
												"src": "8114:168:8"
											},
											{
												"body": {
													"nativeSrc": "8434:220:8",
													"nodeType": "YulBlock",
													"src": "8434:220:8",
													"statements": [
														{
															"nativeSrc": "8444:74:8",
															"nodeType": "YulAssignment",
															"src": "8444:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8510:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8510:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8515:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8515:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8451:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8451:58:8"
																},
																"nativeSrc": "8451:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8451:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8444:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8444:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8616:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																	"nativeSrc": "8527:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8527:88:8"
																},
																"nativeSrc": "8527:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8527:93:8"
															},
															"nativeSrc": "8527:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8527:93:8"
														},
														{
															"nativeSrc": "8629:19:8",
															"nodeType": "YulAssignment",
															"src": "8629:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8640:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8640:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8645:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8645:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8636:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8636:3:8"
																},
																"nativeSrc": "8636:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8636:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8629:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8629:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8288:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8422:3:8",
														"nodeType": "YulTypedName",
														"src": "8422:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8430:3:8",
														"nodeType": "YulTypedName",
														"src": "8430:3:8",
														"type": ""
													}
												],
												"src": "8288:366:8"
											},
											{
												"body": {
													"nativeSrc": "8831:248:8",
													"nodeType": "YulBlock",
													"src": "8831:248:8",
													"statements": [
														{
															"nativeSrc": "8841:26:8",
															"nodeType": "YulAssignment",
															"src": "8841:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8853:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8853:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8864:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8864:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8849:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:8"
																},
																"nativeSrc": "8849:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8849:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8841:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8841:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8888:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8888:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8899:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8899:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8884:3:8"
																		},
																		"nativeSrc": "8884:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8884:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8907:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8907:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8913:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8913:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8903:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8903:3:8"
																		},
																		"nativeSrc": "8903:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8903:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8877:6:8"
																},
																"nativeSrc": "8877:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8877:47:8"
															},
															"nativeSrc": "8877:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8877:47:8"
														},
														{
															"nativeSrc": "8933:139:8",
															"nodeType": "YulAssignment",
															"src": "8933:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9067:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9067:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8941:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8941:124:8"
																},
																"nativeSrc": "8941:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8941:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8933:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8933:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8660:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8811:9:8",
														"nodeType": "YulTypedName",
														"src": "8811:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8826:4:8",
														"nodeType": "YulTypedName",
														"src": "8826:4:8",
														"type": ""
													}
												],
												"src": "8660:419:8"
											},
											{
												"body": {
													"nativeSrc": "9191:72:8",
													"nodeType": "YulBlock",
													"src": "9191:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9213:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9213:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9221:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9221:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9209:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9209:3:8"
																		},
																		"nativeSrc": "9209:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9209:14:8"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "9225:30:8",
																		"nodeType": "YulLiteral",
																		"src": "9225:30:8",
																		"type": "",
																		"value": "Price must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9202:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9202:6:8"
																},
																"nativeSrc": "9202:54:8",
																"nodeType": "YulFunctionCall",
																"src": "9202:54:8"
															},
															"nativeSrc": "9202:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "9202:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
												"nativeSrc": "9085:178:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9183:6:8",
														"nodeType": "YulTypedName",
														"src": "9183:6:8",
														"type": ""
													}
												],
												"src": "9085:178:8"
											},
											{
												"body": {
													"nativeSrc": "9415:220:8",
													"nodeType": "YulBlock",
													"src": "9415:220:8",
													"statements": [
														{
															"nativeSrc": "9425:74:8",
															"nodeType": "YulAssignment",
															"src": "9425:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9491:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9491:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9496:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9496:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9432:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9432:58:8"
																},
																"nativeSrc": "9432:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9432:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9425:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9425:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9597:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9597:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																	"nativeSrc": "9508:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9508:88:8"
																},
																"nativeSrc": "9508:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9508:93:8"
															},
															"nativeSrc": "9508:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9508:93:8"
														},
														{
															"nativeSrc": "9610:19:8",
															"nodeType": "YulAssignment",
															"src": "9610:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9621:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9621:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9626:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9617:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9617:3:8"
																},
																"nativeSrc": "9617:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9617:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9610:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9610:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9269:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9403:3:8",
														"nodeType": "YulTypedName",
														"src": "9403:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9411:3:8",
														"nodeType": "YulTypedName",
														"src": "9411:3:8",
														"type": ""
													}
												],
												"src": "9269:366:8"
											},
											{
												"body": {
													"nativeSrc": "9812:248:8",
													"nodeType": "YulBlock",
													"src": "9812:248:8",
													"statements": [
														{
															"nativeSrc": "9822:26:8",
															"nodeType": "YulAssignment",
															"src": "9822:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9834:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9834:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9845:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9845:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9830:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9830:3:8"
																},
																"nativeSrc": "9830:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9830:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9822:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9822:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9869:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9880:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9880:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9865:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:8"
																		},
																		"nativeSrc": "9865:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9865:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9888:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9888:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9894:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9894:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9884:3:8"
																		},
																		"nativeSrc": "9884:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9884:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9858:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:8"
																},
																"nativeSrc": "9858:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9858:47:8"
															},
															"nativeSrc": "9858:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9858:47:8"
														},
														{
															"nativeSrc": "9914:139:8",
															"nodeType": "YulAssignment",
															"src": "9914:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10048:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10048:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9922:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9922:124:8"
																},
																"nativeSrc": "9922:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9922:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9914:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9914:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9641:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9792:9:8",
														"nodeType": "YulTypedName",
														"src": "9792:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9807:4:8",
														"nodeType": "YulTypedName",
														"src": "9807:4:8",
														"type": ""
													}
												],
												"src": "9641:419:8"
											},
											{
												"body": {
													"nativeSrc": "10172:66:8",
													"nodeType": "YulBlock",
													"src": "10172:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10194:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10194:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10202:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10202:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10190:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10190:3:8"
																		},
																		"nativeSrc": "10190:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10190:14:8"
																	},
																	{
																		"hexValue": "53656e642045544820746f2062757920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "10206:24:8",
																		"nodeType": "YulLiteral",
																		"src": "10206:24:8",
																		"type": "",
																		"value": "Send ETH to buy tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10183:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10183:6:8"
																},
																"nativeSrc": "10183:48:8",
																"nodeType": "YulFunctionCall",
																"src": "10183:48:8"
															},
															"nativeSrc": "10183:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "10183:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
												"nativeSrc": "10066:172:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10164:6:8",
														"nodeType": "YulTypedName",
														"src": "10164:6:8",
														"type": ""
													}
												],
												"src": "10066:172:8"
											},
											{
												"body": {
													"nativeSrc": "10390:220:8",
													"nodeType": "YulBlock",
													"src": "10390:220:8",
													"statements": [
														{
															"nativeSrc": "10400:74:8",
															"nodeType": "YulAssignment",
															"src": "10400:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10466:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10466:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10471:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10471:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10407:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10407:58:8"
																},
																"nativeSrc": "10407:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10407:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10400:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10572:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10572:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
																	"nativeSrc": "10483:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10483:88:8"
																},
																"nativeSrc": "10483:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10483:93:8"
															},
															"nativeSrc": "10483:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10483:93:8"
														},
														{
															"nativeSrc": "10585:19:8",
															"nodeType": "YulAssignment",
															"src": "10585:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10596:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10596:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10601:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10601:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10592:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10592:3:8"
																},
																"nativeSrc": "10592:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10592:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10585:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10585:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10244:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10378:3:8",
														"nodeType": "YulTypedName",
														"src": "10378:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10386:3:8",
														"nodeType": "YulTypedName",
														"src": "10386:3:8",
														"type": ""
													}
												],
												"src": "10244:366:8"
											},
											{
												"body": {
													"nativeSrc": "10787:248:8",
													"nodeType": "YulBlock",
													"src": "10787:248:8",
													"statements": [
														{
															"nativeSrc": "10797:26:8",
															"nodeType": "YulAssignment",
															"src": "10797:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10809:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10809:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10820:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10820:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10805:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:8"
																},
																"nativeSrc": "10805:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10805:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10797:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10797:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10844:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10844:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10855:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10855:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10840:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:8"
																		},
																		"nativeSrc": "10840:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10840:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10863:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10863:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10869:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10869:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10859:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10859:3:8"
																		},
																		"nativeSrc": "10859:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10859:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10833:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10833:6:8"
																},
																"nativeSrc": "10833:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10833:47:8"
															},
															"nativeSrc": "10833:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10833:47:8"
														},
														{
															"nativeSrc": "10889:139:8",
															"nodeType": "YulAssignment",
															"src": "10889:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11023:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11023:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10897:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10897:124:8"
																},
																"nativeSrc": "10897:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10897:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10889:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10889:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10616:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10767:9:8",
														"nodeType": "YulTypedName",
														"src": "10767:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10782:4:8",
														"nodeType": "YulTypedName",
														"src": "10782:4:8",
														"type": ""
													}
												],
												"src": "10616:419:8"
											},
											{
												"body": {
													"nativeSrc": "11089:362:8",
													"nodeType": "YulBlock",
													"src": "11089:362:8",
													"statements": [
														{
															"nativeSrc": "11099:25:8",
															"nodeType": "YulAssignment",
															"src": "11099:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11122:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11122:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11104:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11104:17:8"
																},
																"nativeSrc": "11104:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11104:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11099:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11099:1:8"
																}
															]
														},
														{
															"nativeSrc": "11133:25:8",
															"nodeType": "YulAssignment",
															"src": "11133:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11156:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11156:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11138:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11138:17:8"
																},
																"nativeSrc": "11138:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11138:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11133:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11133:1:8"
																}
															]
														},
														{
															"nativeSrc": "11167:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11167:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11190:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11190:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11193:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11193:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11186:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11186:3:8"
																},
																"nativeSrc": "11186:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11186:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11171:11:8",
																	"nodeType": "YulTypedName",
																	"src": "11171:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11204:41:8",
															"nodeType": "YulAssignment",
															"src": "11204:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11233:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "11233:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11215:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11215:17:8"
																},
																"nativeSrc": "11215:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11215:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11204:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "11204:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11422:22:8",
																"nodeType": "YulBlock",
																"src": "11422:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11424:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11424:16:8"
																			},
																			"nativeSrc": "11424:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11424:18:8"
																		},
																		"nativeSrc": "11424:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11424:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11355:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11355:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11348:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "11348:6:8"
																				},
																				"nativeSrc": "11348:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11348:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11378:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11378:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11385:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "11385:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11394:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "11394:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11381:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11381:3:8"
																						},
																						"nativeSrc": "11381:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11381:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11375:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11375:2:8"
																				},
																				"nativeSrc": "11375:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11375:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11328:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "11328:2:8"
																		},
																		"nativeSrc": "11328:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11328:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11308:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11308:6:8"
																},
																"nativeSrc": "11308:113:8",
																"nodeType": "YulFunctionCall",
																"src": "11308:113:8"
															},
															"nativeSrc": "11305:139:8",
															"nodeType": "YulIf",
															"src": "11305:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11041:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11072:1:8",
														"nodeType": "YulTypedName",
														"src": "11072:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11075:1:8",
														"nodeType": "YulTypedName",
														"src": "11075:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11081:7:8",
														"nodeType": "YulTypedName",
														"src": "11081:7:8",
														"type": ""
													}
												],
												"src": "11041:410:8"
											},
											{
												"body": {
													"nativeSrc": "11485:152:8",
													"nodeType": "YulBlock",
													"src": "11485:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11502:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11502:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11505:77:8",
																		"nodeType": "YulLiteral",
																		"src": "11505:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:8"
																},
																"nativeSrc": "11495:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11495:88:8"
															},
															"nativeSrc": "11495:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "11495:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11599:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11599:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11602:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11602:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11592:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11592:6:8"
																},
																"nativeSrc": "11592:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11592:15:8"
															},
															"nativeSrc": "11592:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11592:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11623:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11623:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11626:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11626:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11616:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11616:6:8"
																},
																"nativeSrc": "11616:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11616:15:8"
															},
															"nativeSrc": "11616:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11616:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11457:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "11457:180:8"
											},
											{
												"body": {
													"nativeSrc": "11685:143:8",
													"nodeType": "YulBlock",
													"src": "11685:143:8",
													"statements": [
														{
															"nativeSrc": "11695:25:8",
															"nodeType": "YulAssignment",
															"src": "11695:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11718:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11718:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11700:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11700:17:8"
																},
																"nativeSrc": "11700:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11700:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11695:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11695:1:8"
																}
															]
														},
														{
															"nativeSrc": "11729:25:8",
															"nodeType": "YulAssignment",
															"src": "11729:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11752:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11752:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11734:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11734:17:8"
																},
																"nativeSrc": "11734:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11734:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11729:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11729:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11776:22:8",
																"nodeType": "YulBlock",
																"src": "11776:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11778:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11778:16:8"
																			},
																			"nativeSrc": "11778:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11778:18:8"
																		},
																		"nativeSrc": "11778:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11778:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11773:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11773:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11766:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:8"
																},
																"nativeSrc": "11766:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11766:9:8"
															},
															"nativeSrc": "11763:35:8",
															"nodeType": "YulIf",
															"src": "11763:35:8"
														},
														{
															"nativeSrc": "11808:14:8",
															"nodeType": "YulAssignment",
															"src": "11808:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11817:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11817:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11820:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11820:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11813:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11813:3:8"
																},
																"nativeSrc": "11813:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11813:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11808:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11808:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11643:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11674:1:8",
														"nodeType": "YulTypedName",
														"src": "11674:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11677:1:8",
														"nodeType": "YulTypedName",
														"src": "11677:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11683:1:8",
														"nodeType": "YulTypedName",
														"src": "11683:1:8",
														"type": ""
													}
												],
												"src": "11643:185:8"
											},
											{
												"body": {
													"nativeSrc": "11940:116:8",
													"nodeType": "YulBlock",
													"src": "11940:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11962:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11962:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11970:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11970:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11958:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11958:3:8"
																		},
																		"nativeSrc": "11958:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11958:14:8"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "11974:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11974:34:8",
																		"type": "",
																		"value": "Token amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11951:6:8"
																},
																"nativeSrc": "11951:58:8",
																"nodeType": "YulFunctionCall",
																"src": "11951:58:8"
															},
															"nativeSrc": "11951:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "11951:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12030:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12038:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12038:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12026:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12026:3:8"
																		},
																		"nativeSrc": "12026:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12026:15:8"
																	},
																	{
																		"hexValue": "6e2030",
																		"kind": "string",
																		"nativeSrc": "12043:5:8",
																		"nodeType": "YulLiteral",
																		"src": "12043:5:8",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12019:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12019:6:8"
																},
																"nativeSrc": "12019:30:8",
																"nodeType": "YulFunctionCall",
																"src": "12019:30:8"
															},
															"nativeSrc": "12019:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "12019:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf",
												"nativeSrc": "11834:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11932:6:8",
														"nodeType": "YulTypedName",
														"src": "11932:6:8",
														"type": ""
													}
												],
												"src": "11834:222:8"
											},
											{
												"body": {
													"nativeSrc": "12208:220:8",
													"nodeType": "YulBlock",
													"src": "12208:220:8",
													"statements": [
														{
															"nativeSrc": "12218:74:8",
															"nodeType": "YulAssignment",
															"src": "12218:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12284:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12284:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12289:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12289:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12225:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12225:58:8"
																},
																"nativeSrc": "12225:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12225:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12218:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12218:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12390:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12390:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf",
																	"nativeSrc": "12301:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12301:88:8"
																},
																"nativeSrc": "12301:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12301:93:8"
															},
															"nativeSrc": "12301:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12301:93:8"
														},
														{
															"nativeSrc": "12403:19:8",
															"nodeType": "YulAssignment",
															"src": "12403:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12414:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12414:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12419:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12419:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12410:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12410:3:8"
																},
																"nativeSrc": "12410:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12410:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12403:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12403:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12062:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12196:3:8",
														"nodeType": "YulTypedName",
														"src": "12196:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12204:3:8",
														"nodeType": "YulTypedName",
														"src": "12204:3:8",
														"type": ""
													}
												],
												"src": "12062:366:8"
											},
											{
												"body": {
													"nativeSrc": "12605:248:8",
													"nodeType": "YulBlock",
													"src": "12605:248:8",
													"statements": [
														{
															"nativeSrc": "12615:26:8",
															"nodeType": "YulAssignment",
															"src": "12615:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12627:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12627:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12638:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12638:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12623:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12623:3:8"
																},
																"nativeSrc": "12623:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12623:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12615:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12615:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12662:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12662:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12673:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12673:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12658:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12658:3:8"
																		},
																		"nativeSrc": "12658:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12658:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12681:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12681:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12687:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12687:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12677:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12677:3:8"
																		},
																		"nativeSrc": "12677:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12677:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12651:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12651:6:8"
																},
																"nativeSrc": "12651:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12651:47:8"
															},
															"nativeSrc": "12651:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12651:47:8"
														},
														{
															"nativeSrc": "12707:139:8",
															"nodeType": "YulAssignment",
															"src": "12707:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12841:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12841:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12715:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12715:124:8"
																},
																"nativeSrc": "12715:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12715:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12707:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12707:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12434:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12585:9:8",
														"nodeType": "YulTypedName",
														"src": "12585:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12600:4:8",
														"nodeType": "YulTypedName",
														"src": "12600:4:8",
														"type": ""
													}
												],
												"src": "12434:419:8"
											},
											{
												"body": {
													"nativeSrc": "12965:65:8",
													"nodeType": "YulBlock",
													"src": "12965:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12987:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12987:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12995:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12995:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12983:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:8"
																		},
																		"nativeSrc": "12983:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12983:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74204554482073656e74",
																		"kind": "string",
																		"nativeSrc": "12999:23:8",
																		"nodeType": "YulLiteral",
																		"src": "12999:23:8",
																		"type": "",
																		"value": "Insufficient ETH sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12976:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12976:6:8"
																},
																"nativeSrc": "12976:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12976:47:8"
															},
															"nativeSrc": "12976:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12976:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
												"nativeSrc": "12859:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12957:6:8",
														"nodeType": "YulTypedName",
														"src": "12957:6:8",
														"type": ""
													}
												],
												"src": "12859:171:8"
											},
											{
												"body": {
													"nativeSrc": "13182:220:8",
													"nodeType": "YulBlock",
													"src": "13182:220:8",
													"statements": [
														{
															"nativeSrc": "13192:74:8",
															"nodeType": "YulAssignment",
															"src": "13192:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13258:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13258:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13263:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13199:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13199:58:8"
																},
																"nativeSrc": "13199:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13199:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13192:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13192:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13364:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13364:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
																	"nativeSrc": "13275:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13275:88:8"
																},
																"nativeSrc": "13275:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13275:93:8"
															},
															"nativeSrc": "13275:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13275:93:8"
														},
														{
															"nativeSrc": "13377:19:8",
															"nodeType": "YulAssignment",
															"src": "13377:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13388:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13388:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13393:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13393:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13384:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13384:3:8"
																},
																"nativeSrc": "13384:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13384:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13377:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13036:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13170:3:8",
														"nodeType": "YulTypedName",
														"src": "13170:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13178:3:8",
														"nodeType": "YulTypedName",
														"src": "13178:3:8",
														"type": ""
													}
												],
												"src": "13036:366:8"
											},
											{
												"body": {
													"nativeSrc": "13579:248:8",
													"nodeType": "YulBlock",
													"src": "13579:248:8",
													"statements": [
														{
															"nativeSrc": "13589:26:8",
															"nodeType": "YulAssignment",
															"src": "13589:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13601:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13601:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13612:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13612:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13597:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13597:3:8"
																},
																"nativeSrc": "13597:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13597:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13589:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13589:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13636:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13636:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13647:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13647:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13632:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13632:3:8"
																		},
																		"nativeSrc": "13632:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13632:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13655:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13655:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13661:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13661:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13651:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13651:3:8"
																		},
																		"nativeSrc": "13651:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13651:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13625:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13625:6:8"
																},
																"nativeSrc": "13625:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13625:47:8"
															},
															"nativeSrc": "13625:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13625:47:8"
														},
														{
															"nativeSrc": "13681:139:8",
															"nodeType": "YulAssignment",
															"src": "13681:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13815:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13815:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13689:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13689:124:8"
																},
																"nativeSrc": "13689:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13689:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13681:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13681:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13408:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13559:9:8",
														"nodeType": "YulTypedName",
														"src": "13559:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13574:4:8",
														"nodeType": "YulTypedName",
														"src": "13574:4:8",
														"type": ""
													}
												],
												"src": "13408:419:8"
											},
											{
												"body": {
													"nativeSrc": "13878:149:8",
													"nodeType": "YulBlock",
													"src": "13878:149:8",
													"statements": [
														{
															"nativeSrc": "13888:25:8",
															"nodeType": "YulAssignment",
															"src": "13888:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13911:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13911:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13893:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13893:17:8"
																},
																"nativeSrc": "13893:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13893:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13888:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13888:1:8"
																}
															]
														},
														{
															"nativeSrc": "13922:25:8",
															"nodeType": "YulAssignment",
															"src": "13922:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13945:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13945:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13927:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13927:17:8"
																},
																"nativeSrc": "13927:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13927:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13922:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13922:1:8"
																}
															]
														},
														{
															"nativeSrc": "13956:17:8",
															"nodeType": "YulAssignment",
															"src": "13956:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13968:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13968:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13971:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13971:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13964:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13964:3:8"
																},
																"nativeSrc": "13964:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13964:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13956:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13956:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13998:22:8",
																"nodeType": "YulBlock",
																"src": "13998:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14000:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14000:16:8"
																			},
																			"nativeSrc": "14000:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14000:18:8"
																		},
																		"nativeSrc": "14000:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14000:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13989:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13989:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13995:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13995:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13986:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13986:2:8"
																},
																"nativeSrc": "13986:11:8",
																"nodeType": "YulFunctionCall",
																"src": "13986:11:8"
															},
															"nativeSrc": "13983:37:8",
															"nodeType": "YulIf",
															"src": "13983:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13833:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13864:1:8",
														"nodeType": "YulTypedName",
														"src": "13864:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13867:1:8",
														"nodeType": "YulTypedName",
														"src": "13867:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13873:4:8",
														"nodeType": "YulTypedName",
														"src": "13873:4:8",
														"type": ""
													}
												],
												"src": "13833:194:8"
											},
											{
												"body": {
													"nativeSrc": "14187:288:8",
													"nodeType": "YulBlock",
													"src": "14187:288:8",
													"statements": [
														{
															"nativeSrc": "14197:26:8",
															"nodeType": "YulAssignment",
															"src": "14197:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14209:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14220:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14220:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14205:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:8"
																},
																"nativeSrc": "14205:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14205:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14197:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14277:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14277:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14290:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14290:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14301:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14301:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14286:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14286:3:8"
																		},
																		"nativeSrc": "14286:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14286:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14233:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14233:43:8"
																},
																"nativeSrc": "14233:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14233:71:8"
															},
															"nativeSrc": "14233:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14233:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14358:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14358:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14371:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14371:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14382:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14382:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14367:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14367:3:8"
																		},
																		"nativeSrc": "14367:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14367:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14314:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14314:43:8"
																},
																"nativeSrc": "14314:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14314:72:8"
															},
															"nativeSrc": "14314:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14314:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14440:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14453:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14453:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14464:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14464:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14449:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14449:3:8"
																		},
																		"nativeSrc": "14449:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14449:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14396:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14396:43:8"
																},
																"nativeSrc": "14396:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14396:72:8"
															},
															"nativeSrc": "14396:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14396:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14033:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14143:9:8",
														"nodeType": "YulTypedName",
														"src": "14143:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14155:6:8",
														"nodeType": "YulTypedName",
														"src": "14155:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14163:6:8",
														"nodeType": "YulTypedName",
														"src": "14163:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14171:6:8",
														"nodeType": "YulTypedName",
														"src": "14171:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14182:4:8",
														"nodeType": "YulTypedName",
														"src": "14182:4:8",
														"type": ""
													}
												],
												"src": "14033:442:8"
											},
											{
												"body": {
													"nativeSrc": "14587:60:8",
													"nodeType": "YulBlock",
													"src": "14587:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14609:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14609:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14617:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14617:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14605:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14605:3:8"
																		},
																		"nativeSrc": "14605:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14605:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "14621:18:8",
																		"nodeType": "YulLiteral",
																		"src": "14621:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14598:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14598:6:8"
																},
																"nativeSrc": "14598:42:8",
																"nodeType": "YulFunctionCall",
																"src": "14598:42:8"
															},
															"nativeSrc": "14598:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "14598:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "14481:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14579:6:8",
														"nodeType": "YulTypedName",
														"src": "14579:6:8",
														"type": ""
													}
												],
												"src": "14481:166:8"
											},
											{
												"body": {
													"nativeSrc": "14799:220:8",
													"nodeType": "YulBlock",
													"src": "14799:220:8",
													"statements": [
														{
															"nativeSrc": "14809:74:8",
															"nodeType": "YulAssignment",
															"src": "14809:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14875:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14875:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14880:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14880:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14816:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14816:58:8"
																},
																"nativeSrc": "14816:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14816:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14809:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14809:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14981:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14981:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "14892:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14892:88:8"
																},
																"nativeSrc": "14892:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14892:93:8"
															},
															"nativeSrc": "14892:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14892:93:8"
														},
														{
															"nativeSrc": "14994:19:8",
															"nodeType": "YulAssignment",
															"src": "14994:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15005:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15005:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15010:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15010:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15001:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15001:3:8"
																},
																"nativeSrc": "15001:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15001:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14994:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14653:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14787:3:8",
														"nodeType": "YulTypedName",
														"src": "14787:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14795:3:8",
														"nodeType": "YulTypedName",
														"src": "14795:3:8",
														"type": ""
													}
												],
												"src": "14653:366:8"
											},
											{
												"body": {
													"nativeSrc": "15196:248:8",
													"nodeType": "YulBlock",
													"src": "15196:248:8",
													"statements": [
														{
															"nativeSrc": "15206:26:8",
															"nodeType": "YulAssignment",
															"src": "15206:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15218:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15218:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15229:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15229:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15214:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15214:3:8"
																},
																"nativeSrc": "15214:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15214:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15206:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15206:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15253:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15253:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15264:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15264:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15249:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15249:3:8"
																		},
																		"nativeSrc": "15249:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15249:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15272:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15272:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15278:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15278:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15268:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15268:3:8"
																		},
																		"nativeSrc": "15268:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15268:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15242:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15242:6:8"
																},
																"nativeSrc": "15242:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15242:47:8"
															},
															"nativeSrc": "15242:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15242:47:8"
														},
														{
															"nativeSrc": "15298:139:8",
															"nodeType": "YulAssignment",
															"src": "15298:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15432:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15432:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15306:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15306:124:8"
																},
																"nativeSrc": "15306:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15306:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15298:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15298:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15025:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15176:9:8",
														"nodeType": "YulTypedName",
														"src": "15176:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15191:4:8",
														"nodeType": "YulTypedName",
														"src": "15191:4:8",
														"type": ""
													}
												],
												"src": "15025:419:8"
											},
											{
												"body": {
													"nativeSrc": "15556:64:8",
													"nodeType": "YulBlock",
													"src": "15556:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15578:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15578:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15586:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15586:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15574:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15574:3:8"
																		},
																		"nativeSrc": "15574:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15574:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "15590:22:8",
																		"nodeType": "YulLiteral",
																		"src": "15590:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15567:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15567:6:8"
																},
																"nativeSrc": "15567:46:8",
																"nodeType": "YulFunctionCall",
																"src": "15567:46:8"
															},
															"nativeSrc": "15567:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "15567:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "15450:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15548:6:8",
														"nodeType": "YulTypedName",
														"src": "15548:6:8",
														"type": ""
													}
												],
												"src": "15450:170:8"
											},
											{
												"body": {
													"nativeSrc": "15772:220:8",
													"nodeType": "YulBlock",
													"src": "15772:220:8",
													"statements": [
														{
															"nativeSrc": "15782:74:8",
															"nodeType": "YulAssignment",
															"src": "15782:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15848:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15848:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15853:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15853:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15789:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15789:58:8"
																},
																"nativeSrc": "15789:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15789:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15782:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15782:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15954:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15954:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "15865:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15865:88:8"
																},
																"nativeSrc": "15865:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15865:93:8"
															},
															"nativeSrc": "15865:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15865:93:8"
														},
														{
															"nativeSrc": "15967:19:8",
															"nodeType": "YulAssignment",
															"src": "15967:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15978:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15978:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15983:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15983:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15974:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15974:3:8"
																},
																"nativeSrc": "15974:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15974:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15967:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15967:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15626:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15760:3:8",
														"nodeType": "YulTypedName",
														"src": "15760:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15768:3:8",
														"nodeType": "YulTypedName",
														"src": "15768:3:8",
														"type": ""
													}
												],
												"src": "15626:366:8"
											},
											{
												"body": {
													"nativeSrc": "16169:248:8",
													"nodeType": "YulBlock",
													"src": "16169:248:8",
													"statements": [
														{
															"nativeSrc": "16179:26:8",
															"nodeType": "YulAssignment",
															"src": "16179:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16191:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16191:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16202:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16202:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16187:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16187:3:8"
																},
																"nativeSrc": "16187:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16187:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16179:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16179:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16226:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16226:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16237:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16237:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16222:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16222:3:8"
																		},
																		"nativeSrc": "16222:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16222:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16245:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "16245:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16251:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16251:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16241:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16241:3:8"
																		},
																		"nativeSrc": "16241:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16241:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16215:6:8"
																},
																"nativeSrc": "16215:47:8",
																"nodeType": "YulFunctionCall",
																"src": "16215:47:8"
															},
															"nativeSrc": "16215:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "16215:47:8"
														},
														{
															"nativeSrc": "16271:139:8",
															"nodeType": "YulAssignment",
															"src": "16271:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16405:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16405:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16279:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "16279:124:8"
																},
																"nativeSrc": "16279:131:8",
																"nodeType": "YulFunctionCall",
																"src": "16279:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16271:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16271:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15998:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16149:9:8",
														"nodeType": "YulTypedName",
														"src": "16149:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16164:4:8",
														"nodeType": "YulTypedName",
														"src": "16164:4:8",
														"type": ""
													}
												],
												"src": "15998:419:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(memPtr) {\n\n        mstore(add(memPtr, 0), \"No ETH to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Send ETH to buy tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token amount must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient ETH sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101b6575f3560e01c80636f9fb98a116100eb578063a2309ff811610089578063d5abeb0111610063578063d5abeb011461058e578063dd62ed3e146105b8578063f2fde38b146105f4578063fc60c2811461061c576101b6565b8063a2309ff81461051e578063a9059cbb14610548578063d0febe4c14610584576101b6565b80637ff9b596116100c55780637ff9b5961461048a5780638456cb59146104b45780638da5cb5b146104ca57806395d89b41146104f4576101b6565b80636f9fb98a1461040e57806370a0823114610438578063715018a614610474576101b6565b80633ccfd60b1161015857806342966c681161013257806342966c681461036a5780634b94f50e146103925780635c975abb146103bc5780636a61e5fc146103e6576101b6565b80633ccfd60b146103165780633f4ba83a1461032c57806340c10f1914610342576101b6565b806318160ddd1161019457806318160ddd1461024a57806323b872dd14610274578063313ce567146102b05780633aecd0e3146102da576101b6565b806306fdde03146101ba578063095ea7b3146101e45780630ca1c5c914610220575b5f80fd5b3480156101c5575f80fd5b506101ce610638565b6040516101db9190611877565b60405180910390f35b3480156101ef575f80fd5b5061020a60048036038101906102059190611928565b6106c8565b6040516102179190611980565b60405180910390f35b34801561022b575f80fd5b506102346106ea565b60405161024191906119a8565b60405180910390f35b348015610255575f80fd5b5061025e6106f3565b60405161026b91906119a8565b60405180910390f35b34801561027f575f80fd5b5061029a600480360381019061029591906119c1565b6106fc565b6040516102a79190611980565b60405180910390f35b3480156102bb575f80fd5b506102c461072a565b6040516102d19190611a2c565b60405180910390f35b3480156102e5575f80fd5b5061030060048036038101906102fb9190611a45565b610732565b60405161030d91906119a8565b60405180910390f35b348015610321575f80fd5b5061032a610743565b005b348015610337575f80fd5b506103406107df565b005b34801561034d575f80fd5b5061036860048036038101906103639190611928565b6107f1565b005b348015610375575f80fd5b50610390600480360381019061038b9190611a70565b6108c7565b005b34801561039d575f80fd5b506103a66108d4565b6040516103b391906119a8565b60405180910390f35b3480156103c7575f80fd5b506103d06108dd565b6040516103dd9190611980565b60405180910390f35b3480156103f1575f80fd5b5061040c60048036038101906104079190611a70565b6108f3565b005b348015610419575f80fd5b5061042261097e565b60405161042f91906119a8565b60405180910390f35b348015610443575f80fd5b5061045e60048036038101906104599190611a45565b610985565b60405161046b91906119a8565b60405180910390f35b34801561047f575f80fd5b506104886109ca565b005b348015610495575f80fd5b5061049e6109dd565b6040516104ab91906119a8565b60405180910390f35b3480156104bf575f80fd5b506104c86109e3565b005b3480156104d5575f80fd5b506104de6109f5565b6040516104eb9190611aaa565b60405180910390f35b3480156104ff575f80fd5b50610508610a1d565b6040516105159190611877565b60405180910390f35b348015610529575f80fd5b50610532610aad565b60405161053f91906119a8565b60405180910390f35b348015610553575f80fd5b5061056e60048036038101906105699190611928565b610ab3565b60405161057b9190611980565b60405180910390f35b61058c610ad5565b005b348015610599575f80fd5b506105a2610c08565b6040516105af91906119a8565b60405180910390f35b3480156105c3575f80fd5b506105de60048036038101906105d99190611ac3565b610c0e565b6040516105eb91906119a8565b60405180910390f35b3480156105ff575f80fd5b5061061a60048036038101906106159190611a45565b610c90565b005b61063660048036038101906106319190611a70565b610d14565b005b60606003805461064790611b2e565b80601f016020809104026020016040519081016040528092919081815260200182805461067390611b2e565b80156106be5780601f10610695576101008083540402835291602001916106be565b820191905f5260205f20905b8154815290600101906020018083116106a157829003601f168201915b5050505050905090565b5f806106d2610ee3565b90506106df818585610eea565b600191505092915050565b5f600854905090565b5f600254905090565b5f80610706610ee3565b9050610713858285610efc565b61071e858585610f8f565b60019150509392505050565b5f6012905090565b5f61073c82610985565b9050919050565b61074b61107f565b5f4790505f8111610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890611ba8565b60405180910390fd5b6107996109f5565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156107db573d5f803e3d5ffd5b5050565b6107e761107f565b6107ef611106565b565b6107f961107f565b610801611168565b600654816008546108129190611bf3565b1115610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084a90611c70565b60405180910390fd5b61085d82826111b2565b8060085f82825461086e9190611bf3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273826040516108bb91906119a8565b60405180910390a25050565b6108d13382611231565b50565b5f600754905090565b5f600560149054906101000a900460ff16905090565b6108fb61107f565b5f811161093d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093490611cd8565b60405180910390fd5b806007819055507f6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e939768908160405161097391906119a8565b60405180910390a150565b5f47905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109d261107f565b6109db5f6112b0565b565b60075481565b6109eb61107f565b6109f3611373565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a2c90611b2e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5890611b2e565b8015610aa35780601f10610a7a57610100808354040283529160200191610aa3565b820191905f5260205f20905b815481529060010190602001808311610a8657829003601f168201915b5050505050905090565b60085481565b5f80610abd610ee3565b9050610aca818585610f8f565b600191505092915050565b610add611168565b5f3411610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1690611d40565b60405180910390fd5b5f670de0b6b3a764000060075434610b379190611d5e565b610b419190611dcc565b905060065481600854610b549190611bf3565b1115610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c90611c70565b60405180910390fd5b610b9f33826111b2565b8060085f828254610bb09190611bf3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc27182604051610bfd91906119a8565b60405180910390a250565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c9861107f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d08575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cff9190611aaa565b60405180910390fd5b610d11816112b0565b50565b610d1c611168565b5f8111610d5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5590611e6c565b60405180910390fd5b5f600754670de0b6b3a764000083610d769190611d5e565b610d809190611dcc565b905080341015610dc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbc90611ed4565b60405180910390fd5b60065482600854610dd69190611bf3565b1115610e17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0e90611c70565b60405180910390fd5b610e2133836111b2565b8160085f828254610e329190611bf3565b9250508190555080341115610e91573373ffffffffffffffffffffffffffffffffffffffff166108fc8234610e679190611ef2565b90811502906040515f60405180830381858888f19350505050158015610e8f573d5f803e3d5ffd5b505b3373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc27183604051610ed791906119a8565b60405180910390a25050565b5f33905090565b610ef783838360016113d6565b505050565b5f610f078484610c0e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f895781811015610f7a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f7193929190611f25565b60405180910390fd5b610f8884848484035f6113d6565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fff575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ff69190611aaa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361106f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110669190611aaa565b60405180910390fd5b61107a8383836115a5565b505050565b611087610ee3565b73ffffffffffffffffffffffffffffffffffffffff166110a56109f5565b73ffffffffffffffffffffffffffffffffffffffff1614611104576110c8610ee3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110fb9190611aaa565b60405180910390fd5b565b61110e6117be565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611151610ee3565b60405161115e9190611aaa565b60405180910390a1565b6111706108dd565b156111b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a790611fa4565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611222575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112199190611aaa565b60405180910390fd5b61122d5f83836115a5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112989190611aaa565b60405180910390fd5b6112ac825f836115a5565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61137b611168565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113bf610ee3565b6040516113cc9190611aaa565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611446575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161143d9190611aaa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114b6575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114ad9190611aaa565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561159f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161159691906119a8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115f5578060025f8282546115e99190611bf3565b925050819055506116c3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561167e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161167593929190611f25565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361170a578060025f8282540392505081905550611754565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117b191906119a8565b60405180910390a3505050565b6117c66108dd565b611805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fc9061200c565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61184982611807565b6118538185611811565b9350611863818560208601611821565b61186c8161182f565b840191505092915050565b5f6020820190508181035f83015261188f818461183f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118c48261189b565b9050919050565b6118d4816118ba565b81146118de575f80fd5b50565b5f813590506118ef816118cb565b92915050565b5f819050919050565b611907816118f5565b8114611911575f80fd5b50565b5f81359050611922816118fe565b92915050565b5f806040838503121561193e5761193d611897565b5b5f61194b858286016118e1565b925050602061195c85828601611914565b9150509250929050565b5f8115159050919050565b61197a81611966565b82525050565b5f6020820190506119935f830184611971565b92915050565b6119a2816118f5565b82525050565b5f6020820190506119bb5f830184611999565b92915050565b5f805f606084860312156119d8576119d7611897565b5b5f6119e5868287016118e1565b93505060206119f6868287016118e1565b9250506040611a0786828701611914565b9150509250925092565b5f60ff82169050919050565b611a2681611a11565b82525050565b5f602082019050611a3f5f830184611a1d565b92915050565b5f60208284031215611a5a57611a59611897565b5b5f611a67848285016118e1565b91505092915050565b5f60208284031215611a8557611a84611897565b5b5f611a9284828501611914565b91505092915050565b611aa4816118ba565b82525050565b5f602082019050611abd5f830184611a9b565b92915050565b5f8060408385031215611ad957611ad8611897565b5b5f611ae6858286016118e1565b9250506020611af7858286016118e1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b4557607f821691505b602082108103611b5857611b57611b01565b5b50919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f611b92601283611811565b9150611b9d82611b5e565b602082019050919050565b5f6020820190508181035f830152611bbf81611b86565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bfd826118f5565b9150611c08836118f5565b9250828201905080821115611c2057611c1f611bc6565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f611c5a601283611811565b9150611c6582611c26565b602082019050919050565b5f6020820190508181035f830152611c8781611c4e565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e2030000000005f82015250565b5f611cc2601c83611811565b9150611ccd82611c8e565b602082019050919050565b5f6020820190508181035f830152611cef81611cb6565b9050919050565b7f53656e642045544820746f2062757920746f6b656e73000000000000000000005f82015250565b5f611d2a601683611811565b9150611d3582611cf6565b602082019050919050565b5f6020820190508181035f830152611d5781611d1e565b9050919050565b5f611d68826118f5565b9150611d73836118f5565b9250828202611d81816118f5565b91508282048414831517611d9857611d97611bc6565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611dd6826118f5565b9150611de1836118f5565b925082611df157611df0611d9f565b5b828204905092915050565b7f546f6b656e20616d6f756e74206d7573742062652067726561746572207468615f8201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b5f611e56602383611811565b9150611e6182611dfc565b604082019050919050565b5f6020820190508181035f830152611e8381611e4a565b9050919050565b7f496e73756666696369656e74204554482073656e7400000000000000000000005f82015250565b5f611ebe601583611811565b9150611ec982611e8a565b602082019050919050565b5f6020820190508181035f830152611eeb81611eb2565b9050919050565b5f611efc826118f5565b9150611f07836118f5565b9250828203905081811115611f1f57611f1e611bc6565b5b92915050565b5f606082019050611f385f830186611a9b565b611f456020830185611999565b611f526040830184611999565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611f8e601083611811565b9150611f9982611f5a565b602082019050919050565b5f6020820190508181035f830152611fbb81611f82565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611ff6601483611811565b915061200182611fc2565b602082019050919050565b5f6020820190508181035f83015261202381611fea565b905091905056fea264697066735822122092017a355a0f9c45c6e8c2142711d2995adba25e6d52940f0cde03a23b176bbf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xA2309FF8 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0xFC60C281 EQ PUSH2 0x61C JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x584 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x7FF9B596 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F4 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x474 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x6A61E5FC EQ PUSH2 0x3E6 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x342 JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x2DA JUMPI PUSH2 0x1B6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCA1C5C9 EQ PUSH2 0x220 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x743 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DE PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x508 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x532 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58C PUSH2 0xAD5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x599 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A2 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x636 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x647 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x695 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6D2 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DF DUP2 DUP6 DUP6 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x706 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x713 DUP6 DUP3 DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x71E DUP6 DUP6 DUP6 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x73C DUP3 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74B PUSH2 0x107F JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1106 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x801 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST GT ISZERO PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D DUP3 DUP3 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x8D1 CALLER DUP3 PUSH2 0x1231 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8FB PUSH2 0x107F JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x93D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x934 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x6B361C807733CC94A3B7BDA39C1C94DCC0511E91AA47B0F7F918068E93976890 DUP2 PUSH1 0x40 MLOAD PUSH2 0x973 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D2 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x9DB PUSH0 PUSH2 0x12B0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9EB PUSH2 0x107F JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x1373 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2C SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA58 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xABD PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xACA DUP2 DUP6 DUP6 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADD PUSH2 0x1168 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD CALLVALUE PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST GT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8C SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9F CALLER DUP3 PUSH2 0x11B2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBFD SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC98 PUSH2 0x107F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD11 DUP2 PUSH2 0x12B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x1168 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD55 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP3 PUSH1 0x8 SLOAD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST GT ISZERO PUSH2 0xE17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0E SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE21 CALLER DUP4 PUSH2 0x11B2 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 CALLVALUE GT ISZERO PUSH2 0xE91 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 CALLVALUE PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE8F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271 DUP4 PUSH1 0x40 MLOAD PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEF7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF07 DUP5 DUP5 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF89 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF7A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF88 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107A DUP4 DUP4 DUP4 PUSH2 0x15A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1087 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A5 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1104 JUMPI PUSH2 0x10C8 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x110E PUSH2 0x17BE JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1151 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115E SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1170 PUSH2 0x8DD JUMP JUMPDEST ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A7 SWAP1 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1222 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x122D PUSH0 DUP4 DUP4 PUSH2 0x15A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AC DUP3 PUSH0 DUP4 PUSH2 0x15A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x137B PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x13BF PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1446 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AD SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x159F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x167E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1675 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1754 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x17C6 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x1805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FC SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1849 DUP3 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x1853 DUP2 DUP6 PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP PUSH2 0x1863 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x182F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188F DUP2 DUP5 PUSH2 0x183F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 DUP3 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP2 EQ PUSH2 0x18DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18EF DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1922 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194B DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195C DUP6 DUP3 DUP7 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP5 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19BB PUSH0 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19D8 JUMPI PUSH2 0x19D7 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E5 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19F6 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A07 DUP7 DUP3 DUP8 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A26 DUP2 PUSH2 0x1A11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1A1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A67 DUP5 DUP3 DUP6 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A92 DUP5 DUP3 DUP6 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP5 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD9 JUMPI PUSH2 0x1AD8 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE6 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AF7 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B45 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B92 PUSH1 0x12 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9D DUP3 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFD DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C08 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5A PUSH1 0x12 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C65 DUP3 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C87 DUP2 PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC2 PUSH1 0x1C DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CEF DUP2 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E642045544820746F2062757920746F6B656E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2A PUSH1 0x16 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D35 DUP3 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D57 DUP2 PUSH2 0x1D1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D68 DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D73 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D81 DUP2 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D98 JUMPI PUSH2 0x1D97 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DD6 DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE1 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DF1 JUMPI PUSH2 0x1DF0 PUSH2 0x1D9F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E56 PUSH1 0x23 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E61 DUP3 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E83 DUP2 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EBE PUSH1 0x15 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC9 DUP3 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EEB DUP2 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFC DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x1F45 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1F52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F8E PUSH1 0x10 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F99 DUP3 PUSH2 0x1F5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FBB DUP2 PUSH2 0x1F82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF6 PUSH1 0x14 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x2001 DUP3 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2023 DUP2 PUSH2 0x1FEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 ADD PUSH27 0x355A0F9C45C6E8C2142711D2995ADBA25E6D52940F0CDE03A23B17 PUSH12 0xBF64736F6C634300081A0033 ",
							"sourceMap": "231:4125:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3677:95:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4122:118:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3422:195;;;;;;;;;;;;;:::i;:::-;;3283:67;;;;;;;;;;;;;:::i;:::-;;2567:258;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4270:83;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3816:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2890:207:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3959:109;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;372:25:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3162:63;;;;;;;;;;;;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:26:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1330:402:7;;;:::i;:::-;;321:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1829:672:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;3677:95:7:-;3726:7;3753:11;;3746:18;;3677:95;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;4122:118:7:-;4187:7;4214:18;4224:7;4214:9;:18::i;:::-;4207:25;;4122:118;;;:::o;3422:195::-;1531:13:0;:11;:13::i;:::-;3472:15:7::1;3490:21;3472:39;;3540:1;3530:7;:11;3522:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3583:7;:5;:7::i;:::-;3575:25;;:34;3601:7;3575:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3461:156;3422:195::o:0;3283:67::-;1531:13:0;:11;:13::i;:::-;3332:10:7::1;:8;:10::i;:::-;3283:67::o:0;2567:258::-;1531:13:0;:11;:13::i;:::-;1239:19:2::1;:17;:19::i;:::-;2685:9:7::2;;2675:6;2661:11;;:20;;;;:::i;:::-;:33;;2653:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2728:17;2734:2;2738:6;2728:5;:17::i;:::-;2771:6;2756:11;;:21;;;;;;;:::i;:::-;;;;;;;;2806:2;2793:24;;;2810:6;2793:24;;;;;;:::i;:::-;;;;;;;;2567:258:::0;;:::o;4270:83::-;4320:25;4326:10;4338:6;4320:5;:25::i;:::-;4270:83;:::o;3816:93::-;3864:7;3891:10;;3884:17;;3816:93;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2890:207:7:-;1531:13:0;:11;:13::i;:::-;2980:1:7::1;2969:8;:12;2961:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3038:8;3025:10;:21;;;;3062:27;3080:8;3062:27;;;;;;:::i;:::-;;;;;;;;2890:207:::0;:::o;3959:109::-;4012:7;4039:21;4032:28;;3959:109;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;372:25:7:-;;;;:::o;3162:63::-;1531:13:0;:11;:13::i;:::-;3209:8:7::1;:6;:8::i;:::-;3162:63::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;449:26:7:-;;;;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1330:402:7:-;1239:19:2;:17;:19::i;:::-;1413:1:7::1;1401:9;:13;1393:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1452:19;1501:7;1487:10;;1475:9;:22;;;;:::i;:::-;1474:34;;;;:::i;:::-;1452:56;;1556:9;;1541:11;1527;;:25;;;;:::i;:::-;:38;;1519:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1601:30;1607:10;1619:11;1601:5;:30::i;:::-;1657:11;1642;;:26;;;;;;;:::i;:::-;;;;;;;;1700:10;1684:40;;;1712:11;1684:40;;;;;;:::i;:::-;;;;;;;;1382:350;1330:402::o:0;321:24::-;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1829:672:7:-;1239:19:2;:17;:19::i;:::-;1943:1:7::1;1929:11;:15;1921:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1995:19;2043:10;;2032:7;2018:11;:21;;;;:::i;:::-;2017:36;;;;:::i;:::-;1995:58;;2085:11;2072:9;:24;;2064:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2172:9;;2157:11;2143;;:25;;;;:::i;:::-;:38;;2135:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2217:30;2223:10;2235:11;2217:5;:30::i;:::-;2273:11;2258;;:26;;;;;;;:::i;:::-;;;;;;;;2343:11;2331:9;:23;2327:109;;;2379:10;2371:28;;:53;2412:11;2400:9;:23;;;;:::i;:::-;2371:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2327:109;2469:10;2453:40;;;2481:11;2453:40;;;;;;:::i;:::-;;;;;;;;1910:591;1829:672:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;9701:432:3:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:168::-;6900:20;6896:1;6888:6;6884:14;6877:44;6760:168;:::o;6934:366::-;7076:3;7097:67;7161:2;7156:3;7097:67;:::i;:::-;7090:74;;7173:93;7262:3;7173:93;:::i;:::-;7291:2;7286:3;7282:12;7275:19;;6934:366;;;:::o;7306:419::-;7472:4;7510:2;7499:9;7495:18;7487:26;;7559:9;7553:4;7549:20;7545:1;7534:9;7530:17;7523:47;7587:131;7713:4;7587:131;:::i;:::-;7579:139;;7306:419;;;:::o;7731:180::-;7779:77;7776:1;7769:88;7876:4;7873:1;7866:15;7900:4;7897:1;7890:15;7917:191;7957:3;7976:20;7994:1;7976:20;:::i;:::-;7971:25;;8010:20;8028:1;8010:20;:::i;:::-;8005:25;;8053:1;8050;8046:9;8039:16;;8074:3;8071:1;8068:10;8065:36;;;8081:18;;:::i;:::-;8065:36;7917:191;;;;:::o;8114:168::-;8254:20;8250:1;8242:6;8238:14;8231:44;8114:168;:::o;8288:366::-;8430:3;8451:67;8515:2;8510:3;8451:67;:::i;:::-;8444:74;;8527:93;8616:3;8527:93;:::i;:::-;8645:2;8640:3;8636:12;8629:19;;8288:366;;;:::o;8660:419::-;8826:4;8864:2;8853:9;8849:18;8841:26;;8913:9;8907:4;8903:20;8899:1;8888:9;8884:17;8877:47;8941:131;9067:4;8941:131;:::i;:::-;8933:139;;8660:419;;;:::o;9085:178::-;9225:30;9221:1;9213:6;9209:14;9202:54;9085:178;:::o;9269:366::-;9411:3;9432:67;9496:2;9491:3;9432:67;:::i;:::-;9425:74;;9508:93;9597:3;9508:93;:::i;:::-;9626:2;9621:3;9617:12;9610:19;;9269:366;;;:::o;9641:419::-;9807:4;9845:2;9834:9;9830:18;9822:26;;9894:9;9888:4;9884:20;9880:1;9869:9;9865:17;9858:47;9922:131;10048:4;9922:131;:::i;:::-;9914:139;;9641:419;;;:::o;10066:172::-;10206:24;10202:1;10194:6;10190:14;10183:48;10066:172;:::o;10244:366::-;10386:3;10407:67;10471:2;10466:3;10407:67;:::i;:::-;10400:74;;10483:93;10572:3;10483:93;:::i;:::-;10601:2;10596:3;10592:12;10585:19;;10244:366;;;:::o;10616:419::-;10782:4;10820:2;10809:9;10805:18;10797:26;;10869:9;10863:4;10859:20;10855:1;10844:9;10840:17;10833:47;10897:131;11023:4;10897:131;:::i;:::-;10889:139;;10616:419;;;:::o;11041:410::-;11081:7;11104:20;11122:1;11104:20;:::i;:::-;11099:25;;11138:20;11156:1;11138:20;:::i;:::-;11133:25;;11193:1;11190;11186:9;11215:30;11233:11;11215:30;:::i;:::-;11204:41;;11394:1;11385:7;11381:15;11378:1;11375:22;11355:1;11348:9;11328:83;11305:139;;11424:18;;:::i;:::-;11305:139;11089:362;11041:410;;;;:::o;11457:180::-;11505:77;11502:1;11495:88;11602:4;11599:1;11592:15;11626:4;11623:1;11616:15;11643:185;11683:1;11700:20;11718:1;11700:20;:::i;:::-;11695:25;;11734:20;11752:1;11734:20;:::i;:::-;11729:25;;11773:1;11763:35;;11778:18;;:::i;:::-;11763:35;11820:1;11817;11813:9;11808:14;;11643:185;;;;:::o;11834:222::-;11974:34;11970:1;11962:6;11958:14;11951:58;12043:5;12038:2;12030:6;12026:15;12019:30;11834:222;:::o;12062:366::-;12204:3;12225:67;12289:2;12284:3;12225:67;:::i;:::-;12218:74;;12301:93;12390:3;12301:93;:::i;:::-;12419:2;12414:3;12410:12;12403:19;;12062:366;;;:::o;12434:419::-;12600:4;12638:2;12627:9;12623:18;12615:26;;12687:9;12681:4;12677:20;12673:1;12662:9;12658:17;12651:47;12715:131;12841:4;12715:131;:::i;:::-;12707:139;;12434:419;;;:::o;12859:171::-;12999:23;12995:1;12987:6;12983:14;12976:47;12859:171;:::o;13036:366::-;13178:3;13199:67;13263:2;13258:3;13199:67;:::i;:::-;13192:74;;13275:93;13364:3;13275:93;:::i;:::-;13393:2;13388:3;13384:12;13377:19;;13036:366;;;:::o;13408:419::-;13574:4;13612:2;13601:9;13597:18;13589:26;;13661:9;13655:4;13651:20;13647:1;13636:9;13632:17;13625:47;13689:131;13815:4;13689:131;:::i;:::-;13681:139;;13408:419;;;:::o;13833:194::-;13873:4;13893:20;13911:1;13893:20;:::i;:::-;13888:25;;13927:20;13945:1;13927:20;:::i;:::-;13922:25;;13971:1;13968;13964:9;13956:17;;13995:1;13989:4;13986:11;13983:37;;;14000:18;;:::i;:::-;13983:37;13833:194;;;;:::o;14033:442::-;14182:4;14220:2;14209:9;14205:18;14197:26;;14233:71;14301:1;14290:9;14286:17;14277:6;14233:71;:::i;:::-;14314:72;14382:2;14371:9;14367:18;14358:6;14314:72;:::i;:::-;14396;14464:2;14453:9;14449:18;14440:6;14396:72;:::i;:::-;14033:442;;;;;;:::o;14481:166::-;14621:18;14617:1;14609:6;14605:14;14598:42;14481:166;:::o;14653:366::-;14795:3;14816:67;14880:2;14875:3;14816:67;:::i;:::-;14809:74;;14892:93;14981:3;14892:93;:::i;:::-;15010:2;15005:3;15001:12;14994:19;;14653:366;;;:::o;15025:419::-;15191:4;15229:2;15218:9;15214:18;15206:26;;15278:9;15272:4;15268:20;15264:1;15253:9;15249:17;15242:47;15306:131;15432:4;15306:131;:::i;:::-;15298:139;;15025:419;;;:::o;15450:170::-;15590:22;15586:1;15578:6;15574:14;15567:46;15450:170;:::o;15626:366::-;15768:3;15789:67;15853:2;15848:3;15789:67;:::i;:::-;15782:74;;15865:93;15954:3;15865:93;:::i;:::-;15983:2;15978:3;15974:12;15967:19;;15626:366;;;:::o;15998:419::-;16164:4;16202:2;16191:9;16187:18;16179:26;;16251:9;16245:4;16241:20;16237:1;16226:9;16222:17;16215:47;16279:131;16405:4;16279:131;:::i;:::-;16271:139;;15998:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1657600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2897",
								"burn(uint256)": "infinite",
								"buyTokens()": "infinite",
								"buyTokensWithAmount(uint256)": "infinite",
								"decimals()": "428",
								"getContractBalance()": "380",
								"getTokenBalance(address)": "2983",
								"getTokenPrice()": "2499",
								"getTotalMinted()": "2523",
								"maxSupply()": "2469",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"pause()": "infinite",
								"paused()": "2613",
								"renounceOwnership()": "infinite",
								"setTokenPrice(uint256)": "infinite",
								"symbol()": "infinite",
								"tokenPrice()": "2470",
								"totalMinted()": "2470",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 4356,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 819,
									"end": 1270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1027,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 995,
									"end": 999,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1007,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1065,
									"end": 1075,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1061,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1075,
									"modifierDepth": 2,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1075,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1040,
									"end": 1113,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1040,
									"end": 1113,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1146,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1133,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1124,
									"end": 1146,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1146,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1146,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1146,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1170,
									"end": 1181,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1167,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1157,
									"end": 1181,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1181,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1181,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1181,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1224,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1198,
									"end": 1208,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1210,
									"end": 1223,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1197,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1192,
									"end": 1197,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1192,
									"end": 1197,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1224,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1192,
									"end": 1224,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1224,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1224,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1192,
									"end": 1224,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1249,
									"end": 1262,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1235,
									"end": 1246,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1235,
									"end": 1262,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1235,
									"end": 1262,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1235,
									"end": 1262,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1235,
									"end": 1262,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 1270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3056,
									"end": 3062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3064,
									"end": 3070,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3072,
									"end": 3078,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3080,
									"end": 3086,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3094,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3137,
									"end": 3140,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 3125,
									"end": 3134,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3116,
									"end": 3123,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3108,
									"end": 3141,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 3144,
									"end": 3223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3285,
									"end": 3286,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3270,
									"end": 3287,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3264,
									"end": 3288,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3333,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3307,
									"end": 3313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3304,
									"end": 3334,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3337,
									"end": 3416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3508,
									"end": 3515,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3505,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3488,
									"end": 3497,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3484,
									"end": 3506,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3442,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3516,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3516,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3235,
									"end": 3526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3588,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3575,
									"end": 3584,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3589,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3565,
									"end": 3590,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3617,
									"end": 3635,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3609,
									"end": 3615,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3606,
									"end": 3636,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3639,
									"end": 3718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3810,
									"end": 3817,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3790,
									"end": 3799,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3808,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3744,
									"end": 3818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3734,
									"end": 3818,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3734,
									"end": 3818,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3867,
									"end": 3869,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3949,
									"end": 3956,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3940,
									"end": 3946,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3929,
									"end": 3938,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 3947,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3893,
									"end": 3957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3883,
									"end": 3957,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3883,
									"end": 3957,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3838,
									"end": 3967,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4006,
									"end": 4008,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4088,
									"end": 4095,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4079,
									"end": 4085,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4068,
									"end": 4077,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4086,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 4032,
									"end": 4096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4022,
									"end": 4096,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4022,
									"end": 4096,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3977,
									"end": 4106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4145,
									"end": 4148,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4228,
									"end": 4235,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4225,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4208,
									"end": 4217,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4204,
									"end": 4226,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 4172,
									"end": 4236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4162,
									"end": 4236,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4162,
									"end": 4236,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4116,
									"end": 4246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4311,
									"end": 4317,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4345,
									"end": 4350,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4351,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4329,
									"end": 4351,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4329,
									"end": 4351,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4364,
									"end": 4544,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4364,
									"end": 4544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4412,
									"end": 4489,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4409,
									"end": 4410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4402,
									"end": 4490,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 4506,
									"end": 4507,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4499,
									"end": 4514,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4533,
									"end": 4537,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4530,
									"end": 4531,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4523,
									"end": 4538,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4625,
									"end": 4629,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4621,
									"end": 4633,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4611,
									"end": 4633,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4611,
									"end": 4633,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4678,
									"end": 4679,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4672,
									"end": 4676,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4668,
									"end": 4680,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4755,
									"end": 4759,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 4747,
									"end": 4753,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4743,
									"end": 4760,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4733,
									"end": 4760,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4733,
									"end": 4760,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4819,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4815,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4806,
									"end": 4820,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4783,
									"end": 4821,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4836,
									"end": 4854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4601,
									"end": 4870,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4550,
									"end": 4870,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4925,
									"end": 4929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4948,
									"end": 4951,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4940,
									"end": 4951,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4940,
									"end": 4951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4971,
									"end": 4974,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 4969,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4961,
									"end": 4975,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5005,
									"end": 5009,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5002,
									"end": 5003,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4992,
									"end": 5010,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 4984,
									"end": 5010,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4984,
									"end": 5010,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4876,
									"end": 5017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5066,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5107,
									"end": 5109,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5102,
									"end": 5104,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5095,
									"end": 5100,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5091,
									"end": 5105,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5087,
									"end": 5110,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 5077,
									"end": 5110,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5077,
									"end": 5110,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5023,
									"end": 5116,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5166,
									"end": 5174,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5216,
									"end": 5221,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5206,
									"end": 5222,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5185,
									"end": 5222,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5185,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5122,
									"end": 5229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5304,
									"end": 5310,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5354,
									"end": 5355,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5342,
									"end": 5352,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5338,
									"end": 5356,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 5407,
									"end": 5473,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5396,
									"end": 5405,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5377,
									"end": 5474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5525,
									"end": 5533,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5514,
									"end": 5523,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5495,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5483,
									"end": 5534,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 5483,
									"end": 5534,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 5571,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5563,
									"end": 5572,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5556,
									"end": 5561,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5552,
									"end": 5573,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5573,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5616,
									"end": 5620,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5606,
									"end": 5614,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5602,
									"end": 5621,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5595,
									"end": 5600,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5622,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5582,
									"end": 5622,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5582,
									"end": 5622,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5311,
									"end": 5628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5311,
									"end": 5628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5628,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5662,
									"end": 5665,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5683,
									"end": 5688,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5676,
									"end": 5688,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5676,
									"end": 5688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5634,
									"end": 5694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5750,
									"end": 5759,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5810,
									"end": 5834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5801,
									"end": 5835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5783,
									"end": 5836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5770,
									"end": 5836,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5770,
									"end": 5836,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5891,
									"end": 5894,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5912,
									"end": 5917,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5848,
									"end": 5923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6070,
									"end": 6077,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 6039,
									"end": 6078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6173,
									"end": 6189,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 6149,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6134,
									"end": 6138,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6128,
									"end": 6139,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 6100,
									"end": 6191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6094,
									"end": 6098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6087,
									"end": 6192,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6005,
									"end": 6198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5929,
									"end": 6198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6204,
									"end": 6277,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 6204,
									"end": 6277,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6249,
									"end": 6252,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6204,
									"end": 6277,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6204,
									"end": 6277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 6360,
									"end": 6392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6459,
									"end": 6465,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6451,
									"end": 6457,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6445,
									"end": 6449,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 6401,
									"end": 6466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6336,
									"end": 6472,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6472,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6555,
									"end": 6558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6545,
									"end": 6559,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6646,
									"end": 6647,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6639,
									"end": 6644,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6609,
									"end": 6648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6582,
									"end": 6583,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6575,
									"end": 6580,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6571,
									"end": 6584,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6562,
									"end": 6584,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6562,
									"end": 6584,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6664,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6771,
									"end": 6773,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6766,
									"end": 6769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6763,
									"end": 6774,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6837,
									"end": 6842,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 6805,
									"end": 6843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6907,
									"end": 6917,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6889,
									"end": 6918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6879,
									"end": 6887,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6875,
									"end": 6919,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7072,
									"end": 7074,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7060,
									"end": 7070,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7057,
									"end": 7075,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7093,
									"end": 7101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7101,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7101,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7190,
									"end": 7193,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 7172,
									"end": 7194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7170,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7158,
									"end": 7195,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7145,
									"end": 7156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 7116,
									"end": 7196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 7206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 7206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6670,
									"end": 7213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7273,
									"end": 7281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7323,
									"end": 7328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7317,
									"end": 7321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7313,
									"end": 7329,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7329,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7329,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7219,
									"end": 7336,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7386,
									"end": 7392,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7467,
									"end": 7468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7455,
									"end": 7460,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7452,
									"end": 7453,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 7448,
									"end": 7461,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 7419,
									"end": 7470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7415,
									"end": 7471,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7500,
									"end": 7504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7494,
									"end": 7498,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7490,
									"end": 7505,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7480,
									"end": 7505,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7480,
									"end": 7505,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7393,
									"end": 7511,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7342,
									"end": 7511,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7763,
									"end": 7766,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7757,
									"end": 7761,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7738,
									"end": 7767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7730,
									"end": 7767,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7730,
									"end": 7767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7800,
									"end": 7803,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7797,
									"end": 7798,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7793,
									"end": 7804,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7787,
									"end": 7791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7784,
									"end": 7805,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7776,
									"end": 7805,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7776,
									"end": 7805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7516,
									"end": 7811,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7966,
									"end": 7969,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7933,
									"end": 7970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8035,
									"end": 8053,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8027,
									"end": 8033,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8024,
									"end": 8054,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 8057,
									"end": 8075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8133,
									"end": 8137,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8127,
									"end": 8138,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 8101,
									"end": 8139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8246,
									"end": 8252,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8232,
									"end": 8236,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 8186,
									"end": 8253,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8280,
									"end": 8281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8304,
									"end": 8308,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8291,
									"end": 8308,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8291,
									"end": 8308,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8336,
									"end": 8338,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8328,
									"end": 8334,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8325,
									"end": 8339,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8353,
									"end": 8354,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9010,
									"end": 9011,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9027,
									"end": 9033,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9076,
									"end": 9085,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9071,
									"end": 9074,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 9067,
									"end": 9086,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9061,
									"end": 9087,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 9052,
									"end": 9087,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9052,
									"end": 9087,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9187,
									"end": 9193,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9180,
									"end": 9185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 9127,
									"end": 9194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9121,
									"end": 9125,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9114,
									"end": 9195,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8983,
									"end": 9205,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8400,
									"end": 8404,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8396,
									"end": 8405,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8394,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8384,
									"end": 8406,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8466,
									"end": 8470,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 8434,
									"end": 8471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8493,
									"end": 8494,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8521,
									"end": 8528,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 8519,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8515,
									"end": 8529,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8600,
									"end": 8609,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8595,
									"end": 8598,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8591,
									"end": 8610,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8585,
									"end": 8611,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8570,
									"end": 8612,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8651,
									"end": 8652,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8643,
									"end": 8649,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8639,
									"end": 8653,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8629,
									"end": 8653,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8629,
									"end": 8653,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8698,
									"end": 8700,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8687,
									"end": 8696,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8683,
									"end": 8701,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8670,
									"end": 8701,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8670,
									"end": 8701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8544,
									"end": 8548,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8541,
									"end": 8542,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8537,
									"end": 8549,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8532,
									"end": 8549,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8532,
									"end": 8549,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8743,
									"end": 8749,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8734,
									"end": 8741,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8731,
									"end": 8750,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8801,
									"end": 8810,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8796,
									"end": 8799,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8792,
									"end": 8811,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8812,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8886,
									"end": 8890,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8878,
									"end": 8884,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8874,
									"end": 8891,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8863,
									"end": 8872,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 8844,
									"end": 8892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8836,
									"end": 8842,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8829,
									"end": 8893,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8751,
									"end": 8907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8949,
									"end": 8950,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8941,
									"end": 8947,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8937,
									"end": 8951,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8933,
									"end": 8955,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8927,
									"end": 8931,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8920,
									"end": 8956,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8355,
									"end": 8966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8355,
									"end": 8966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8355,
									"end": 8966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7908,
									"end": 9211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7908,
									"end": 9211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7908,
									"end": 9211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7816,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9254,
									"end": 9261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9336,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9287,
									"end": 9292,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9283,
									"end": 9337,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9386,
									"end": 9393,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9433,
									"end": 9438,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 9415,
									"end": 9439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9349,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9887,
									"end": 9898,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9921,
									"end": 9927,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9916,
									"end": 9919,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9909,
									"end": 9928,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9961,
									"end": 9965,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9956,
									"end": 9959,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9952,
									"end": 9966,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9978,
									"end": 10198,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 9978,
									"end": 10198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10118,
									"end": 10152,
									"name": "PUSH",
									"source": 8,
									"value": "496E697469616C20737570706C792065786365656473206D617820737570706C"
								},
								{
									"begin": 10114,
									"end": 10115,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10106,
									"end": 10112,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10102,
									"end": 10116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10095,
									"end": 10153,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10187,
									"end": 10190,
									"name": "PUSH",
									"source": 8,
									"value": "7900000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10182,
									"end": 10184,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10174,
									"end": 10180,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10170,
									"end": 10185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10163,
									"end": 10191,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9978,
									"end": 10198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9978,
									"end": 10198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10204,
									"end": 10570,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 10204,
									"end": 10570,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10346,
									"end": 10349,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10367,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 10431,
									"end": 10433,
									"name": "PUSH",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 10426,
									"end": 10429,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10367,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 10367,
									"end": 10434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10367,
									"end": 10434,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 10367,
									"end": 10434,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10360,
									"end": 10434,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10360,
									"end": 10434,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10443,
									"end": 10536,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 10532,
									"end": 10535,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10443,
									"end": 10536,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 10443,
									"end": 10536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10443,
									"end": 10536,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 10443,
									"end": 10536,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10561,
									"end": 10563,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10556,
									"end": 10559,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10552,
									"end": 10564,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10545,
									"end": 10564,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10545,
									"end": 10564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10204,
									"end": 10570,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10204,
									"end": 10570,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10204,
									"end": 10570,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10204,
									"end": 10570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10576,
									"end": 10995,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 10576,
									"end": 10995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10742,
									"end": 10746,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10780,
									"end": 10782,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10769,
									"end": 10778,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10765,
									"end": 10783,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10757,
									"end": 10783,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10757,
									"end": 10783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10829,
									"end": 10838,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10823,
									"end": 10827,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10819,
									"end": 10839,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 10815,
									"end": 10816,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10804,
									"end": 10813,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10800,
									"end": 10817,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10793,
									"end": 10840,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10857,
									"end": 10988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10983,
									"end": 10987,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10857,
									"end": 10988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 10857,
									"end": 10988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10857,
									"end": 10988,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10857,
									"end": 10988,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10849,
									"end": 10988,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10849,
									"end": 10988,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10576,
									"end": 10995,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10576,
									"end": 10995,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10576,
									"end": 10995,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10576,
									"end": 10995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11001,
									"end": 11181,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 11001,
									"end": 11181,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11049,
									"end": 11126,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11046,
									"end": 11047,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11039,
									"end": 11127,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11146,
									"end": 11150,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 11143,
									"end": 11144,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 11136,
									"end": 11151,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11170,
									"end": 11174,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 11167,
									"end": 11168,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11160,
									"end": 11175,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 11187,
									"end": 11378,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 11187,
									"end": 11378,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11227,
									"end": 11230,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11246,
									"end": 11266,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 11264,
									"end": 11265,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11246,
									"end": 11266,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 11246,
									"end": 11266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11246,
									"end": 11266,
									"name": "tag",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 11246,
									"end": 11266,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11241,
									"end": 11266,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11241,
									"end": 11266,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11280,
									"end": 11300,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 11298,
									"end": 11299,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11280,
									"end": 11300,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 11280,
									"end": 11300,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11280,
									"end": 11300,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 11280,
									"end": 11300,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11275,
									"end": 11300,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11275,
									"end": 11300,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11323,
									"end": 11324,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11320,
									"end": 11321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11316,
									"end": 11325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11309,
									"end": 11325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11309,
									"end": 11325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11344,
									"end": 11347,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 11341,
									"end": 11342,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11338,
									"end": 11348,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 11335,
									"end": 11371,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 11335,
									"end": 11371,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 11335,
									"end": 11371,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 11351,
									"end": 11369,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 11351,
									"end": 11369,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 11351,
									"end": 11369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11351,
									"end": 11369,
									"name": "tag",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 11351,
									"end": 11369,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11335,
									"end": 11371,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 11335,
									"end": 11371,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11187,
									"end": 11378,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11187,
									"end": 11378,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11187,
									"end": 11378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11187,
									"end": 11378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11187,
									"end": 11378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11384,
									"end": 11502,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11384,
									"end": 11502,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11471,
									"end": 11495,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 11489,
									"end": 11494,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 11471,
									"end": 11495,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 11471,
									"end": 11495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11471,
									"end": 11495,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 11471,
									"end": 11495,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11466,
									"end": 11469,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11459,
									"end": 11496,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11384,
									"end": 11502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11384,
									"end": 11502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11384,
									"end": 11502,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11657,
									"end": 11661,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11695,
									"end": 11697,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 11684,
									"end": 11693,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11680,
									"end": 11698,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11672,
									"end": 11698,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11672,
									"end": 11698,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11708,
									"end": 11779,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 11776,
									"end": 11777,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11765,
									"end": 11774,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11761,
									"end": 11778,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11752,
									"end": 11758,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 11708,
									"end": 11779,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 11708,
									"end": 11779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11708,
									"end": 11779,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 11708,
									"end": 11779,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11789,
									"end": 11861,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11857,
									"end": 11859,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11846,
									"end": 11855,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11842,
									"end": 11860,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11833,
									"end": 11839,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 11789,
									"end": 11861,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11789,
									"end": 11861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11789,
									"end": 11861,
									"name": "tag",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11789,
									"end": 11861,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11871,
									"end": 11943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 11939,
									"end": 11941,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 11928,
									"end": 11937,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11924,
									"end": 11942,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11915,
									"end": 11921,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11871,
									"end": 11943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11871,
									"end": 11943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11871,
									"end": 11943,
									"name": "tag",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 11871,
									"end": 11943,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11508,
									"end": 11950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11956,
									"end": 12178,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 11956,
									"end": 12178,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 12049,
									"end": 12053,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12087,
									"end": 12089,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 12076,
									"end": 12085,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 12072,
									"end": 12090,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 12064,
									"end": 12090,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 12064,
									"end": 12090,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 12100,
									"end": 12171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "220"
								},
								{
									"begin": 12168,
									"end": 12169,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12157,
									"end": 12166,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 12153,
									"end": 12170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 12144,
									"end": 12150,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 12100,
									"end": 12171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 12100,
									"end": 12171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 12100,
									"end": 12171,
									"name": "tag",
									"source": 8,
									"value": "220"
								},
								{
									"begin": 12100,
									"end": 12171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11956,
									"end": 12178,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11956,
									"end": 12178,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11956,
									"end": 12178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11956,
									"end": 12178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11956,
									"end": 12178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 4356,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092017a355a0f9c45c6e8c2142711d2995adba25e6d52940f0cde03a23b176bbf64736f6c634300081a0033",
									".code": [
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "6F9FB98A"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "A2309FF8"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "FC60C281"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "A2309FF8"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "D0FEBE4C"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "7FF9B596"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "7FF9B596"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "6F9FB98A"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "3CCFD60B"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "4B94F50E"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "6A61E5FC"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "3CCFD60B"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "3AECD0E3"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "CA1C5C9"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 231,
											"end": 4356,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3677,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3677,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4122,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4122,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4122,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3422,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3283,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2567,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4270,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4270,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3816,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3816,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2890,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2890,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3959,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3959,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 372,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 372,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3162,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 449,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 449,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 449,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1330,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 321,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 321,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1829,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1829,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3753,
											"end": 3764,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4214,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3422,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3511,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3541,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3522,
											"end": 3564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3522,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3583,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3583,
											"end": 3590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3583,
											"end": 3590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3575,
											"end": 3600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 3601,
											"end": 3608,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3617,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3283,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3332,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3332,
											"end": 3342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3332,
											"end": 3342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2694,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2685,
											"end": 2694,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2681,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2661,
											"end": 2672,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2661,
											"end": 2681,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2661,
											"end": 2681,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2661,
											"end": 2681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2694,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2694,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2653,
											"end": 2717,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2653,
											"end": 2717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2745,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2734,
											"end": 2736,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2738,
											"end": 2744,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2733,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2728,
											"end": 2745,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2745,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2728,
											"end": 2745,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2777,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2756,
											"end": 2767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2756,
											"end": 2777,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2777,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2808,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273"
										},
										{
											"begin": 2810,
											"end": 2816,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2793,
											"end": 2817,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2817,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4326,
											"end": 4336,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4320,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4345,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4320,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3891,
											"end": 3901,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 3901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 3901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3816,
											"end": 3909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2981,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2961,
											"end": 3014,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2961,
											"end": 3014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3046,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3025,
											"end": 3046,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3046,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3046,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6B361C807733CC94A3B7BDA39C1C94DCC0511E91AA47B0F7F918068E93976890"
										},
										{
											"begin": 3080,
											"end": 3088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3062,
											"end": 3089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3089,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4060,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 372,
											"end": 397,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 372,
											"end": 397,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 372,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3209,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3209,
											"end": 3217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3209,
											"end": 3217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 449,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 449,
											"end": 475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1410,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1414,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1393,
											"end": 1441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1393,
											"end": 1441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1487,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1487,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1484,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1475,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1475,
											"end": 1497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1475,
											"end": 1497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1474,
											"end": 1508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1474,
											"end": 1508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1474,
											"end": 1508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1556,
											"end": 1565,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1552,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1527,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1527,
											"end": 1552,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1519,
											"end": 1588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1519,
											"end": 1588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1607,
											"end": 1617,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1601,
											"end": 1631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1601,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1642,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1642,
											"end": 1668,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1710,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271"
										},
										{
											"begin": 1712,
											"end": 1723,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1684,
											"end": 1724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1724,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1382,
											"end": 1732,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 321,
											"end": 345,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 321,
											"end": 345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1940,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1929,
											"end": 1944,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1921,
											"end": 1984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1921,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2043,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2018,
											"end": 2029,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2018,
											"end": 2039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2017,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2017,
											"end": 2053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2017,
											"end": 2053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2081,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2096,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2096,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2064,
											"end": 2122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2064,
											"end": 2122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2172,
											"end": 2181,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2157,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2143,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2143,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2143,
											"end": 2168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2143,
											"end": 2168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2181,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2181,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2135,
											"end": 2204,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2135,
											"end": 2204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2223,
											"end": 2233,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2217,
											"end": 2247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2217,
											"end": 2247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2258,
											"end": 2269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2258,
											"end": 2284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2258,
											"end": 2284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2354,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2340,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2354,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2327,
											"end": 2436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2389,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2399,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 2412,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2409,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2400,
											"end": 2423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2400,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2327,
											"end": 2436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2479,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271"
										},
										{
											"begin": 2481,
											"end": 2492,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2453,
											"end": 2493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 2501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6928,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 6760,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6920,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F2045544820746F2077697468647261770000000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6921,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 7161,
											"end": 7163,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 7097,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 7262,
											"end": 7265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7173,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7289,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7282,
											"end": 7294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7510,
											"end": 7512,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7499,
											"end": 7508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7513,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7513,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7569,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7530,
											"end": 7547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 7713,
											"end": 7717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7587,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7579,
											"end": 7718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7579,
											"end": 7718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7731,
											"end": 7911,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7731,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7779,
											"end": 7856,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7776,
											"end": 7777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 7880,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7873,
											"end": 7874,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7866,
											"end": 7881,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7905,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 8108,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7917,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7957,
											"end": 7960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 7994,
											"end": 7995,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7976,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 7976,
											"end": 7996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7976,
											"end": 7996,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 7976,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 7996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 7996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 8010,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8030,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8050,
											"end": 8051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8046,
											"end": 8055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8077,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8071,
											"end": 8072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8068,
											"end": 8078,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8101,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 8065,
											"end": 8101,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 8081,
											"end": 8099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8101,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 8065,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 8108,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 8108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 8108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 8108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 8108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8282,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 8114,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8274,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473206D617820737570706C790000000000000000000000000000"
										},
										{
											"begin": 8250,
											"end": 8251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8252,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8231,
											"end": 8275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8114,
											"end": 8282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8654,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8288,
											"end": 8654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8430,
											"end": 8433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8451,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 8515,
											"end": 8517,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8510,
											"end": 8513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8451,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 8451,
											"end": 8518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8451,
											"end": 8518,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 8451,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8444,
											"end": 8518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8444,
											"end": 8518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8527,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 8616,
											"end": 8619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8527,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 8527,
											"end": 8620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8527,
											"end": 8620,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 8527,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8645,
											"end": 8647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 9079,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 8660,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8866,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8853,
											"end": 8862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8841,
											"end": 8867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8841,
											"end": 8867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8907,
											"end": 8911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8897,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8884,
											"end": 8901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 8924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 9067,
											"end": 9071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8941,
											"end": 9072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8941,
											"end": 9072,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 8941,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 9072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 9079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 9079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 9079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8660,
											"end": 9079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9085,
											"end": 9263,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 9085,
											"end": 9263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9255,
											"name": "PUSH",
											"source": 8,
											"value": "5072696365206D7573742062652067726561746572207468616E203000000000"
										},
										{
											"begin": 9221,
											"end": 9222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9085,
											"end": 9263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9085,
											"end": 9263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9635,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 9269,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9411,
											"end": 9414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9432,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 9496,
											"end": 9498,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 9491,
											"end": 9494,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9432,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 9432,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9432,
											"end": 9499,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 9432,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9499,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 9597,
											"end": 9600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 9508,
											"end": 9601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9601,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 9508,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 10060,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 9641,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9807,
											"end": 9811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9845,
											"end": 9847,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9834,
											"end": 9843,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9822,
											"end": 9848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9822,
											"end": 9848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 9903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9884,
											"end": 9904,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9878,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 9882,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9905,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 10048,
											"end": 10052,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 9922,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9922,
											"end": 10053,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 9922,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 10053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 10053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 10060,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 10060,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 10060,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 10060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10238,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10066,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10206,
											"end": 10230,
											"name": "PUSH",
											"source": 8,
											"value": "53656E642045544820746F2062757920746F6B656E7300000000000000000000"
										},
										{
											"begin": 10202,
											"end": 10203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10194,
											"end": 10200,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10190,
											"end": 10204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10610,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10244,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10407,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 10466,
											"end": 10469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 10407,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10474,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 10407,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10483,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 10572,
											"end": 10575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10483,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 10483,
											"end": 10576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10483,
											"end": 10576,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 10483,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10601,
											"end": 10603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10596,
											"end": 10599,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10585,
											"end": 10604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10585,
											"end": 10604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10616,
											"end": 11035,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 10616,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10782,
											"end": 10786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10809,
											"end": 10818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10805,
											"end": 10823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10797,
											"end": 10823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10797,
											"end": 10823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10869,
											"end": 10878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10863,
											"end": 10867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10879,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10844,
											"end": 10853,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 10857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10833,
											"end": 10880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10897,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 11023,
											"end": 11027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10897,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10897,
											"end": 11028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10897,
											"end": 11028,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 10897,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10889,
											"end": 11028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10889,
											"end": 11028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10616,
											"end": 11035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10616,
											"end": 11035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10616,
											"end": 11035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10616,
											"end": 11035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11041,
											"end": 11451,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 11041,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11081,
											"end": 11088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11104,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 11122,
											"end": 11123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11104,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 11104,
											"end": 11124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11104,
											"end": 11124,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 11104,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11099,
											"end": 11124,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11099,
											"end": 11124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11138,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 11156,
											"end": 11157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11138,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 11138,
											"end": 11158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11138,
											"end": 11158,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 11138,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11133,
											"end": 11158,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11133,
											"end": 11158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11190,
											"end": 11191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11186,
											"end": 11195,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11233,
											"end": 11244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 11215,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11245,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11215,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11245,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11394,
											"end": 11395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11385,
											"end": 11392,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11381,
											"end": 11396,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11379,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11375,
											"end": 11397,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11348,
											"end": 11357,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11328,
											"end": 11411,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11305,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 11305,
											"end": 11444,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11424,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 11424,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11424,
											"end": 11442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11424,
											"end": 11442,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 11424,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11305,
											"end": 11444,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 11305,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11089,
											"end": 11451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11041,
											"end": 11451,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11041,
											"end": 11451,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11041,
											"end": 11451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11041,
											"end": 11451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11041,
											"end": 11451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11457,
											"end": 11637,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11457,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11582,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11502,
											"end": 11503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11495,
											"end": 11583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11602,
											"end": 11606,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 11599,
											"end": 11600,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11592,
											"end": 11607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11626,
											"end": 11630,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11623,
											"end": 11624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11616,
											"end": 11631,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11828,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 11643,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 11718,
											"end": 11719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 11700,
											"end": 11720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11720,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 11700,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 11752,
											"end": 11753,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 11734,
											"end": 11754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11754,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 11734,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11729,
											"end": 11754,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11729,
											"end": 11754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11773,
											"end": 11774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11763,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 11763,
											"end": 11798,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11778,
											"end": 11796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11763,
											"end": 11798,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 11763,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11817,
											"end": 11818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11808,
											"end": 11822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11808,
											"end": 11822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 12056,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 11834,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11974,
											"end": 12008,
											"name": "PUSH",
											"source": 8,
											"value": "546F6B656E20616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 11970,
											"end": 11971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 11968,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11958,
											"end": 11972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11951,
											"end": 12009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12043,
											"end": 12048,
											"name": "PUSH",
											"source": 8,
											"value": "6E20300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12038,
											"end": 12040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12026,
											"end": 12041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12019,
											"end": 12049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 12056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 12056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12428,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 12062,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12204,
											"end": 12207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 12289,
											"end": 12291,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 12284,
											"end": 12287,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 12225,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12225,
											"end": 12292,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 12225,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12218,
											"end": 12292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12218,
											"end": 12292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12301,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 12390,
											"end": 12393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12301,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 12301,
											"end": 12394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12301,
											"end": 12394,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 12301,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12419,
											"end": 12421,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12410,
											"end": 12422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12403,
											"end": 12422,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12403,
											"end": 12422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12062,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12853,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 12434,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12638,
											"end": 12640,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12627,
											"end": 12636,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12623,
											"end": 12641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12615,
											"end": 12641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12615,
											"end": 12641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12687,
											"end": 12696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12677,
											"end": 12697,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12662,
											"end": 12671,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12651,
											"end": 12698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 12841,
											"end": 12845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 12715,
											"end": 12846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12846,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 12715,
											"end": 12846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12434,
											"end": 12853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12859,
											"end": 13030,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 12859,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12999,
											"end": 13022,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E74204554482073656E740000000000000000000000"
										},
										{
											"begin": 12995,
											"end": 12996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 12993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 12997,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12976,
											"end": 13023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12859,
											"end": 13030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12859,
											"end": 13030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13402,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 13036,
											"end": 13402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13178,
											"end": 13181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13199,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 13263,
											"end": 13265,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 13258,
											"end": 13261,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13199,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 13199,
											"end": 13266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13199,
											"end": 13266,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 13199,
											"end": 13266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13275,
											"end": 13368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 13364,
											"end": 13367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13275,
											"end": 13368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 13275,
											"end": 13368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13275,
											"end": 13368,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 13275,
											"end": 13368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13393,
											"end": 13395,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13388,
											"end": 13391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13384,
											"end": 13396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13377,
											"end": 13396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13377,
											"end": 13396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13036,
											"end": 13402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13827,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 13408,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13574,
											"end": 13578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13612,
											"end": 13614,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13601,
											"end": 13610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13589,
											"end": 13615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13589,
											"end": 13615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13655,
											"end": 13659,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13651,
											"end": 13671,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13647,
											"end": 13648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13636,
											"end": 13645,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13632,
											"end": 13649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13625,
											"end": 13672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13689,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 13815,
											"end": 13819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13689,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 13689,
											"end": 13820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13689,
											"end": 13820,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 13689,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13681,
											"end": 13820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13681,
											"end": 13820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 14027,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 13833,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13873,
											"end": 13877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13893,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 13911,
											"end": 13912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13893,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 13893,
											"end": 13913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13893,
											"end": 13913,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 13893,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13888,
											"end": 13913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13888,
											"end": 13913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13927,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 13945,
											"end": 13946,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13927,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 13927,
											"end": 13947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13927,
											"end": 13947,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 13927,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13922,
											"end": 13947,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13922,
											"end": 13947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13971,
											"end": 13972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13968,
											"end": 13969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13964,
											"end": 13973,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 13973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 13973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13995,
											"end": 13996,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13989,
											"end": 13993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13986,
											"end": 13997,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13983,
											"end": 14020,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13983,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 13983,
											"end": 14020,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14000,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 14000,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 14000,
											"end": 14018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14000,
											"end": 14018,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 14000,
											"end": 14018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13983,
											"end": 14020,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 13983,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 14027,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 14027,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 14027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 14027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13833,
											"end": 14027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14222,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14197,
											"end": 14223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14197,
											"end": 14223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14233,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 14301,
											"end": 14302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14299,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14286,
											"end": 14303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14277,
											"end": 14283,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14233,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 14233,
											"end": 14304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14233,
											"end": 14304,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 14233,
											"end": 14304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 14382,
											"end": 14384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14371,
											"end": 14380,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14358,
											"end": 14364,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 14314,
											"end": 14386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14386,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 14314,
											"end": 14386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14396,
											"end": 14468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 14464,
											"end": 14466,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14453,
											"end": 14462,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14449,
											"end": 14467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14440,
											"end": 14446,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14396,
											"end": 14468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 14396,
											"end": 14468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14396,
											"end": 14468,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 14396,
											"end": 14468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14033,
											"end": 14475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14481,
											"end": 14647,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 14481,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14621,
											"end": 14639,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 14617,
											"end": 14618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14605,
											"end": 14619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14598,
											"end": 14640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14481,
											"end": 14647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14481,
											"end": 14647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 15019,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 14653,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14795,
											"end": 14798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14816,
											"end": 14883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 14880,
											"end": 14882,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 14875,
											"end": 14878,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14816,
											"end": 14883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 14816,
											"end": 14883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14816,
											"end": 14883,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 14816,
											"end": 14883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14809,
											"end": 14883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14809,
											"end": 14883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14892,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 14981,
											"end": 14984,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14892,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 14892,
											"end": 14985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14892,
											"end": 14985,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 14892,
											"end": 14985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15010,
											"end": 15012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15005,
											"end": 15008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15001,
											"end": 15013,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14994,
											"end": 15013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14994,
											"end": 15013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 15019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 15019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 15019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 15019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15444,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 15025,
											"end": 15444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15191,
											"end": 15195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15229,
											"end": 15231,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15218,
											"end": 15227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15206,
											"end": 15232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15206,
											"end": 15232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15287,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15272,
											"end": 15276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15288,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15253,
											"end": 15262,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15249,
											"end": 15266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15242,
											"end": 15289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 15432,
											"end": 15436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 15306,
											"end": 15437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15437,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 15306,
											"end": 15437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15620,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 15450,
											"end": 15620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15590,
											"end": 15612,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 15586,
											"end": 15587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15574,
											"end": 15588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15567,
											"end": 15613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15626,
											"end": 15992,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 15626,
											"end": 15992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15789,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 15853,
											"end": 15855,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 15848,
											"end": 15851,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15789,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 15789,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15789,
											"end": 15856,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 15789,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15782,
											"end": 15856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15782,
											"end": 15856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15865,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 15954,
											"end": 15957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15865,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 15865,
											"end": 15958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15865,
											"end": 15958,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 15865,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15983,
											"end": 15985,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15978,
											"end": 15981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 15986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15967,
											"end": 15986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15626,
											"end": 15992,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15626,
											"end": 15992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15626,
											"end": 15992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15626,
											"end": 15992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16417,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 15998,
											"end": 16417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16164,
											"end": 16168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16202,
											"end": 16204,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16191,
											"end": 16200,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16187,
											"end": 16205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16179,
											"end": 16205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16179,
											"end": 16205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16251,
											"end": 16260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16245,
											"end": 16249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16241,
											"end": 16261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16237,
											"end": 16238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16226,
											"end": 16235,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16222,
											"end": 16239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16215,
											"end": 16262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16279,
											"end": 16410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 16405,
											"end": 16409,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16279,
											"end": 16410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 16279,
											"end": 16410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16279,
											"end": 16410,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 16279,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16271,
											"end": 16410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16271,
											"end": 16410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DeepToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"buyTokens()": "d0febe4c",
							"buyTokensWithAmount(uint256)": "fc60c281",
							"decimals()": "313ce567",
							"getContractBalance()": "6f9fb98a",
							"getTokenBalance(address)": "3aecd0e3",
							"getTokenPrice()": "4b94f50e",
							"getTotalMinted()": "0ca1c5c9",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setTokenPrice(uint256)": "6a61e5fc",
							"symbol()": "95d89b41",
							"tokenPrice()": "7ff9b596",
							"totalMinted()": "a2309ff8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"TokenPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokensWithAmount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeepToken.sol\":\"DeepToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DeepToken.sol\":{\"keccak256\":\"0x663ee47c21b1598135de83be217dfa90678a80ab48acd898f111b01b5d3b5b2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36bab888e7a45c26e45432af4e277d8a0ca9cf1696391092444546aff668c15c\",\"dweb:/ipfs/QmbkBXifkZSYftsCqZfQAuWZiiHFwkUmyCE7jhDRDv8bXy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 302,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1054,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "maxSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1056,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1058,
								"contract": "contracts/DeepToken.sol:DeepToken",
								"label": "totalMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1042,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1041
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1042,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1041
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 986,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 395,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1012,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1011,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1042,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 404,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "1133:7:3"
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "1142:6:3"
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "1150:14:3"
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 420,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 416,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 419,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 424,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 907,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										998
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 450,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 907,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 907,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 467,
												"id": 469,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 465,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 907,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 907,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 488,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 491,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 907,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 503,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 502,
												"id": 515,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 907,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 527,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 531,
													"indexExpression": {
														"id": 530,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 532,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 907,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 544,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 798,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 543,
												"id": 556,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 907,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 572,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 588,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 907,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 907,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																659
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 659,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 684,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 663,
															"initialValue": {
																"baseExpression": {
																	"id": 660,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 662,
																"indexExpression": {
																	"id": 661,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 668,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 669,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 670,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 667,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 672,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 683,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 675,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 677,
																			"indexExpression": {
																				"id": 676,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 678,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 679,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 682,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 653,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 704,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 698,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 700,
																			"indexExpression": {
																				"id": 699,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 703,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 696,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 907,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 723,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 729,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 728,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 734,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 907,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 907,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 858,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 907,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 831,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 837,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 840,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 844,
														"indexExpression": {
															"id": 842,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 845,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 848,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 851,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 849,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 907,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 876,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 892,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 886,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 887,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 888,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 885,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 890,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 902,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 895,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 896,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 893,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				798,
																				858
																			],
																			"referencedDeclaration": 858,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 907,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 985,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 985,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 985,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 985,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 985,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 985,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 986,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 991,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "306:6:5"
									},
									"id": 992,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								985
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1011,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1011,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1011,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1012,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1041,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1041,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1041,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1042,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/DeepToken.sol": {
				"ast": {
					"absolutePath": "contracts/DeepToken.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"DeepToken": [
							1404
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						]
					},
					"id": 1405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1405,
							"sourceUnit": 908,
							"src": "61:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1405,
							"sourceUnit": 148,
							"src": "118:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1405,
							"sourceUnit": 393,
							"src": "172:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "ERC20",
										"nameLocations": [
											"253:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "253:5:7"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "253:5:7"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "Ownable",
										"nameLocations": [
											"260:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "260:7:7"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "260:7:7"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "Pausable",
										"nameLocations": [
											"269:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "269:8:7"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "269:8:7"
								}
							],
							"canonicalName": "DeepToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1404,
							"linearizedBaseContracts": [
								1404,
								392,
								147,
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "DeepToken",
							"nameLocation": "240:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1054,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "336:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1404,
									"src": "321:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1053,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ff9b596",
									"id": 1056,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "387:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1404,
									"src": "372:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1055,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2309ff8",
									"id": 1058,
									"mutability": "mutable",
									"name": "totalMinted",
									"nameLocation": "464:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1404,
									"src": "449:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1057,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc271",
									"id": 1064,
									"name": "TokensPurchased",
									"nameLocation": "548:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "580:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "564:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "595:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "587:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:39:7"
									},
									"src": "542:61:7"
								},
								{
									"anonymous": false,
									"eventSelector": "3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273",
									"id": 1070,
									"name": "TokensMinted",
									"nameLocation": "615:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "644:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "628:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "656:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "648:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:36:7"
									},
									"src": "609:55:7"
								},
								{
									"anonymous": false,
									"eventSelector": "6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e93976890",
									"id": 1074,
									"name": "TokenPriceUpdated",
									"nameLocation": "676:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "702:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "694:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:18:7"
									},
									"src": "670:42:7"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "1029:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1048:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1097,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1065:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1048:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c20737570706c792065786365656473206d617820737570706c79",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1077:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6",
																"typeString": "literal_string \"Initial supply exceeds max supply\""
															},
															"value": "Initial supply exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6",
																"typeString": "literal_string \"Initial supply exceeds max supply\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1040:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1040:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "1040:73:7"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1124:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1103,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "1136:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1124:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1124:22:7"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "1157:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1107,
														"name": "_tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1170:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1157:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "1157:24:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1198:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1202:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1198:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "1210:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1110,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1192:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1192:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "1192:32:7"
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1116,
														"name": "totalMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1235:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1117,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1249:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1235:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "1235:27:7"
											}
										]
									},
									"id": 1121,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1087,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1076,
													"src": "995:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1088,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "1001:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1089,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1086,
												"name": "ERC20",
												"nameLocations": [
													"989:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "989:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "989:19:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1091,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1017:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1021:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1017:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1093,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1090,
												"name": "Ownable",
												"nameLocations": [
													"1009:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1009:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1009:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "855:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "841:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "841:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "884:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "870:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "909:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "901:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "941:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "933:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "970:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "962:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:158:7"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:0:7"
									},
									"scope": 1404,
									"src": "819:451:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "1382:350:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1127,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1401:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1405:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1401:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1413:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1401:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e642045544820746f2062757920746f6b656e73",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
																"typeString": "literal_string \"Send ETH to buy tokens\""
															},
															"value": "Send ETH to buy tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
																"typeString": "literal_string \"Send ETH to buy tokens\""
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1393:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "1393:48:7"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "1460:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "1452:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1452:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1136,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1475:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1479:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1475:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1138,
																	"name": "tokenPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1487:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1475:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1140,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1474:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1501:7:7",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "1474:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1452:56:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1145,
																	"name": "totalMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "1527:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1146,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "1541:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1527:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1148,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "1556:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1527:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1567:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 1144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1519:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1519:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "1519:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1607:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1611:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1607:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1619:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1153,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1601:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1601:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "1601:30:7"
											},
											{
												"expression": {
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1159,
														"name": "totalMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1642:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1160,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "1657:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1642:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1642:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1700:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1704:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1700:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1712:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1163,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1684:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1684:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "EmitStatement",
												"src": "1679:45:7"
											}
										]
									},
									"functionSelector": "d0febe4c",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1123,
												"name": "whenNotPaused",
												"nameLocations": [
													"1368:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1368:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1368:13:7"
										}
									],
									"name": "buyTokens",
									"nameLocation": "1339:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:2:7"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1382:0:7"
									},
									"scope": 1404,
									"src": "1330:402:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "1910:591:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1178,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1929:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1943:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1929:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1946:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf",
																"typeString": "literal_string \"Token amount must be greater than 0\""
															},
															"value": "Token amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf",
																"typeString": "literal_string \"Token amount must be greater than 0\""
															}
														],
														"id": 1177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1921:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "1921:63:7"
											},
											{
												"assignments": [
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "requiredETH",
														"nameLocation": "2003:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1244,
														"src": "1995:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1995:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1186,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "2018:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2032:7:7",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "2018:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1189,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2017:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1190,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2043:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2017:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1995:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1194,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2072:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2076:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2072:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1196,
																"name": "requiredETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "2085:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2072:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74204554482073656e74",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2098:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
																"typeString": "literal_string \"Insufficient ETH sent\""
															},
															"value": "Insufficient ETH sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
																"typeString": "literal_string \"Insufficient ETH sent\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2064:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2064:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1202,
																	"name": "totalMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2143:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1203,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "2157:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2143:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1205,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2172:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2143:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2135:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2135:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2223:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2227:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2223:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "2235:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1210,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "2217:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2217:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2217:30:7"
											},
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "totalMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2258:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1217,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "2273:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2258:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "2258:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1220,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2331:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2335:5:7",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2331:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1222,
														"name": "requiredETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "2343:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2331:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "IfStatement",
												"src": "2327:109:7",
												"trueBody": {
													"id": 1236,
													"nodeType": "Block",
													"src": "2356:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1230,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2400:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2404:5:7",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2400:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1232,
																			"name": "requiredETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "2412:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2400:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1226,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2379:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2383:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2379:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2371:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1224,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2371:8:7",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2371:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2391:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2371:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2371:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1235,
															"nodeType": "ExpressionStatement",
															"src": "2371:53:7"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1239,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2469:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2473:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2469:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "2481:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1238,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2453:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2453:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "EmitStatement",
												"src": "2448:45:7"
											}
										]
									},
									"functionSelector": "fc60c281",
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1175,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1174,
												"name": "whenNotPaused",
												"nameLocations": [
													"1896:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1896:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1896:13:7"
										}
									],
									"name": "buyTokensWithAmount",
									"nameLocation": "1838:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1866:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1858:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:21:7"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:0:7"
									},
									"scope": 1404,
									"src": "1829:672:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "2642:183:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1257,
																	"name": "totalMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2661:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1258,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "2675:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2661:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1260,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2685:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2661:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2696:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 1256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2653:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "2653:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2734:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "2738:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1265,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "2728:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "2728:17:7"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1270,
														"name": "totalMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2756:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1271,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "2771:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2756:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1275,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2806:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1276,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "2810:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1274,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2793:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "EmitStatement",
												"src": "2788:29:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "onlyOwner",
												"nameLocations": [
													"2618:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2618:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2618:9:7"
										},
										{
											"id": 1254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1253,
												"name": "whenNotPaused",
												"nameLocations": [
													"2628:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2628:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2628:13:7"
										}
									],
									"name": "mint",
									"nameLocation": "2576:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2589:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2581:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2601:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2593:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2580:28:7"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:0:7"
									},
									"scope": 1404,
									"src": "2567:258:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2950:147:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1288,
																"name": "newPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "2969:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2980:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2969:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2983:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															},
															"value": "Price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															}
														],
														"id": 1287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2961:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2961:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "2961:53:7"
											},
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1294,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "3025:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1295,
														"name": "newPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "3038:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3025:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "3025:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1299,
															"name": "newPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "3080:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"name": "TokenPriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3062:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3062:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "EmitStatement",
												"src": "3057:32:7"
											}
										]
									},
									"functionSelector": "6a61e5fc",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1284,
												"name": "onlyOwner",
												"nameLocations": [
													"2940:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2940:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2940:9:7"
										}
									],
									"name": "setTokenPrice",
									"nameLocation": "2899:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "2921:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2913:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2913:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2912:18:7"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2950:0:7"
									},
									"scope": 1404,
									"src": "2890:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "3198:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1308,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3209:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3209:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "3209:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1305,
												"name": "onlyOwner",
												"nameLocations": [
													"3188:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3188:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3188:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "3171:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3176:2:7"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3198:0:7"
									},
									"scope": 1404,
									"src": "3162:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "3321:29:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1317,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3332:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "3332:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1315,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1314,
												"name": "onlyOwner",
												"nameLocations": [
													"3311:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3311:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3311:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "3292:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3299:2:7"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3321:0:7"
									},
									"scope": 1404,
									"src": "3283:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "3461:156:7",
										"statements": [
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3480:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "3472:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3472:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1330,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3498:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DeepToken_$1404",
																	"typeString": "contract DeepToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DeepToken_$1404",
																	"typeString": "contract DeepToken"
																}
															],
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3490:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3490:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3490:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3504:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3490:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3472:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1335,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "3530:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3540:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3530:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2045544820746f207769746864726177",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3543:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															},
															"value": "No ETH to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3522:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "3522:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1347,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3601:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1343,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3583:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3583:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3575:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3575:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3575:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3592:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3575:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3575:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "3575:34:7"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1324,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1323,
												"name": "onlyOwner",
												"nameLocations": [
													"3451:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3451:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3451:9:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "3431:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3439:2:7"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3461:0:7"
									},
									"scope": 1404,
									"src": "3422:195:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "3735:37:7",
										"statements": [
											{
												"expression": {
													"id": 1356,
													"name": "totalMinted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1058,
													"src": "3753:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1355,
												"id": 1357,
												"nodeType": "Return",
												"src": "3746:18:7"
											}
										]
									},
									"functionSelector": "0ca1c5c9",
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalMinted",
									"nameLocation": "3686:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3700:2:7"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "3726:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:9:7"
									},
									"scope": 1404,
									"src": "3677:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "3873:36:7",
										"statements": [
											{
												"expression": {
													"id": 1364,
													"name": "tokenPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1056,
													"src": "3891:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1365,
												"nodeType": "Return",
												"src": "3884:17:7"
											}
										]
									},
									"functionSelector": "4b94f50e",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "3825:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3838:2:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3864:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:9:7"
									},
									"scope": 1404,
									"src": "3816:93:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "4021:47:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1374,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4047:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DeepToken_$1404",
																	"typeString": "contract DeepToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DeepToken_$1404",
																	"typeString": "contract DeepToken"
																}
															],
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4039:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1372,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4039:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4039:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4053:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4039:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1371,
												"id": 1377,
												"nodeType": "Return",
												"src": "4032:28:7"
											}
										]
									},
									"functionSelector": "6f9fb98a",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "3968:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3986:2:7"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4012:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4012:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4011:9:7"
									},
									"scope": 1404,
									"src": "3959:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "4196:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1387,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "4224:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1386,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4214:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1389,
												"nodeType": "Return",
												"src": "4207:25:7"
											}
										]
									},
									"functionSelector": "3aecd0e3",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalance",
									"nameLocation": "4131:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4155:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4147:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4146:17:7"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4187:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:9:7"
									},
									"scope": 1404,
									"src": "4122:118:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "4309:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1397,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4326:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4330:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4326:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "4338:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "4320:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4320:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "4320:25:7"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4279:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4292:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4284:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4283:16:7"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4309:0:7"
									},
									"scope": 1404,
									"src": "4270:83:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1405,
							"src": "231:4125:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								919,
								928,
								1064,
								1070,
								1074
							]
						}
					],
					"src": "33:4323:7"
				},
				"id": 7
			}
		}
	}
}