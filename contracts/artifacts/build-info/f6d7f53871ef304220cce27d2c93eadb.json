{
	"id": "f6d7f53871ef304220cce27d2c93eadb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/**\n * @title MyToken\n * @dev ERC-20 토큰 구현, 발행, 구매, 조회 기능 포함\n */\ncontract MyToken is ERC20, Ownable {\n    // 토큰 가격 (1 ETH당 토큰 수)\n    uint256 public tokenPrice;\n    \n    // 총 발행량 제한\n    uint256 public maxSupply;\n    \n    // 구매 이벤트\n    event TokensPurchased(address indexed buyer, uint256 amountOfETH, uint256 amountOfTokens);\n\n    /**\n     * @dev 컨트랙트 생성자\n     * @param _name 토큰 이름\n     * @param _symbol 토큰 심볼\n     * @param _initialSupply 초기 발행량\n     * @param _tokenPrice 토큰 가격 (1 ETH당 토큰 수)\n     * @param _maxSupply 최대 발행량\n     */\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _initialSupply,\n        uint256 _tokenPrice,\n        uint256 _maxSupply\n    ) ERC20(_name, _symbol) Ownable(msg.sender) {\n        require(_initialSupply <= _maxSupply, \"Initial supply cannot exceed max supply\");\n        \n        tokenPrice = _tokenPrice;\n        maxSupply = _maxSupply;\n        \n        // 초기 토큰을 컨트랙트 소유자에게 발행\n        _mint(msg.sender, _initialSupply * 10**decimals());\n    }\n\n    /**\n     * @dev 추가 토큰 발행 (소유자만 가능)\n     * @param to 토큰을 받을 주소\n     * @param amount 발행할 토큰 양\n     */\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(totalSupply() + amount <= maxSupply * 10**decimals(), \"Exceeds max supply\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev ETH를 보내고 토큰 구매\n     */\n    function buyTokens() public payable {\n        require(msg.value > 0, \"Send ETH to buy tokens\");\n        \n        // 구매할 토큰 수 계산\n        uint256 tokenAmount = msg.value * tokenPrice;\n        \n        // 최대 발행량 체크\n        require(totalSupply() + tokenAmount <= maxSupply * 10**decimals(), \"Exceeds max supply\");\n        \n        // 토큰 전송\n        _mint(msg.sender, tokenAmount);\n        \n        // 이벤트 발생\n        emit TokensPurchased(msg.sender, msg.value, tokenAmount);\n    }\n\n    /**\n     * @dev 컨트랙트 잔고 확인 (소유자만 가능)\n     */\n    function getContractBalance() public view onlyOwner returns (uint256) {\n        return address(this).balance;\n    }\n    \n    /**\n     * @dev 컨트랙트 ETH 인출 (소유자만 가능)\n     */\n    function withdrawETH() public onlyOwner {\n        (bool success, ) = payable(owner()).call{value: address(this).balance}(\"\");\n        require(success, \"Withdrawal failed\");\n    }\n    \n    /**\n     * @dev 토큰 가격 업데이트 (소유자만 가능)\n     * @param _newPrice 새 토큰 가격\n     */\n    function setTokenPrice(uint256 _newPrice) public onlyOwner {\n        require(_newPrice > 0, \"Price must be greater than 0\");\n        tokenPrice = _newPrice;\n    }\n    \n    /**\n     * @dev 특정 주소의 토큰 잔액 조회\n     * @param account 조회할 주소\n     * @return 토큰 잔액\n     */\n    function checkBalance(address account) public view returns (uint256) {\n        return balanceOf(account);\n    }\n    \n    /**\n     * @dev 발행된 총 토큰 양 조회\n     * @return 총 공급량\n     */\n    function getTotalSupply() public view returns (uint256) {\n        return totalSupply();\n    }\n    \n    /**\n     * @dev 남은 발행 가능한 토큰 양 조회\n     * @return 남은 발행 가능량\n     */\n    function getRemainingSupply() public view returns (uint256) {\n        return (maxSupply * 10**decimals()) - totalSupply();\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfETH",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfTokens",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "checkBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRemainingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPrice",
									"type": "uint256"
								}
							],
							"name": "setTokenPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 토큰 구현, 발행, 구매, 조회 기능 포함",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"buyTokens()": {
								"details": "ETH를 보내고 토큰 구매"
							},
							"checkBalance(address)": {
								"details": "특정 주소의 토큰 잔액 조회",
								"params": {
									"account": "조회할 주소"
								},
								"returns": {
									"_0": "토큰 잔액"
								}
							},
							"constructor": {
								"details": "컨트랙트 생성자",
								"params": {
									"_initialSupply": "초기 발행량",
									"_maxSupply": "최대 발행량",
									"_name": "토큰 이름",
									"_symbol": "토큰 심볼",
									"_tokenPrice": "토큰 가격 (1 ETH당 토큰 수)"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getContractBalance()": {
								"details": "컨트랙트 잔고 확인 (소유자만 가능)"
							},
							"getRemainingSupply()": {
								"details": "남은 발행 가능한 토큰 양 조회",
								"returns": {
									"_0": "남은 발행 가능량"
								}
							},
							"getTotalSupply()": {
								"details": "발행된 총 토큰 양 조회",
								"returns": {
									"_0": "총 공급량"
								}
							},
							"mint(address,uint256)": {
								"details": "추가 토큰 발행 (소유자만 가능)",
								"params": {
									"amount": "발행할 토큰 양",
									"to": "토큰을 받을 주소"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setTokenPrice(uint256)": {
								"details": "토큰 가격 업데이트 (소유자만 가능)",
								"params": {
									"_newPrice": "새 토큰 가격"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawETH()": {
								"details": "컨트랙트 ETH 인출 (소유자만 가능)"
							}
						},
						"title": "MyToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":315:3783  contract MyToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":889:1403  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MyToken.sol\":1086:1096  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":1062:1067  _name */\n  dup6\n    /* \"contracts/MyToken.sol\":1069:1076  _symbol */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MyToken.sol\":1134:1144  _maxSupply */\n  dup1\n    /* \"contracts/MyToken.sol\":1116:1130  _initialSupply */\n  dup4\n    /* \"contracts/MyToken.sol\":1116:1144  _initialSupply <= _maxSupply */\n  gt\n  iszero\n    /* \"contracts/MyToken.sol\":1108:1188  require(_initialSupply <= _maxSupply, \"Initial supply cannot exceed max supply\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/MyToken.sol\":1220:1231  _tokenPrice */\n  dup2\n    /* \"contracts/MyToken.sol\":1207:1217  tokenPrice */\n  0x06\n    /* \"contracts/MyToken.sol\":1207:1231  tokenPrice = _tokenPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1253:1263  _maxSupply */\n  dup1\n    /* \"contracts/MyToken.sol\":1241:1250  maxSupply */\n  0x07\n    /* \"contracts/MyToken.sol\":1241:1263  maxSupply = _maxSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1346:1396  _mint(msg.sender, _initialSupply * 10**decimals()) */\n  tag_21\n    /* \"contracts/MyToken.sol\":1352:1362  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":1385:1395  decimals() */\n  tag_22\n    /* \"contracts/MyToken.sol\":1385:1393  decimals */\n  shl(0x20, tag_23)\n    /* \"contracts/MyToken.sol\":1385:1395  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/MyToken.sol\":1381:1383  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":1381:1395  10**decimals() */\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"contracts/MyToken.sol\":1364:1378  _initialSupply */\n  dup6\n    /* \"contracts/MyToken.sol\":1364:1395  _initialSupply * 10**decimals() */\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"contracts/MyToken.sol\":1346:1351  _mint */\n  shl(0x20, tag_28)\n    /* \"contracts/MyToken.sol\":1346:1396  _mint(msg.sender, _initialSupply * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/MyToken.sol\":889:1403  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":315:3783  contract MyToken is ERC20, Ownable {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_34\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_35\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_36)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_41)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_46)\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_49:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_50:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_51:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_52:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_53:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_54:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_55:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_56:\n    /* \"#utility.yul\":957:984   */\n  tag_104\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_54\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_106\n  tag_55\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1030:1118   */\ntag_105:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_57:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_108\n  tag_49\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_109\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_58:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_112\n  tag_55\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1434:1490   */\ntag_111:\n    /* \"#utility.yul\":1508:1537   */\n  tag_113\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_54\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_59:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_60:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_116\n    /* \"#utility.yul\":1885:1934   */\n  tag_117\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_58\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1869:1935   */\n  tag_57\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_119\n  tag_53\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2010:2122   */\ntag_118:\n    /* \"#utility.yul\":2131:2183   */\n  tag_120\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_59\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_61:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_123\n  tag_52\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2292:2414   */\ntag_122:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_124\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_60\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_62:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_63:\n    /* \"#utility.yul\":2726:2750   */\n  tag_127\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_62\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_128:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_64:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_130\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_63\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:4253   */\ntag_3:\n    /* \"#utility.yul\":3056:3062   */\n  0x00\n    /* \"#utility.yul\":3064:3070   */\n  dup1\n    /* \"#utility.yul\":3072:3078   */\n  0x00\n    /* \"#utility.yul\":3080:3086   */\n  dup1\n    /* \"#utility.yul\":3088:3094   */\n  0x00\n    /* \"#utility.yul\":3137:3140   */\n  0xa0\n    /* \"#utility.yul\":3125:3134   */\n  dup7\n    /* \"#utility.yul\":3116:3123   */\n  dup9\n    /* \"#utility.yul\":3112:3135   */\n  sub\n    /* \"#utility.yul\":3108:3141   */\n  slt\n    /* \"#utility.yul\":3105:3225   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":3144:3223   */\n  tag_133\n  tag_50\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3105:3225   */\ntag_132:\n    /* \"#utility.yul\":3285:3286   */\n  0x00\n    /* \"#utility.yul\":3274:3283   */\n  dup7\n    /* \"#utility.yul\":3270:3287   */\n  add\n    /* \"#utility.yul\":3264:3288   */\n  mload\n    /* \"#utility.yul\":3315:3333   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3307:3313   */\n  dup2\n    /* \"#utility.yul\":3304:3334   */\n  gt\n    /* \"#utility.yul\":3301:3418   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":3337:3416   */\n  tag_135\n  tag_51\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3301:3418   */\ntag_134:\n    /* \"#utility.yul\":3442:3516   */\n  tag_136\n    /* \"#utility.yul\":3508:3515   */\n  dup9\n    /* \"#utility.yul\":3499:3505   */\n  dup3\n    /* \"#utility.yul\":3488:3497   */\n  dup10\n    /* \"#utility.yul\":3484:3506   */\n  add\n    /* \"#utility.yul\":3442:3516   */\n  tag_61\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3432:3516   */\n  swap6\n  pop\n    /* \"#utility.yul\":3235:3526   */\n  pop\n    /* \"#utility.yul\":3586:3588   */\n  0x20\n    /* \"#utility.yul\":3575:3584   */\n  dup7\n    /* \"#utility.yul\":3571:3589   */\n  add\n    /* \"#utility.yul\":3565:3590   */\n  mload\n    /* \"#utility.yul\":3617:3635   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3609:3615   */\n  dup2\n    /* \"#utility.yul\":3606:3636   */\n  gt\n    /* \"#utility.yul\":3603:3720   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":3639:3718   */\n  tag_138\n  tag_51\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3603:3720   */\ntag_137:\n    /* \"#utility.yul\":3744:3818   */\n  tag_139\n    /* \"#utility.yul\":3810:3817   */\n  dup9\n    /* \"#utility.yul\":3801:3807   */\n  dup3\n    /* \"#utility.yul\":3790:3799   */\n  dup10\n    /* \"#utility.yul\":3786:3808   */\n  add\n    /* \"#utility.yul\":3744:3818   */\n  tag_61\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3734:3818   */\n  swap5\n  pop\n    /* \"#utility.yul\":3536:3828   */\n  pop\n    /* \"#utility.yul\":3867:3869   */\n  0x40\n    /* \"#utility.yul\":3893:3957   */\n  tag_140\n    /* \"#utility.yul\":3949:3956   */\n  dup9\n    /* \"#utility.yul\":3940:3946   */\n  dup3\n    /* \"#utility.yul\":3929:3938   */\n  dup10\n    /* \"#utility.yul\":3925:3947   */\n  add\n    /* \"#utility.yul\":3893:3957   */\n  tag_64\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3883:3957   */\n  swap4\n  pop\n    /* \"#utility.yul\":3838:3967   */\n  pop\n    /* \"#utility.yul\":4006:4008   */\n  0x60\n    /* \"#utility.yul\":4032:4096   */\n  tag_141\n    /* \"#utility.yul\":4088:4095   */\n  dup9\n    /* \"#utility.yul\":4079:4085   */\n  dup3\n    /* \"#utility.yul\":4068:4077   */\n  dup10\n    /* \"#utility.yul\":4064:4086   */\n  add\n    /* \"#utility.yul\":4032:4096   */\n  tag_64\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4022:4096   */\n  swap3\n  pop\n    /* \"#utility.yul\":3977:4106   */\n  pop\n    /* \"#utility.yul\":4145:4148   */\n  0x80\n    /* \"#utility.yul\":4172:4236   */\n  tag_142\n    /* \"#utility.yul\":4228:4235   */\n  dup9\n    /* \"#utility.yul\":4219:4225   */\n  dup3\n    /* \"#utility.yul\":4208:4217   */\n  dup10\n    /* \"#utility.yul\":4204:4226   */\n  add\n    /* \"#utility.yul\":4172:4236   */\n  tag_64\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4162:4236   */\n  swap2\n  pop\n    /* \"#utility.yul\":4116:4246   */\n  pop\n    /* \"#utility.yul\":2930:4253   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4358   */\ntag_65:\n    /* \"#utility.yul\":4311:4317   */\n  0x00\n    /* \"#utility.yul\":4345:4350   */\n  dup2\n    /* \"#utility.yul\":4339:4351   */\n  mload\n    /* \"#utility.yul\":4329:4351   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4358   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4364:4544   */\ntag_66:\n    /* \"#utility.yul\":4412:4489   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4409:4410   */\n  0x00\n    /* \"#utility.yul\":4402:4490   */\n  mstore\n    /* \"#utility.yul\":4509:4513   */\n  0x22\n    /* \"#utility.yul\":4506:4507   */\n  0x04\n    /* \"#utility.yul\":4499:4514   */\n  mstore\n    /* \"#utility.yul\":4533:4537   */\n  0x24\n    /* \"#utility.yul\":4530:4531   */\n  0x00\n    /* \"#utility.yul\":4523:4538   */\n  revert\n    /* \"#utility.yul\":4550:4870   */\ntag_67:\n    /* \"#utility.yul\":4594:4600   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x02\n    /* \"#utility.yul\":4625:4629   */\n  dup3\n    /* \"#utility.yul\":4621:4633   */\n  div\n    /* \"#utility.yul\":4611:4633   */\n  swap1\n  pop\n    /* \"#utility.yul\":4678:4679   */\n  0x01\n    /* \"#utility.yul\":4672:4676   */\n  dup3\n    /* \"#utility.yul\":4668:4680   */\n  and\n    /* \"#utility.yul\":4699:4717   */\n  dup1\n    /* \"#utility.yul\":4689:4770   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":4755:4759   */\n  0x7f\n    /* \"#utility.yul\":4747:4753   */\n  dup3\n    /* \"#utility.yul\":4743:4760   */\n  and\n    /* \"#utility.yul\":4733:4760   */\n  swap2\n  pop\n    /* \"#utility.yul\":4689:4770   */\ntag_146:\n    /* \"#utility.yul\":4817:4819   */\n  0x20\n    /* \"#utility.yul\":4809:4815   */\n  dup3\n    /* \"#utility.yul\":4806:4820   */\n  lt\n    /* \"#utility.yul\":4786:4804   */\n  dup2\n    /* \"#utility.yul\":4783:4821   */\n  sub\n    /* \"#utility.yul\":4780:4864   */\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4836:4854   */\n  tag_148\n  tag_66\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4780:4864   */\ntag_147:\n    /* \"#utility.yul\":4601:4870   */\n  pop\n    /* \"#utility.yul\":4550:4870   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4876:5017   */\ntag_68:\n    /* \"#utility.yul\":4925:4929   */\n  0x00\n    /* \"#utility.yul\":4948:4951   */\n  dup2\n    /* \"#utility.yul\":4940:4951   */\n  swap1\n  pop\n    /* \"#utility.yul\":4971:4974   */\n  dup2\n    /* \"#utility.yul\":4968:4969   */\n  0x00\n    /* \"#utility.yul\":4961:4975   */\n  mstore\n    /* \"#utility.yul\":5005:5009   */\n  0x20\n    /* \"#utility.yul\":5002:5003   */\n  0x00\n    /* \"#utility.yul\":4992:5010   */\n  keccak256\n    /* \"#utility.yul\":4984:5010   */\n  swap1\n  pop\n    /* \"#utility.yul\":4876:5017   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5023:5116   */\ntag_69:\n    /* \"#utility.yul\":5060:5066   */\n  0x00\n    /* \"#utility.yul\":5107:5109   */\n  0x20\n    /* \"#utility.yul\":5102:5104   */\n  0x1f\n    /* \"#utility.yul\":5095:5100   */\n  dup4\n    /* \"#utility.yul\":5091:5105   */\n  add\n    /* \"#utility.yul\":5087:5110   */\n  div\n    /* \"#utility.yul\":5077:5110   */\n  swap1\n  pop\n    /* \"#utility.yul\":5023:5116   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5122:5229   */\ntag_70:\n    /* \"#utility.yul\":5166:5174   */\n  0x00\n    /* \"#utility.yul\":5216:5221   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup3\n    /* \"#utility.yul\":5206:5222   */\n  shl\n    /* \"#utility.yul\":5185:5222   */\n  swap1\n  pop\n    /* \"#utility.yul\":5122:5229   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5235:5628   */\ntag_71:\n    /* \"#utility.yul\":5304:5310   */\n  0x00\n    /* \"#utility.yul\":5354:5355   */\n  0x08\n    /* \"#utility.yul\":5342:5352   */\n  dup4\n    /* \"#utility.yul\":5338:5356   */\n  mul\n    /* \"#utility.yul\":5377:5474   */\n  tag_153\n    /* \"#utility.yul\":5407:5473   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5396:5405   */\n  dup3\n    /* \"#utility.yul\":5377:5474   */\n  tag_70\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5495:5534   */\n  tag_154\n    /* \"#utility.yul\":5525:5533   */\n  dup7\n    /* \"#utility.yul\":5514:5523   */\n  dup4\n    /* \"#utility.yul\":5495:5534   */\n  tag_70\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5483:5534   */\n  swap6\n  pop\n    /* \"#utility.yul\":5567:5571   */\n  dup1\n    /* \"#utility.yul\":5563:5572   */\n  not\n    /* \"#utility.yul\":5556:5561   */\n  dup5\n    /* \"#utility.yul\":5552:5573   */\n  and\n    /* \"#utility.yul\":5543:5573   */\n  swap4\n  pop\n    /* \"#utility.yul\":5616:5620   */\n  dup1\n    /* \"#utility.yul\":5606:5614   */\n  dup7\n    /* \"#utility.yul\":5602:5621   */\n  and\n    /* \"#utility.yul\":5595:5600   */\n  dup5\n    /* \"#utility.yul\":5592:5622   */\n  or\n    /* \"#utility.yul\":5582:5622   */\n  swap3\n  pop\n    /* \"#utility.yul\":5311:5628   */\n  pop\n  pop\n    /* \"#utility.yul\":5235:5628   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5634:5694   */\ntag_72:\n    /* \"#utility.yul\":5662:5665   */\n  0x00\n    /* \"#utility.yul\":5683:5688   */\n  dup2\n    /* \"#utility.yul\":5676:5688   */\n  swap1\n  pop\n    /* \"#utility.yul\":5634:5694   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5700:5842   */\ntag_73:\n    /* \"#utility.yul\":5750:5759   */\n  0x00\n    /* \"#utility.yul\":5783:5836   */\n  tag_157\n    /* \"#utility.yul\":5801:5835   */\n  tag_158\n    /* \"#utility.yul\":5810:5834   */\n  tag_159\n    /* \"#utility.yul\":5828:5833   */\n  dup5\n    /* \"#utility.yul\":5810:5834   */\n  tag_62\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5801:5835   */\n  tag_72\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5783:5836   */\n  tag_62\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5770:5836   */\n  swap1\n  pop\n    /* \"#utility.yul\":5700:5842   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5848:5923   */\ntag_74:\n    /* \"#utility.yul\":5891:5894   */\n  0x00\n    /* \"#utility.yul\":5912:5917   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5848:5923   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5929:6198   */\ntag_75:\n    /* \"#utility.yul\":6039:6078   */\n  tag_162\n    /* \"#utility.yul\":6070:6077   */\n  dup4\n    /* \"#utility.yul\":6039:6078   */\n  tag_73\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6100:6191   */\n  tag_163\n    /* \"#utility.yul\":6149:6190   */\n  tag_164\n    /* \"#utility.yul\":6173:6189   */\n  dup3\n    /* \"#utility.yul\":6149:6190   */\n  tag_74\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6141:6147   */\n  dup5\n    /* \"#utility.yul\":6134:6138   */\n  dup5\n    /* \"#utility.yul\":6128:6139   */\n  sload\n    /* \"#utility.yul\":6100:6191   */\n  tag_71\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6094:6098   */\n  dup3\n    /* \"#utility.yul\":6087:6192   */\n  sstore\n    /* \"#utility.yul\":6005:6198   */\n  pop\n    /* \"#utility.yul\":5929:6198   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6204:6277   */\ntag_76:\n    /* \"#utility.yul\":6249:6252   */\n  0x00\n    /* \"#utility.yul\":6204:6277   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6283:6472   */\ntag_77:\n    /* \"#utility.yul\":6360:6392   */\n  tag_167\n  tag_76\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6401:6466   */\n  tag_168\n    /* \"#utility.yul\":6459:6465   */\n  dup2\n    /* \"#utility.yul\":6451:6457   */\n  dup5\n    /* \"#utility.yul\":6445:6449   */\n  dup5\n    /* \"#utility.yul\":6401:6466   */\n  tag_75\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6336:6472   */\n  pop\n    /* \"#utility.yul\":6283:6472   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6478:6664   */\ntag_78:\n    /* \"#utility.yul\":6538:6658   */\ntag_170:\n    /* \"#utility.yul\":6555:6558   */\n  dup2\n    /* \"#utility.yul\":6548:6553   */\n  dup2\n    /* \"#utility.yul\":6545:6559   */\n  lt\n    /* \"#utility.yul\":6538:6658   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6609:6648   */\n  tag_173\n    /* \"#utility.yul\":6646:6647   */\n  0x00\n    /* \"#utility.yul\":6639:6644   */\n  dup3\n    /* \"#utility.yul\":6609:6648   */\n  tag_77\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6582:6583   */\n  0x01\n    /* \"#utility.yul\":6575:6580   */\n  dup2\n    /* \"#utility.yul\":6571:6584   */\n  add\n    /* \"#utility.yul\":6562:6584   */\n  swap1\n  pop\n    /* \"#utility.yul\":6538:6658   */\n  jump(tag_170)\ntag_172:\n    /* \"#utility.yul\":6478:6664   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6670:7213   */\ntag_79:\n    /* \"#utility.yul\":6771:6773   */\n  0x1f\n    /* \"#utility.yul\":6766:6769   */\n  dup3\n    /* \"#utility.yul\":6763:6774   */\n  gt\n    /* \"#utility.yul\":6760:7206   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6805:6843   */\n  tag_176\n    /* \"#utility.yul\":6837:6842   */\n  dup2\n    /* \"#utility.yul\":6805:6843   */\n  tag_68\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6889:6918   */\n  tag_177\n    /* \"#utility.yul\":6907:6917   */\n  dup5\n    /* \"#utility.yul\":6889:6918   */\n  tag_69\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6879:6887   */\n  dup2\n    /* \"#utility.yul\":6875:6919   */\n  add\n    /* \"#utility.yul\":7072:7074   */\n  0x20\n    /* \"#utility.yul\":7060:7070   */\n  dup6\n    /* \"#utility.yul\":7057:7075   */\n  lt\n    /* \"#utility.yul\":7054:7103   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":7093:7101   */\n  dup2\n    /* \"#utility.yul\":7078:7101   */\n  swap1\n  pop\n    /* \"#utility.yul\":7054:7103   */\ntag_178:\n    /* \"#utility.yul\":7116:7196   */\n  tag_179\n    /* \"#utility.yul\":7172:7194   */\n  tag_180\n    /* \"#utility.yul\":7190:7193   */\n  dup6\n    /* \"#utility.yul\":7172:7194   */\n  tag_69\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":7162:7170   */\n  dup4\n    /* \"#utility.yul\":7158:7195   */\n  add\n    /* \"#utility.yul\":7145:7156   */\n  dup3\n    /* \"#utility.yul\":7116:7196   */\n  tag_78\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6775:7206   */\n  pop\n  pop\n    /* \"#utility.yul\":6760:7206   */\ntag_175:\n    /* \"#utility.yul\":6670:7213   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7219:7336   */\ntag_80:\n    /* \"#utility.yul\":7273:7281   */\n  0x00\n    /* \"#utility.yul\":7323:7328   */\n  dup3\n    /* \"#utility.yul\":7317:7321   */\n  dup3\n    /* \"#utility.yul\":7313:7329   */\n  shr\n    /* \"#utility.yul\":7292:7329   */\n  swap1\n  pop\n    /* \"#utility.yul\":7219:7336   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7342:7511   */\ntag_81:\n    /* \"#utility.yul\":7386:7392   */\n  0x00\n    /* \"#utility.yul\":7419:7470   */\n  tag_183\n    /* \"#utility.yul\":7467:7468   */\n  0x00\n    /* \"#utility.yul\":7463:7469   */\n  not\n    /* \"#utility.yul\":7455:7460   */\n  dup5\n    /* \"#utility.yul\":7452:7453   */\n  0x08\n    /* \"#utility.yul\":7448:7461   */\n  mul\n    /* \"#utility.yul\":7419:7470   */\n  tag_80\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7415:7471   */\n  not\n    /* \"#utility.yul\":7500:7504   */\n  dup1\n    /* \"#utility.yul\":7494:7498   */\n  dup4\n    /* \"#utility.yul\":7490:7505   */\n  and\n    /* \"#utility.yul\":7480:7505   */\n  swap2\n  pop\n    /* \"#utility.yul\":7393:7511   */\n  pop\n    /* \"#utility.yul\":7342:7511   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7516:7811   */\ntag_82:\n    /* \"#utility.yul\":7592:7596   */\n  0x00\n    /* \"#utility.yul\":7738:7767   */\n  tag_185\n    /* \"#utility.yul\":7763:7766   */\n  dup4\n    /* \"#utility.yul\":7757:7761   */\n  dup4\n    /* \"#utility.yul\":7738:7767   */\n  tag_81\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7730:7767   */\n  swap2\n  pop\n    /* \"#utility.yul\":7800:7803   */\n  dup3\n    /* \"#utility.yul\":7797:7798   */\n  0x02\n    /* \"#utility.yul\":7793:7804   */\n  mul\n    /* \"#utility.yul\":7787:7791   */\n  dup3\n    /* \"#utility.yul\":7784:7805   */\n  or\n    /* \"#utility.yul\":7776:7805   */\n  swap1\n  pop\n    /* \"#utility.yul\":7516:7811   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7816:9211   */\ntag_9:\n    /* \"#utility.yul\":7933:7970   */\n  tag_187\n    /* \"#utility.yul\":7966:7969   */\n  dup3\n    /* \"#utility.yul\":7933:7970   */\n  tag_65\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8035:8053   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8027:8033   */\n  dup2\n    /* \"#utility.yul\":8024:8054   */\n  gt\n    /* \"#utility.yul\":8021:8077   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8057:8075   */\n  tag_189\n  tag_55\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8021:8077   */\ntag_188:\n    /* \"#utility.yul\":8101:8139   */\n  tag_190\n    /* \"#utility.yul\":8133:8137   */\n  dup3\n    /* \"#utility.yul\":8127:8138   */\n  sload\n    /* \"#utility.yul\":8101:8139   */\n  tag_67\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8186:8253   */\n  tag_191\n    /* \"#utility.yul\":8246:8252   */\n  dup3\n    /* \"#utility.yul\":8238:8244   */\n  dup3\n    /* \"#utility.yul\":8232:8236   */\n  dup6\n    /* \"#utility.yul\":8186:8253   */\n  tag_79\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8280:8281   */\n  0x00\n    /* \"#utility.yul\":8304:8308   */\n  0x20\n    /* \"#utility.yul\":8291:8308   */\n  swap1\n  pop\n    /* \"#utility.yul\":8336:8338   */\n  0x1f\n    /* \"#utility.yul\":8328:8334   */\n  dup4\n    /* \"#utility.yul\":8325:8339   */\n  gt\n    /* \"#utility.yul\":8353:8354   */\n  0x01\n    /* \"#utility.yul\":8348:8966   */\n  dup2\n  eq\n  tag_193\n  jumpi\n    /* \"#utility.yul\":9010:9011   */\n  0x00\n    /* \"#utility.yul\":9027:9033   */\n  dup5\n    /* \"#utility.yul\":9024:9101   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9076:9085   */\n  dup3\n    /* \"#utility.yul\":9071:9074   */\n  dup8\n    /* \"#utility.yul\":9067:9086   */\n  add\n    /* \"#utility.yul\":9061:9087   */\n  mload\n    /* \"#utility.yul\":9052:9087   */\n  swap1\n  pop\n    /* \"#utility.yul\":9024:9101   */\ntag_194:\n    /* \"#utility.yul\":9127:9194   */\n  tag_195\n    /* \"#utility.yul\":9187:9193   */\n  dup6\n    /* \"#utility.yul\":9180:9185   */\n  dup3\n    /* \"#utility.yul\":9127:9194   */\n  tag_82\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9121:9125   */\n  dup7\n    /* \"#utility.yul\":9114:9195   */\n  sstore\n    /* \"#utility.yul\":8983:9205   */\n  pop\n    /* \"#utility.yul\":8318:9205   */\n  jump(tag_192)\n    /* \"#utility.yul\":8348:8966   */\ntag_193:\n    /* \"#utility.yul\":8400:8404   */\n  0x1f\n    /* \"#utility.yul\":8396:8405   */\n  not\n    /* \"#utility.yul\":8388:8394   */\n  dup5\n    /* \"#utility.yul\":8384:8406   */\n  and\n    /* \"#utility.yul\":8434:8471   */\n  tag_196\n    /* \"#utility.yul\":8466:8470   */\n  dup7\n    /* \"#utility.yul\":8434:8471   */\n  tag_68\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8493:8494   */\n  0x00\n    /* \"#utility.yul\":8507:8715   */\ntag_197:\n    /* \"#utility.yul\":8521:8528   */\n  dup3\n    /* \"#utility.yul\":8518:8519   */\n  dup2\n    /* \"#utility.yul\":8515:8529   */\n  lt\n    /* \"#utility.yul\":8507:8715   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":8600:8609   */\n  dup5\n    /* \"#utility.yul\":8595:8598   */\n  dup10\n    /* \"#utility.yul\":8591:8610   */\n  add\n    /* \"#utility.yul\":8585:8611   */\n  mload\n    /* \"#utility.yul\":8577:8583   */\n  dup3\n    /* \"#utility.yul\":8570:8612   */\n  sstore\n    /* \"#utility.yul\":8651:8652   */\n  0x01\n    /* \"#utility.yul\":8643:8649   */\n  dup3\n    /* \"#utility.yul\":8639:8653   */\n  add\n    /* \"#utility.yul\":8629:8653   */\n  swap2\n  pop\n    /* \"#utility.yul\":8698:8700   */\n  0x20\n    /* \"#utility.yul\":8687:8696   */\n  dup6\n    /* \"#utility.yul\":8683:8701   */\n  add\n    /* \"#utility.yul\":8670:8701   */\n  swap5\n  pop\n    /* \"#utility.yul\":8544:8548   */\n  0x20\n    /* \"#utility.yul\":8541:8542   */\n  dup2\n    /* \"#utility.yul\":8537:8549   */\n  add\n    /* \"#utility.yul\":8532:8549   */\n  swap1\n  pop\n    /* \"#utility.yul\":8507:8715   */\n  jump(tag_197)\ntag_199:\n    /* \"#utility.yul\":8743:8749   */\n  dup7\n    /* \"#utility.yul\":8734:8741   */\n  dup4\n    /* \"#utility.yul\":8731:8750   */\n  lt\n    /* \"#utility.yul\":8728:8907   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":8801:8810   */\n  dup5\n    /* \"#utility.yul\":8796:8799   */\n  dup10\n    /* \"#utility.yul\":8792:8811   */\n  add\n    /* \"#utility.yul\":8786:8812   */\n  mload\n    /* \"#utility.yul\":8844:8892   */\n  tag_201\n    /* \"#utility.yul\":8886:8890   */\n  0x1f\n    /* \"#utility.yul\":8878:8884   */\n  dup10\n    /* \"#utility.yul\":8874:8891   */\n  and\n    /* \"#utility.yul\":8863:8872   */\n  dup3\n    /* \"#utility.yul\":8844:8892   */\n  tag_81\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":8836:8842   */\n  dup4\n    /* \"#utility.yul\":8829:8893   */\n  sstore\n    /* \"#utility.yul\":8751:8907   */\n  pop\n    /* \"#utility.yul\":8728:8907   */\ntag_200:\n    /* \"#utility.yul\":8953:8954   */\n  0x01\n    /* \"#utility.yul\":8949:8950   */\n  0x02\n    /* \"#utility.yul\":8941:8947   */\n  dup9\n    /* \"#utility.yul\":8937:8951   */\n  mul\n    /* \"#utility.yul\":8933:8955   */\n  add\n    /* \"#utility.yul\":8927:8931   */\n  dup9\n    /* \"#utility.yul\":8920:8956   */\n  sstore\n    /* \"#utility.yul\":8355:8966   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8318:9205   */\ntag_192:\n  pop\n    /* \"#utility.yul\":7908:9211   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7816:9211   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9343   */\ntag_83:\n    /* \"#utility.yul\":9254:9261   */\n  0x00\n    /* \"#utility.yul\":9294:9336   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9287:9292   */\n  dup3\n    /* \"#utility.yul\":9283:9337   */\n  and\n    /* \"#utility.yul\":9272:9337   */\n  swap1\n  pop\n    /* \"#utility.yul\":9217:9343   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9349:9445   */\ntag_84:\n    /* \"#utility.yul\":9386:9393   */\n  0x00\n    /* \"#utility.yul\":9415:9439   */\n  tag_204\n    /* \"#utility.yul\":9433:9438   */\n  dup3\n    /* \"#utility.yul\":9415:9439   */\n  tag_83\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9404:9439   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_85:\n    /* \"#utility.yul\":9538:9562   */\n  tag_206\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_84\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_14:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_208\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_85\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9972   */\ntag_86:\n    /* \"#utility.yul\":9887:9898   */\n  0x00\n    /* \"#utility.yul\":9921:9927   */\n  dup3\n    /* \"#utility.yul\":9916:9919   */\n  dup3\n    /* \"#utility.yul\":9909:9928   */\n  mstore\n    /* \"#utility.yul\":9961:9965   */\n  0x20\n    /* \"#utility.yul\":9956:9959   */\n  dup3\n    /* \"#utility.yul\":9952:9966   */\n  add\n    /* \"#utility.yul\":9937:9966   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9972   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9978:10204   */\ntag_87:\n    /* \"#utility.yul\":10118:10152   */\n  0x496e697469616c20737570706c792063616e6e6f7420657863656564206d6178\n    /* \"#utility.yul\":10114:10115   */\n  0x00\n    /* \"#utility.yul\":10106:10112   */\n  dup3\n    /* \"#utility.yul\":10102:10116   */\n  add\n    /* \"#utility.yul\":10095:10153   */\n  mstore\n    /* \"#utility.yul\":10187:10196   */\n  0x20737570706c7900000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10182:10184   */\n  0x20\n    /* \"#utility.yul\":10174:10180   */\n  dup3\n    /* \"#utility.yul\":10170:10185   */\n  add\n    /* \"#utility.yul\":10163:10197   */\n  mstore\n    /* \"#utility.yul\":9978:10204   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10210:10576   */\ntag_88:\n    /* \"#utility.yul\":10352:10355   */\n  0x00\n    /* \"#utility.yul\":10373:10440   */\n  tag_212\n    /* \"#utility.yul\":10437:10439   */\n  0x27\n    /* \"#utility.yul\":10432:10435   */\n  dup4\n    /* \"#utility.yul\":10373:10440   */\n  tag_86\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10366:10440   */\n  swap2\n  pop\n    /* \"#utility.yul\":10449:10542   */\n  tag_213\n    /* \"#utility.yul\":10538:10541   */\n  dup3\n    /* \"#utility.yul\":10449:10542   */\n  tag_87\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10567:10569   */\n  0x40\n    /* \"#utility.yul\":10562:10565   */\n  dup3\n    /* \"#utility.yul\":10558:10570   */\n  add\n    /* \"#utility.yul\":10551:10570   */\n  swap1\n  pop\n    /* \"#utility.yul\":10210:10576   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10582:11001   */\ntag_20:\n    /* \"#utility.yul\":10748:10752   */\n  0x00\n    /* \"#utility.yul\":10786:10788   */\n  0x20\n    /* \"#utility.yul\":10775:10784   */\n  dup3\n    /* \"#utility.yul\":10771:10789   */\n  add\n    /* \"#utility.yul\":10763:10789   */\n  swap1\n  pop\n    /* \"#utility.yul\":10835:10844   */\n  dup2\n    /* \"#utility.yul\":10829:10833   */\n  dup2\n    /* \"#utility.yul\":10825:10845   */\n  sub\n    /* \"#utility.yul\":10821:10822   */\n  0x00\n    /* \"#utility.yul\":10810:10819   */\n  dup4\n    /* \"#utility.yul\":10806:10823   */\n  add\n    /* \"#utility.yul\":10799:10846   */\n  mstore\n    /* \"#utility.yul\":10863:10994   */\n  tag_215\n    /* \"#utility.yul\":10989:10993   */\n  dup2\n    /* \"#utility.yul\":10863:10994   */\n  tag_88\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10855:10994   */\n  swap1\n  pop\n    /* \"#utility.yul\":10582:11001   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11007:11187   */\ntag_89:\n    /* \"#utility.yul\":11055:11132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11052:11053   */\n  0x00\n    /* \"#utility.yul\":11045:11133   */\n  mstore\n    /* \"#utility.yul\":11152:11156   */\n  0x11\n    /* \"#utility.yul\":11149:11150   */\n  0x04\n    /* \"#utility.yul\":11142:11157   */\n  mstore\n    /* \"#utility.yul\":11176:11180   */\n  0x24\n    /* \"#utility.yul\":11173:11174   */\n  0x00\n    /* \"#utility.yul\":11166:11181   */\n  revert\n    /* \"#utility.yul\":11193:11295   */\ntag_90:\n    /* \"#utility.yul\":11235:11243   */\n  0x00\n    /* \"#utility.yul\":11282:11287   */\n  dup2\n    /* \"#utility.yul\":11279:11280   */\n  0x01\n    /* \"#utility.yul\":11275:11288   */\n  shr\n    /* \"#utility.yul\":11254:11288   */\n  swap1\n  pop\n    /* \"#utility.yul\":11193:11295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11301:12149   */\ntag_91:\n    /* \"#utility.yul\":11362:11367   */\n  0x00\n    /* \"#utility.yul\":11369:11373   */\n  dup1\n    /* \"#utility.yul\":11393:11399   */\n  dup3\n    /* \"#utility.yul\":11384:11399   */\n  swap2\n  pop\n    /* \"#utility.yul\":11417:11422   */\n  dup4\n    /* \"#utility.yul\":11408:11422   */\n  swap1\n  pop\n    /* \"#utility.yul\":11431:12143   */\ntag_219:\n    /* \"#utility.yul\":11452:11453   */\n  0x01\n    /* \"#utility.yul\":11442:11450   */\n  dup6\n    /* \"#utility.yul\":11439:11454   */\n  gt\n    /* \"#utility.yul\":11431:12143   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":11547:11551   */\n  dup1\n    /* \"#utility.yul\":11542:11545   */\n  dup7\n    /* \"#utility.yul\":11538:11552   */\n  div\n    /* \"#utility.yul\":11532:11536   */\n  dup2\n    /* \"#utility.yul\":11529:11553   */\n  gt\n    /* \"#utility.yul\":11526:11576   */\n  iszero\n  tag_222\n  jumpi\n    /* \"#utility.yul\":11556:11574   */\n  tag_223\n  tag_89\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11526:11576   */\ntag_222:\n    /* \"#utility.yul\":11606:11607   */\n  0x01\n    /* \"#utility.yul\":11596:11604   */\n  dup6\n    /* \"#utility.yul\":11592:11608   */\n  and\n    /* \"#utility.yul\":11589:12040   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":12021:12025   */\n  dup1\n    /* \"#utility.yul\":12014:12019   */\n  dup3\n    /* \"#utility.yul\":12010:12026   */\n  mul\n    /* \"#utility.yul\":12001:12026   */\n  swap2\n  pop\n    /* \"#utility.yul\":11589:12040   */\ntag_224:\n    /* \"#utility.yul\":12071:12075   */\n  dup1\n    /* \"#utility.yul\":12065:12069   */\n  dup2\n    /* \"#utility.yul\":12061:12076   */\n  mul\n    /* \"#utility.yul\":12053:12076   */\n  swap1\n  pop\n    /* \"#utility.yul\":12101:12133   */\n  tag_225\n    /* \"#utility.yul\":12124:12132   */\n  dup6\n    /* \"#utility.yul\":12101:12133   */\n  tag_90\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":12089:12133   */\n  swap5\n  pop\n    /* \"#utility.yul\":11431:12143   */\n  jump(tag_219)\ntag_221:\n    /* \"#utility.yul\":11301:12149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12155:13228   */\ntag_92:\n    /* \"#utility.yul\":12209:12214   */\n  0x00\n    /* \"#utility.yul\":12400:12408   */\n  dup3\n    /* \"#utility.yul\":12390:12430   */\n  tag_227\n  jumpi\n    /* \"#utility.yul\":12421:12422   */\n  0x01\n    /* \"#utility.yul\":12412:12422   */\n  swap1\n  pop\n    /* \"#utility.yul\":12423:12428   */\n  jump(tag_226)\n    /* \"#utility.yul\":12390:12430   */\ntag_227:\n    /* \"#utility.yul\":12449:12453   */\n  dup2\n    /* \"#utility.yul\":12439:12475   */\n  tag_228\n  jumpi\n    /* \"#utility.yul\":12466:12467   */\n  0x00\n    /* \"#utility.yul\":12457:12467   */\n  swap1\n  pop\n    /* \"#utility.yul\":12468:12473   */\n  jump(tag_226)\n    /* \"#utility.yul\":12439:12475   */\ntag_228:\n    /* \"#utility.yul\":12535:12539   */\n  dup2\n    /* \"#utility.yul\":12583:12584   */\n  0x01\n    /* \"#utility.yul\":12578:12605   */\n  dup2\n  eq\n  tag_230\n  jumpi\n    /* \"#utility.yul\":12619:12620   */\n  0x02\n    /* \"#utility.yul\":12614:12805   */\n  dup2\n  eq\n  tag_231\n  jumpi\n    /* \"#utility.yul\":12528:12805   */\n  jump(tag_229)\n    /* \"#utility.yul\":12578:12605   */\ntag_230:\n    /* \"#utility.yul\":12596:12597   */\n  0x01\n    /* \"#utility.yul\":12587:12597   */\n  swap2\n  pop\n    /* \"#utility.yul\":12598:12603   */\n  pop\n  jump(tag_226)\n    /* \"#utility.yul\":12614:12805   */\ntag_231:\n    /* \"#utility.yul\":12659:12662   */\n  0xff\n    /* \"#utility.yul\":12649:12657   */\n  dup5\n    /* \"#utility.yul\":12646:12663   */\n  gt\n    /* \"#utility.yul\":12643:12686   */\n  iszero\n  tag_232\n  jumpi\n    /* \"#utility.yul\":12666:12684   */\n  tag_233\n  tag_89\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":12643:12686   */\ntag_232:\n    /* \"#utility.yul\":12715:12723   */\n  dup4\n    /* \"#utility.yul\":12712:12713   */\n  0x02\n    /* \"#utility.yul\":12708:12724   */\n  exp\n    /* \"#utility.yul\":12699:12724   */\n  swap2\n  pop\n    /* \"#utility.yul\":12750:12753   */\n  dup5\n    /* \"#utility.yul\":12743:12748   */\n  dup3\n    /* \"#utility.yul\":12740:12754   */\n  gt\n    /* \"#utility.yul\":12737:12777   */\n  iszero\n  tag_234\n  jumpi\n    /* \"#utility.yul\":12757:12775   */\n  tag_235\n  tag_89\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":12737:12777   */\ntag_234:\n    /* \"#utility.yul\":12790:12795   */\n  pop\n  jump(tag_226)\n    /* \"#utility.yul\":12528:12805   */\ntag_229:\n  pop\n    /* \"#utility.yul\":12914:12916   */\n  0x20\n    /* \"#utility.yul\":12904:12912   */\n  dup4\n    /* \"#utility.yul\":12901:12917   */\n  lt\n    /* \"#utility.yul\":12895:12898   */\n  0x0133\n    /* \"#utility.yul\":12889:12893   */\n  dup4\n    /* \"#utility.yul\":12886:12899   */\n  lt\n    /* \"#utility.yul\":12882:12918   */\n  and\n    /* \"#utility.yul\":12864:12866   */\n  0x4e\n    /* \"#utility.yul\":12854:12862   */\n  dup5\n    /* \"#utility.yul\":12851:12867   */\n  lt\n    /* \"#utility.yul\":12846:12848   */\n  0x0b\n    /* \"#utility.yul\":12840:12844   */\n  dup5\n    /* \"#utility.yul\":12837:12849   */\n  lt\n    /* \"#utility.yul\":12833:12868   */\n  and\n    /* \"#utility.yul\":12817:12928   */\n  or\n    /* \"#utility.yul\":12814:13060   */\n  iszero\n  tag_236\n  jumpi\n    /* \"#utility.yul\":12970:12978   */\n  dup3\n    /* \"#utility.yul\":12964:12968   */\n  dup3\n    /* \"#utility.yul\":12960:12979   */\n  exp\n    /* \"#utility.yul\":12951:12979   */\n  swap1\n  pop\n    /* \"#utility.yul\":13005:13008   */\n  dup4\n    /* \"#utility.yul\":12998:13003   */\n  dup2\n    /* \"#utility.yul\":12995:13009   */\n  gt\n    /* \"#utility.yul\":12992:13032   */\n  iszero\n  tag_237\n  jumpi\n    /* \"#utility.yul\":13012:13030   */\n  tag_238\n  tag_89\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12992:13032   */\ntag_237:\n    /* \"#utility.yul\":13045:13050   */\n  jump(tag_226)\n    /* \"#utility.yul\":12814:13060   */\ntag_236:\n    /* \"#utility.yul\":13085:13127   */\n  tag_239\n    /* \"#utility.yul\":13123:13126   */\n  dup5\n    /* \"#utility.yul\":13113:13121   */\n  dup5\n    /* \"#utility.yul\":13107:13111   */\n  dup5\n    /* \"#utility.yul\":13104:13105   */\n  0x01\n    /* \"#utility.yul\":13085:13127   */\n  tag_91\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":13070:13127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":13159:13163   */\n  dup2\n    /* \"#utility.yul\":13154:13157   */\n  dup5\n    /* \"#utility.yul\":13150:13164   */\n  div\n    /* \"#utility.yul\":13143:13148   */\n  dup2\n    /* \"#utility.yul\":13140:13165   */\n  gt\n    /* \"#utility.yul\":13137:13188   */\n  iszero\n  tag_240\n  jumpi\n    /* \"#utility.yul\":13168:13186   */\n  tag_241\n  tag_89\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":13137:13188   */\ntag_240:\n    /* \"#utility.yul\":13217:13221   */\n  dup2\n    /* \"#utility.yul\":13210:13215   */\n  dup2\n    /* \"#utility.yul\":13206:13222   */\n  mul\n    /* \"#utility.yul\":13197:13222   */\n  swap1\n  pop\n    /* \"#utility.yul\":12155:13228   */\ntag_226:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13234:13320   */\ntag_93:\n    /* \"#utility.yul\":13269:13276   */\n  0x00\n    /* \"#utility.yul\":13309:13313   */\n  0xff\n    /* \"#utility.yul\":13302:13307   */\n  dup3\n    /* \"#utility.yul\":13298:13314   */\n  and\n    /* \"#utility.yul\":13287:13314   */\n  swap1\n  pop\n    /* \"#utility.yul\":13234:13320   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13326:13607   */\ntag_25:\n    /* \"#utility.yul\":13384:13389   */\n  0x00\n    /* \"#utility.yul\":13408:13431   */\n  tag_244\n    /* \"#utility.yul\":13426:13430   */\n  dup3\n    /* \"#utility.yul\":13408:13431   */\n  tag_62\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":13400:13431   */\n  swap2\n  pop\n    /* \"#utility.yul\":13452:13477   */\n  tag_245\n    /* \"#utility.yul\":13468:13476   */\n  dup4\n    /* \"#utility.yul\":13452:13477   */\n  tag_93\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":13440:13477   */\n  swap3\n  pop\n    /* \"#utility.yul\":13496:13600   */\n  tag_246\n    /* \"#utility.yul\":13533:13599   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":13523:13531   */\n  dup5\n    /* \"#utility.yul\":13517:13521   */\n  dup5\n    /* \"#utility.yul\":13496:13600   */\n  tag_92\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":13487:13600   */\n  swap1\n  pop\n    /* \"#utility.yul\":13326:13607   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13613:14023   */\ntag_27:\n    /* \"#utility.yul\":13653:13660   */\n  0x00\n    /* \"#utility.yul\":13676:13696   */\n  tag_248\n    /* \"#utility.yul\":13694:13695   */\n  dup3\n    /* \"#utility.yul\":13676:13696   */\n  tag_62\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":13671:13696   */\n  swap2\n  pop\n    /* \"#utility.yul\":13710:13730   */\n  tag_249\n    /* \"#utility.yul\":13728:13729   */\n  dup4\n    /* \"#utility.yul\":13710:13730   */\n  tag_62\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":13705:13730   */\n  swap3\n  pop\n    /* \"#utility.yul\":13765:13766   */\n  dup3\n    /* \"#utility.yul\":13762:13763   */\n  dup3\n    /* \"#utility.yul\":13758:13767   */\n  mul\n    /* \"#utility.yul\":13787:13817   */\n  tag_250\n    /* \"#utility.yul\":13805:13816   */\n  dup2\n    /* \"#utility.yul\":13787:13817   */\n  tag_62\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":13776:13817   */\n  swap2\n  pop\n    /* \"#utility.yul\":13966:13967   */\n  dup3\n    /* \"#utility.yul\":13957:13964   */\n  dup3\n    /* \"#utility.yul\":13953:13968   */\n  div\n    /* \"#utility.yul\":13950:13951   */\n  dup5\n    /* \"#utility.yul\":13947:13969   */\n  eq\n    /* \"#utility.yul\":13927:13928   */\n  dup4\n    /* \"#utility.yul\":13920:13929   */\n  iszero\n    /* \"#utility.yul\":13900:13983   */\n  or\n    /* \"#utility.yul\":13877:14016   */\n  tag_251\n  jumpi\n    /* \"#utility.yul\":13996:14014   */\n  tag_252\n  tag_89\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13877:14016   */\ntag_251:\n    /* \"#utility.yul\":13661:14023   */\n  pop\n    /* \"#utility.yul\":13613:14023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14029:14220   */\ntag_40:\n    /* \"#utility.yul\":14069:14072   */\n  0x00\n    /* \"#utility.yul\":14088:14108   */\n  tag_254\n    /* \"#utility.yul\":14106:14107   */\n  dup3\n    /* \"#utility.yul\":14088:14108   */\n  tag_62\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":14083:14108   */\n  swap2\n  pop\n    /* \"#utility.yul\":14122:14142   */\n  tag_255\n    /* \"#utility.yul\":14140:14141   */\n  dup4\n    /* \"#utility.yul\":14122:14142   */\n  tag_62\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":14117:14142   */\n  swap3\n  pop\n    /* \"#utility.yul\":14165:14166   */\n  dup3\n    /* \"#utility.yul\":14162:14163   */\n  dup3\n    /* \"#utility.yul\":14158:14167   */\n  add\n    /* \"#utility.yul\":14151:14167   */\n  swap1\n  pop\n    /* \"#utility.yul\":14186:14189   */\n  dup1\n    /* \"#utility.yul\":14183:14184   */\n  dup3\n    /* \"#utility.yul\":14180:14190   */\n  gt\n    /* \"#utility.yul\":14177:14213   */\n  iszero\n  tag_256\n  jumpi\n    /* \"#utility.yul\":14193:14211   */\n  tag_257\n  tag_89\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":14177:14213   */\ntag_256:\n    /* \"#utility.yul\":14029:14220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14226:14344   */\ntag_94:\n    /* \"#utility.yul\":14313:14337   */\n  tag_259\n    /* \"#utility.yul\":14331:14336   */\n  dup2\n    /* \"#utility.yul\":14313:14337   */\n  tag_62\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":14308:14311   */\n  dup3\n    /* \"#utility.yul\":14301:14338   */\n  mstore\n    /* \"#utility.yul\":14226:14344   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14350:14792   */\ntag_44:\n    /* \"#utility.yul\":14499:14503   */\n  0x00\n    /* \"#utility.yul\":14537:14539   */\n  0x60\n    /* \"#utility.yul\":14526:14535   */\n  dup3\n    /* \"#utility.yul\":14522:14540   */\n  add\n    /* \"#utility.yul\":14514:14540   */\n  swap1\n  pop\n    /* \"#utility.yul\":14550:14621   */\n  tag_261\n    /* \"#utility.yul\":14618:14619   */\n  0x00\n    /* \"#utility.yul\":14607:14616   */\n  dup4\n    /* \"#utility.yul\":14603:14620   */\n  add\n    /* \"#utility.yul\":14594:14600   */\n  dup7\n    /* \"#utility.yul\":14550:14621   */\n  tag_85\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":14631:14703   */\n  tag_262\n    /* \"#utility.yul\":14699:14701   */\n  0x20\n    /* \"#utility.yul\":14688:14697   */\n  dup4\n    /* \"#utility.yul\":14684:14702   */\n  add\n    /* \"#utility.yul\":14675:14681   */\n  dup6\n    /* \"#utility.yul\":14631:14703   */\n  tag_94\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":14713:14785   */\n  tag_263\n    /* \"#utility.yul\":14781:14783   */\n  0x40\n    /* \"#utility.yul\":14770:14779   */\n  dup4\n    /* \"#utility.yul\":14766:14784   */\n  add\n    /* \"#utility.yul\":14757:14763   */\n  dup5\n    /* \"#utility.yul\":14713:14785   */\n  tag_94\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":14350:14792   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14798:15020   */\ntag_48:\n    /* \"#utility.yul\":14891:14895   */\n  0x00\n    /* \"#utility.yul\":14929:14931   */\n  0x20\n    /* \"#utility.yul\":14918:14927   */\n  dup3\n    /* \"#utility.yul\":14914:14932   */\n  add\n    /* \"#utility.yul\":14906:14932   */\n  swap1\n  pop\n    /* \"#utility.yul\":14942:15013   */\n  tag_265\n    /* \"#utility.yul\":15010:15011   */\n  0x00\n    /* \"#utility.yul\":14999:15008   */\n  dup4\n    /* \"#utility.yul\":14995:15012   */\n  add\n    /* \"#utility.yul\":14986:14992   */\n  dup5\n    /* \"#utility.yul\":14942:15013   */\n  tag_94\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":14798:15020   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":315:3783  contract MyToken is ERC20, Ownable {... */\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":315:3783  contract MyToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ff9b596\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd0febe4c\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe086e5ec\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe4b7fb73\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x7ff9b596\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x40c10f19\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5f515226\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6a61e5fc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1563:1749  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/MyToken.sol\":3231:3342  function checkBalance(address account) public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":2925:3087  function setTokenPrice(uint256 _newPrice) public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/MyToken.sol\":2419:2534  function getContractBalance() public view onlyOwner returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/MyToken.sol\":399:424  uint256 public tokenPrice */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":3441:3534  function getTotalSupply() public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1814:2336  function buyTokens() public payable {... */\n    tag_18:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/MyToken.sol\":463:487  uint256 public maxSupply */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":2618:2796  function withdrawETH() public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      stop\n        /* \"contracts/MyToken.sol\":3653:3781  function getRemainingSupply() public view returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_129\n      jump\t// in\n    tag_130:\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1563:1749  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/MyToken.sol\":1682:1692  decimals() */\n      tag_151\n        /* \"contracts/MyToken.sol\":1682:1690  decimals */\n      tag_52\n        /* \"contracts/MyToken.sol\":1682:1692  decimals() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/MyToken.sol\":1678:1680  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":1678:1692  10**decimals() */\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"contracts/MyToken.sol\":1666:1675  maxSupply */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":1666:1692  maxSupply * 10**decimals() */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/MyToken.sol\":1656:1662  amount */\n      dup2\n        /* \"contracts/MyToken.sol\":1640:1653  totalSupply() */\n      tag_156\n        /* \"contracts/MyToken.sol\":1640:1651  totalSupply */\n      tag_41\n        /* \"contracts/MyToken.sol\":1640:1653  totalSupply() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/MyToken.sol\":1640:1662  totalSupply() + amount */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/MyToken.sol\":1640:1692  totalSupply() + amount <= maxSupply * 10**decimals() */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":1632:1715  require(totalSupply() + amount <= maxSupply * 10**decimals(), \"Exceeds max supply\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/MyToken.sol\":1725:1742  _mint(to, amount) */\n      tag_162\n        /* \"contracts/MyToken.sol\":1731:1733  to */\n      dup3\n        /* \"contracts/MyToken.sol\":1735:1741  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":1725:1730  _mint */\n      tag_163\n        /* \"contracts/MyToken.sol\":1725:1742  _mint(to, amount) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/MyToken.sol\":1563:1749  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3231:3342  function checkBalance(address account) public view returns (uint256) {... */\n    tag_63:\n        /* \"contracts/MyToken.sol\":3291:3298  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":3317:3335  balanceOf(account) */\n      tag_165\n        /* \"contracts/MyToken.sol\":3327:3334  account */\n      dup3\n        /* \"contracts/MyToken.sol\":3317:3326  balanceOf */\n      tag_77\n        /* \"contracts/MyToken.sol\":3317:3335  balanceOf(account) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/MyToken.sol\":3310:3335  return balanceOf(account) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3231:3342  function checkBalance(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2925:3087  function setTokenPrice(uint256 _newPrice) public onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/MyToken.sol\":3014:3015  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":3002:3011  _newPrice */\n      dup2\n        /* \"contracts/MyToken.sol\":3002:3015  _newPrice > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":2994:3048  require(_newPrice > 0, \"Price must be greater than 0\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/MyToken.sol\":3071:3080  _newPrice */\n      dup1\n        /* \"contracts/MyToken.sol\":3058:3068  tokenPrice */\n      0x06\n        /* \"contracts/MyToken.sol\":3058:3080  tokenPrice = _newPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2925:3087  function setTokenPrice(uint256 _newPrice) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2419:2534  function getContractBalance() public view onlyOwner returns (uint256) {... */\n    tag_72:\n        /* \"contracts/MyToken.sol\":2480:2487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/MyToken.sol\":2506:2527  address(this).balance */\n      selfbalance\n        /* \"contracts/MyToken.sol\":2499:2527  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2419:2534  function getContractBalance() public view onlyOwner returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":399:424  uint256 public tokenPrice */\n    tag_84:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_129\n      jump\t// in\n    tag_183:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_184\n      swap1\n      tag_129\n      jump\t// in\n    tag_184:\n      dup1\n      iszero\n      tag_185\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_186\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_185)\n    tag_186:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_187:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_187\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3441:3534  function getTotalSupply() public view returns (uint256) {... */\n    tag_102:\n        /* \"contracts/MyToken.sol\":3488:3495  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":3514:3527  totalSupply() */\n      tag_192\n        /* \"contracts/MyToken.sol\":3514:3525  totalSupply */\n      tag_41\n        /* \"contracts/MyToken.sol\":3514:3527  totalSupply() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/MyToken.sol\":3507:3527  return totalSupply() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3441:3534  function getTotalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1814:2336  function buyTokens() public payable {... */\n    tag_105:\n        /* \"contracts/MyToken.sol\":1880:1881  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1868:1877  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":1868:1881  msg.value > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":1860:1908  require(msg.value > 0, \"Send ETH to buy tokens\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/MyToken.sol\":1966:1985  uint256 tokenAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":2000:2010  tokenPrice */\n      sload(0x06)\n        /* \"contracts/MyToken.sol\":1988:1997  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":1988:2010  msg.value * tokenPrice */\n      tag_197\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_197:\n        /* \"contracts/MyToken.sol\":1966:2010  uint256 tokenAmount = msg.value * tokenPrice */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2119:2129  decimals() */\n      tag_198\n        /* \"contracts/MyToken.sol\":2119:2127  decimals */\n      tag_52\n        /* \"contracts/MyToken.sol\":2119:2129  decimals() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/MyToken.sol\":2115:2117  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":2115:2129  10**decimals() */\n      tag_199\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_199:\n        /* \"contracts/MyToken.sol\":2103:2112  maxSupply */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":2103:2129  maxSupply * 10**decimals() */\n      tag_200\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_200:\n        /* \"contracts/MyToken.sol\":2088:2099  tokenAmount */\n      dup2\n        /* \"contracts/MyToken.sol\":2072:2085  totalSupply() */\n      tag_201\n        /* \"contracts/MyToken.sol\":2072:2083  totalSupply */\n      tag_41\n        /* \"contracts/MyToken.sol\":2072:2085  totalSupply() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/MyToken.sol\":2072:2099  totalSupply() + tokenAmount */\n      tag_202\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_202:\n        /* \"contracts/MyToken.sol\":2072:2129  totalSupply() + tokenAmount <= maxSupply * 10**decimals() */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":2064:2152  require(totalSupply() + tokenAmount <= maxSupply * 10**decimals(), \"Exceeds max supply\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_161\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/MyToken.sol\":2196:2226  _mint(msg.sender, tokenAmount) */\n      tag_205\n        /* \"contracts/MyToken.sol\":2202:2212  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2214:2225  tokenAmount */\n      dup3\n        /* \"contracts/MyToken.sol\":2196:2201  _mint */\n      tag_163\n        /* \"contracts/MyToken.sol\":2196:2226  _mint(msg.sender, tokenAmount) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/MyToken.sol\":2294:2304  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2278:2329  TokensPurchased(msg.sender, msg.value, tokenAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33\n        /* \"contracts/MyToken.sol\":2306:2315  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":2317:2328  tokenAmount */\n      dup4\n        /* \"contracts/MyToken.sol\":2278:2329  TokensPurchased(msg.sender, msg.value, tokenAmount) */\n      mload(0x40)\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MyToken.sol\":1850:2336  {... */\n      pop\n        /* \"contracts/MyToken.sol\":1814:2336  function buyTokens() public payable {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":463:487  uint256 public maxSupply */\n    tag_108:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2618:2796  function withdrawETH() public onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"contracts/MyToken.sol\":2669:2681  bool success */\n      0x00\n        /* \"contracts/MyToken.sol\":2695:2702  owner() */\n      tag_212\n        /* \"contracts/MyToken.sol\":2695:2700  owner */\n      tag_88\n        /* \"contracts/MyToken.sol\":2695:2702  owner() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/MyToken.sol\":2687:2708  payable(owner()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2716:2737  address(this).balance */\n      selfbalance\n        /* \"contracts/MyToken.sol\":2687:2742  payable(owner()).call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_217\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_216)\n    tag_217:\n      0x60\n      swap2\n      pop\n    tag_216:\n      pop\n        /* \"contracts/MyToken.sol\":2668:2742  (bool success, ) = payable(owner()).call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2760:2767  success */\n      dup1\n        /* \"contracts/MyToken.sol\":2752:2789  require(success, \"Withdrawal failed\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/MyToken.sol\":2658:2796  {... */\n      pop\n        /* \"contracts/MyToken.sol\":2618:2796  function withdrawETH() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3653:3781  function getRemainingSupply() public view returns (uint256) {... */\n    tag_121:\n        /* \"contracts/MyToken.sol\":3704:3711  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":3761:3774  totalSupply() */\n      tag_222\n        /* \"contracts/MyToken.sol\":3761:3772  totalSupply */\n      tag_41\n        /* \"contracts/MyToken.sol\":3761:3774  totalSupply() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/MyToken.sol\":3747:3757  decimals() */\n      tag_223\n        /* \"contracts/MyToken.sol\":3747:3755  decimals */\n      tag_52\n        /* \"contracts/MyToken.sol\":3747:3757  decimals() */\n      jump\t// in\n    tag_223:\n        /* \"contracts/MyToken.sol\":3743:3745  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":3743:3757  10**decimals() */\n      tag_224\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_224:\n        /* \"contracts/MyToken.sol\":3731:3740  maxSupply */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":3731:3757  maxSupply * 10**decimals() */\n      tag_225\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_225:\n        /* \"contracts/MyToken.sol\":3730:3774  (maxSupply * 10**decimals()) - totalSupply() */\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"contracts/MyToken.sol\":3723:3774  return (maxSupply * 10**decimals()) - totalSupply() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3653:3781  function getRemainingSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_269\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_272:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_273)\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_277)\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_278\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_279:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_280:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_281:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_282:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_283:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_322\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_279\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":711:782   */\n      tag_323\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_280\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_324\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_281\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":881:910   */\n      tag_325\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_282\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_31:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_327\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_283\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_285:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_287:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_288:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_333\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_287\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_289:\n        /* \"#utility.yul\":1876:1900   */\n      tag_335\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_288\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_336:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_290:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_338\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_289\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_291:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_292:\n        /* \"#utility.yul\":2232:2256   */\n      tag_341\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_291\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_342:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_293:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_344\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_292\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_35:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_347\n      tag_285\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2525:2644   */\n    tag_346:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_348\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_290\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_349\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_293\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_294:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_295:\n        /* \"#utility.yul\":3089:3110   */\n      tag_352\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_294\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_38:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_354\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_295\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_296:\n        /* \"#utility.yul\":3426:3450   */\n      tag_356\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_291\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_43:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_358\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_296\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_47:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_361\n      tag_285\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3801:3920   */\n    tag_360:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_362\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_290\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_363\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_290\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_364\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_293\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_297:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_298:\n        /* \"#utility.yul\":4491:4513   */\n      tag_367\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_297\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_54:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_369\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_298\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_62:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_372\n      tag_285\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4822:4941   */\n    tag_371:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_373\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_290\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_68:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_376\n      tag_285\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5157:5276   */\n    tag_375:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_377\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_293\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_299:\n        /* \"#utility.yul\":5503:5527   */\n      tag_379\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_288\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_90:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_381\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_299\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_113:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_384\n      tag_285\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5861:5980   */\n    tag_383:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_385\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_290\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_386\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_290\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_300:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_129:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_389:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_391\n      tag_300\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6664:6748   */\n    tag_390:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6940   */\n    tag_301:\n        /* \"#utility.yul\":6808:6885   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6798:6886   */\n      mstore\n        /* \"#utility.yul\":6905:6909   */\n      0x11\n        /* \"#utility.yul\":6902:6903   */\n      0x04\n        /* \"#utility.yul\":6895:6910   */\n      mstore\n        /* \"#utility.yul\":6929:6933   */\n      0x24\n        /* \"#utility.yul\":6926:6927   */\n      0x00\n        /* \"#utility.yul\":6919:6934   */\n      revert\n        /* \"#utility.yul\":6946:7048   */\n    tag_302:\n        /* \"#utility.yul\":6988:6996   */\n      0x00\n        /* \"#utility.yul\":7035:7040   */\n      dup2\n        /* \"#utility.yul\":7032:7033   */\n      0x01\n        /* \"#utility.yul\":7028:7041   */\n      shr\n        /* \"#utility.yul\":7007:7041   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7054:7902   */\n    tag_303:\n        /* \"#utility.yul\":7115:7120   */\n      0x00\n        /* \"#utility.yul\":7122:7126   */\n      dup1\n        /* \"#utility.yul\":7146:7152   */\n      dup3\n        /* \"#utility.yul\":7137:7152   */\n      swap2\n      pop\n        /* \"#utility.yul\":7170:7175   */\n      dup4\n        /* \"#utility.yul\":7161:7175   */\n      swap1\n      pop\n        /* \"#utility.yul\":7184:7896   */\n    tag_395:\n        /* \"#utility.yul\":7205:7206   */\n      0x01\n        /* \"#utility.yul\":7195:7203   */\n      dup6\n        /* \"#utility.yul\":7192:7207   */\n      gt\n        /* \"#utility.yul\":7184:7896   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7300:7304   */\n      dup1\n        /* \"#utility.yul\":7295:7298   */\n      dup7\n        /* \"#utility.yul\":7291:7305   */\n      div\n        /* \"#utility.yul\":7285:7289   */\n      dup2\n        /* \"#utility.yul\":7282:7306   */\n      gt\n        /* \"#utility.yul\":7279:7329   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":7309:7327   */\n      tag_399\n      tag_301\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7279:7329   */\n    tag_398:\n        /* \"#utility.yul\":7359:7360   */\n      0x01\n        /* \"#utility.yul\":7349:7357   */\n      dup6\n        /* \"#utility.yul\":7345:7361   */\n      and\n        /* \"#utility.yul\":7342:7793   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7774:7778   */\n      dup1\n        /* \"#utility.yul\":7767:7772   */\n      dup3\n        /* \"#utility.yul\":7763:7779   */\n      mul\n        /* \"#utility.yul\":7754:7779   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7793   */\n    tag_400:\n        /* \"#utility.yul\":7824:7828   */\n      dup1\n        /* \"#utility.yul\":7818:7822   */\n      dup2\n        /* \"#utility.yul\":7814:7829   */\n      mul\n        /* \"#utility.yul\":7806:7829   */\n      swap1\n      pop\n        /* \"#utility.yul\":7854:7886   */\n      tag_401\n        /* \"#utility.yul\":7877:7885   */\n      dup6\n        /* \"#utility.yul\":7854:7886   */\n      tag_302\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7842:7886   */\n      swap5\n      pop\n        /* \"#utility.yul\":7184:7896   */\n      jump(tag_395)\n    tag_397:\n        /* \"#utility.yul\":7054:7902   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7908:8981   */\n    tag_304:\n        /* \"#utility.yul\":7962:7967   */\n      0x00\n        /* \"#utility.yul\":8153:8161   */\n      dup3\n        /* \"#utility.yul\":8143:8183   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":8174:8175   */\n      0x01\n        /* \"#utility.yul\":8165:8175   */\n      swap1\n      pop\n        /* \"#utility.yul\":8176:8181   */\n      jump(tag_402)\n        /* \"#utility.yul\":8143:8183   */\n    tag_403:\n        /* \"#utility.yul\":8202:8206   */\n      dup2\n        /* \"#utility.yul\":8192:8228   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":8219:8220   */\n      0x00\n        /* \"#utility.yul\":8210:8220   */\n      swap1\n      pop\n        /* \"#utility.yul\":8221:8226   */\n      jump(tag_402)\n        /* \"#utility.yul\":8192:8228   */\n    tag_404:\n        /* \"#utility.yul\":8288:8292   */\n      dup2\n        /* \"#utility.yul\":8336:8337   */\n      0x01\n        /* \"#utility.yul\":8331:8358   */\n      dup2\n      eq\n      tag_406\n      jumpi\n        /* \"#utility.yul\":8372:8373   */\n      0x02\n        /* \"#utility.yul\":8367:8558   */\n      dup2\n      eq\n      tag_407\n      jumpi\n        /* \"#utility.yul\":8281:8558   */\n      jump(tag_405)\n        /* \"#utility.yul\":8331:8358   */\n    tag_406:\n        /* \"#utility.yul\":8349:8350   */\n      0x01\n        /* \"#utility.yul\":8340:8350   */\n      swap2\n      pop\n        /* \"#utility.yul\":8351:8356   */\n      pop\n      jump(tag_402)\n        /* \"#utility.yul\":8367:8558   */\n    tag_407:\n        /* \"#utility.yul\":8412:8415   */\n      0xff\n        /* \"#utility.yul\":8402:8410   */\n      dup5\n        /* \"#utility.yul\":8399:8416   */\n      gt\n        /* \"#utility.yul\":8396:8439   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8419:8437   */\n      tag_409\n      tag_301\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8396:8439   */\n    tag_408:\n        /* \"#utility.yul\":8468:8476   */\n      dup4\n        /* \"#utility.yul\":8465:8466   */\n      0x02\n        /* \"#utility.yul\":8461:8477   */\n      exp\n        /* \"#utility.yul\":8452:8477   */\n      swap2\n      pop\n        /* \"#utility.yul\":8503:8506   */\n      dup5\n        /* \"#utility.yul\":8496:8501   */\n      dup3\n        /* \"#utility.yul\":8493:8507   */\n      gt\n        /* \"#utility.yul\":8490:8530   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8510:8528   */\n      tag_411\n      tag_301\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8490:8530   */\n    tag_410:\n        /* \"#utility.yul\":8543:8548   */\n      pop\n      jump(tag_402)\n        /* \"#utility.yul\":8281:8558   */\n    tag_405:\n      pop\n        /* \"#utility.yul\":8667:8669   */\n      0x20\n        /* \"#utility.yul\":8657:8665   */\n      dup4\n        /* \"#utility.yul\":8654:8670   */\n      lt\n        /* \"#utility.yul\":8648:8651   */\n      0x0133\n        /* \"#utility.yul\":8642:8646   */\n      dup4\n        /* \"#utility.yul\":8639:8652   */\n      lt\n        /* \"#utility.yul\":8635:8671   */\n      and\n        /* \"#utility.yul\":8617:8619   */\n      0x4e\n        /* \"#utility.yul\":8607:8615   */\n      dup5\n        /* \"#utility.yul\":8604:8620   */\n      lt\n        /* \"#utility.yul\":8599:8601   */\n      0x0b\n        /* \"#utility.yul\":8593:8597   */\n      dup5\n        /* \"#utility.yul\":8590:8602   */\n      lt\n        /* \"#utility.yul\":8586:8621   */\n      and\n        /* \"#utility.yul\":8570:8681   */\n      or\n        /* \"#utility.yul\":8567:8813   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":8723:8731   */\n      dup3\n        /* \"#utility.yul\":8717:8721   */\n      dup3\n        /* \"#utility.yul\":8713:8732   */\n      exp\n        /* \"#utility.yul\":8704:8732   */\n      swap1\n      pop\n        /* \"#utility.yul\":8758:8761   */\n      dup4\n        /* \"#utility.yul\":8751:8756   */\n      dup2\n        /* \"#utility.yul\":8748:8762   */\n      gt\n        /* \"#utility.yul\":8745:8785   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":8765:8783   */\n      tag_414\n      tag_301\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8745:8785   */\n    tag_413:\n        /* \"#utility.yul\":8798:8803   */\n      jump(tag_402)\n        /* \"#utility.yul\":8567:8813   */\n    tag_412:\n        /* \"#utility.yul\":8838:8880   */\n      tag_415\n        /* \"#utility.yul\":8876:8879   */\n      dup5\n        /* \"#utility.yul\":8866:8874   */\n      dup5\n        /* \"#utility.yul\":8860:8864   */\n      dup5\n        /* \"#utility.yul\":8857:8858   */\n      0x01\n        /* \"#utility.yul\":8838:8880   */\n      tag_303\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8823:8880   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8912:8916   */\n      dup2\n        /* \"#utility.yul\":8907:8910   */\n      dup5\n        /* \"#utility.yul\":8903:8917   */\n      div\n        /* \"#utility.yul\":8896:8901   */\n      dup2\n        /* \"#utility.yul\":8893:8918   */\n      gt\n        /* \"#utility.yul\":8890:8941   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8921:8939   */\n      tag_417\n      tag_301\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8890:8941   */\n    tag_416:\n        /* \"#utility.yul\":8970:8974   */\n      dup2\n        /* \"#utility.yul\":8963:8968   */\n      dup2\n        /* \"#utility.yul\":8959:8975   */\n      mul\n        /* \"#utility.yul\":8950:8975   */\n      swap1\n      pop\n        /* \"#utility.yul\":7908:8981   */\n    tag_402:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8987:9268   */\n    tag_153:\n        /* \"#utility.yul\":9045:9050   */\n      0x00\n        /* \"#utility.yul\":9069:9092   */\n      tag_419\n        /* \"#utility.yul\":9087:9091   */\n      dup3\n        /* \"#utility.yul\":9069:9092   */\n      tag_291\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9061:9092   */\n      swap2\n      pop\n        /* \"#utility.yul\":9113:9138   */\n      tag_420\n        /* \"#utility.yul\":9129:9137   */\n      dup4\n        /* \"#utility.yul\":9113:9138   */\n      tag_297\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9101:9138   */\n      swap3\n      pop\n        /* \"#utility.yul\":9157:9261   */\n      tag_421\n        /* \"#utility.yul\":9194:9260   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9184:9192   */\n      dup5\n        /* \"#utility.yul\":9178:9182   */\n      dup5\n        /* \"#utility.yul\":9157:9261   */\n      tag_304\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9148:9261   */\n      swap1\n      pop\n        /* \"#utility.yul\":8987:9268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9274:9684   */\n    tag_155:\n        /* \"#utility.yul\":9314:9321   */\n      0x00\n        /* \"#utility.yul\":9337:9357   */\n      tag_423\n        /* \"#utility.yul\":9355:9356   */\n      dup3\n        /* \"#utility.yul\":9337:9357   */\n      tag_291\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9332:9357   */\n      swap2\n      pop\n        /* \"#utility.yul\":9371:9391   */\n      tag_424\n        /* \"#utility.yul\":9389:9390   */\n      dup4\n        /* \"#utility.yul\":9371:9391   */\n      tag_291\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9366:9391   */\n      swap3\n      pop\n        /* \"#utility.yul\":9426:9427   */\n      dup3\n        /* \"#utility.yul\":9423:9424   */\n      dup3\n        /* \"#utility.yul\":9419:9428   */\n      mul\n        /* \"#utility.yul\":9448:9478   */\n      tag_425\n        /* \"#utility.yul\":9466:9477   */\n      dup2\n        /* \"#utility.yul\":9448:9478   */\n      tag_291\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9437:9478   */\n      swap2\n      pop\n        /* \"#utility.yul\":9627:9628   */\n      dup3\n        /* \"#utility.yul\":9618:9625   */\n      dup3\n        /* \"#utility.yul\":9614:9629   */\n      div\n        /* \"#utility.yul\":9611:9612   */\n      dup5\n        /* \"#utility.yul\":9608:9630   */\n      eq\n        /* \"#utility.yul\":9588:9589   */\n      dup4\n        /* \"#utility.yul\":9581:9590   */\n      iszero\n        /* \"#utility.yul\":9561:9644   */\n      or\n        /* \"#utility.yul\":9538:9677   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":9657:9675   */\n      tag_427\n      tag_301\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9538:9677   */\n    tag_426:\n        /* \"#utility.yul\":9322:9684   */\n      pop\n        /* \"#utility.yul\":9274:9684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9690:9881   */\n    tag_158:\n        /* \"#utility.yul\":9730:9733   */\n      0x00\n        /* \"#utility.yul\":9749:9769   */\n      tag_429\n        /* \"#utility.yul\":9767:9768   */\n      dup3\n        /* \"#utility.yul\":9749:9769   */\n      tag_291\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9744:9769   */\n      swap2\n      pop\n        /* \"#utility.yul\":9783:9803   */\n      tag_430\n        /* \"#utility.yul\":9801:9802   */\n      dup4\n        /* \"#utility.yul\":9783:9803   */\n      tag_291\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9778:9803   */\n      swap3\n      pop\n        /* \"#utility.yul\":9826:9827   */\n      dup3\n        /* \"#utility.yul\":9823:9824   */\n      dup3\n        /* \"#utility.yul\":9819:9828   */\n      add\n        /* \"#utility.yul\":9812:9828   */\n      swap1\n      pop\n        /* \"#utility.yul\":9847:9850   */\n      dup1\n        /* \"#utility.yul\":9844:9845   */\n      dup3\n        /* \"#utility.yul\":9841:9851   */\n      gt\n        /* \"#utility.yul\":9838:9874   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":9854:9872   */\n      tag_432\n      tag_301\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9838:9874   */\n    tag_431:\n        /* \"#utility.yul\":9690:9881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9887:10055   */\n    tag_305:\n        /* \"#utility.yul\":10027:10047   */\n      0x45786365656473206d617820737570706c790000000000000000000000000000\n        /* \"#utility.yul\":10023:10024   */\n      0x00\n        /* \"#utility.yul\":10015:10021   */\n      dup3\n        /* \"#utility.yul\":10011:10025   */\n      add\n        /* \"#utility.yul\":10004:10048   */\n      mstore\n        /* \"#utility.yul\":9887:10055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10061:10427   */\n    tag_306:\n        /* \"#utility.yul\":10203:10206   */\n      0x00\n        /* \"#utility.yul\":10224:10291   */\n      tag_435\n        /* \"#utility.yul\":10288:10290   */\n      0x12\n        /* \"#utility.yul\":10283:10286   */\n      dup4\n        /* \"#utility.yul\":10224:10291   */\n      tag_280\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10217:10291   */\n      swap2\n      pop\n        /* \"#utility.yul\":10300:10393   */\n      tag_436\n        /* \"#utility.yul\":10389:10392   */\n      dup3\n        /* \"#utility.yul\":10300:10393   */\n      tag_305\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10418:10420   */\n      0x20\n        /* \"#utility.yul\":10413:10416   */\n      dup3\n        /* \"#utility.yul\":10409:10421   */\n      add\n        /* \"#utility.yul\":10402:10421   */\n      swap1\n      pop\n        /* \"#utility.yul\":10061:10427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10433:10852   */\n    tag_161:\n        /* \"#utility.yul\":10599:10603   */\n      0x00\n        /* \"#utility.yul\":10637:10639   */\n      0x20\n        /* \"#utility.yul\":10626:10635   */\n      dup3\n        /* \"#utility.yul\":10622:10640   */\n      add\n        /* \"#utility.yul\":10614:10640   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:10695   */\n      dup2\n        /* \"#utility.yul\":10680:10684   */\n      dup2\n        /* \"#utility.yul\":10676:10696   */\n      sub\n        /* \"#utility.yul\":10672:10673   */\n      0x00\n        /* \"#utility.yul\":10661:10670   */\n      dup4\n        /* \"#utility.yul\":10657:10674   */\n      add\n        /* \"#utility.yul\":10650:10697   */\n      mstore\n        /* \"#utility.yul\":10714:10845   */\n      tag_438\n        /* \"#utility.yul\":10840:10844   */\n      dup2\n        /* \"#utility.yul\":10714:10845   */\n      tag_306\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10706:10845   */\n      swap1\n      pop\n        /* \"#utility.yul\":10433:10852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10858:11036   */\n    tag_307:\n        /* \"#utility.yul\":10998:11028   */\n      0x5072696365206d7573742062652067726561746572207468616e203000000000\n        /* \"#utility.yul\":10994:10995   */\n      0x00\n        /* \"#utility.yul\":10986:10992   */\n      dup3\n        /* \"#utility.yul\":10982:10996   */\n      add\n        /* \"#utility.yul\":10975:11029   */\n      mstore\n        /* \"#utility.yul\":10858:11036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11042:11408   */\n    tag_308:\n        /* \"#utility.yul\":11184:11187   */\n      0x00\n        /* \"#utility.yul\":11205:11272   */\n      tag_441\n        /* \"#utility.yul\":11269:11271   */\n      0x1c\n        /* \"#utility.yul\":11264:11267   */\n      dup4\n        /* \"#utility.yul\":11205:11272   */\n      tag_280\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11198:11272   */\n      swap2\n      pop\n        /* \"#utility.yul\":11281:11374   */\n      tag_442\n        /* \"#utility.yul\":11370:11373   */\n      dup3\n        /* \"#utility.yul\":11281:11374   */\n      tag_307\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11399:11401   */\n      0x20\n        /* \"#utility.yul\":11394:11397   */\n      dup3\n        /* \"#utility.yul\":11390:11402   */\n      add\n        /* \"#utility.yul\":11383:11402   */\n      swap1\n      pop\n        /* \"#utility.yul\":11042:11408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11414:11833   */\n    tag_171:\n        /* \"#utility.yul\":11580:11584   */\n      0x00\n        /* \"#utility.yul\":11618:11620   */\n      0x20\n        /* \"#utility.yul\":11607:11616   */\n      dup3\n        /* \"#utility.yul\":11603:11621   */\n      add\n        /* \"#utility.yul\":11595:11621   */\n      swap1\n      pop\n        /* \"#utility.yul\":11667:11676   */\n      dup2\n        /* \"#utility.yul\":11661:11665   */\n      dup2\n        /* \"#utility.yul\":11657:11677   */\n      sub\n        /* \"#utility.yul\":11653:11654   */\n      0x00\n        /* \"#utility.yul\":11642:11651   */\n      dup4\n        /* \"#utility.yul\":11638:11655   */\n      add\n        /* \"#utility.yul\":11631:11678   */\n      mstore\n        /* \"#utility.yul\":11695:11826   */\n      tag_444\n        /* \"#utility.yul\":11821:11825   */\n      dup2\n        /* \"#utility.yul\":11695:11826   */\n      tag_308\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11687:11826   */\n      swap1\n      pop\n        /* \"#utility.yul\":11414:11833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11839:12011   */\n    tag_309:\n        /* \"#utility.yul\":11979:12003   */\n      0x53656e642045544820746f2062757920746f6b656e7300000000000000000000\n        /* \"#utility.yul\":11975:11976   */\n      0x00\n        /* \"#utility.yul\":11967:11973   */\n      dup3\n        /* \"#utility.yul\":11963:11977   */\n      add\n        /* \"#utility.yul\":11956:12004   */\n      mstore\n        /* \"#utility.yul\":11839:12011   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12017:12383   */\n    tag_310:\n        /* \"#utility.yul\":12159:12162   */\n      0x00\n        /* \"#utility.yul\":12180:12247   */\n      tag_447\n        /* \"#utility.yul\":12244:12246   */\n      0x16\n        /* \"#utility.yul\":12239:12242   */\n      dup4\n        /* \"#utility.yul\":12180:12247   */\n      tag_280\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12173:12247   */\n      swap2\n      pop\n        /* \"#utility.yul\":12256:12349   */\n      tag_448\n        /* \"#utility.yul\":12345:12348   */\n      dup3\n        /* \"#utility.yul\":12256:12349   */\n      tag_309\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12374:12376   */\n      0x20\n        /* \"#utility.yul\":12369:12372   */\n      dup3\n        /* \"#utility.yul\":12365:12377   */\n      add\n        /* \"#utility.yul\":12358:12377   */\n      swap1\n      pop\n        /* \"#utility.yul\":12017:12383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12389:12808   */\n    tag_196:\n        /* \"#utility.yul\":12555:12559   */\n      0x00\n        /* \"#utility.yul\":12593:12595   */\n      0x20\n        /* \"#utility.yul\":12582:12591   */\n      dup3\n        /* \"#utility.yul\":12578:12596   */\n      add\n        /* \"#utility.yul\":12570:12596   */\n      swap1\n      pop\n        /* \"#utility.yul\":12642:12651   */\n      dup2\n        /* \"#utility.yul\":12636:12640   */\n      dup2\n        /* \"#utility.yul\":12632:12652   */\n      sub\n        /* \"#utility.yul\":12628:12629   */\n      0x00\n        /* \"#utility.yul\":12617:12626   */\n      dup4\n        /* \"#utility.yul\":12613:12630   */\n      add\n        /* \"#utility.yul\":12606:12653   */\n      mstore\n        /* \"#utility.yul\":12670:12801   */\n      tag_450\n        /* \"#utility.yul\":12796:12800   */\n      dup2\n        /* \"#utility.yul\":12670:12801   */\n      tag_310\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12662:12801   */\n      swap1\n      pop\n        /* \"#utility.yul\":12389:12808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12814:13146   */\n    tag_207:\n        /* \"#utility.yul\":12935:12939   */\n      0x00\n        /* \"#utility.yul\":12973:12975   */\n      0x40\n        /* \"#utility.yul\":12962:12971   */\n      dup3\n        /* \"#utility.yul\":12958:12976   */\n      add\n        /* \"#utility.yul\":12950:12976   */\n      swap1\n      pop\n        /* \"#utility.yul\":12986:13057   */\n      tag_452\n        /* \"#utility.yul\":13054:13055   */\n      0x00\n        /* \"#utility.yul\":13043:13052   */\n      dup4\n        /* \"#utility.yul\":13039:13056   */\n      add\n        /* \"#utility.yul\":13030:13036   */\n      dup6\n        /* \"#utility.yul\":12986:13057   */\n      tag_296\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13067:13139   */\n      tag_453\n        /* \"#utility.yul\":13135:13137   */\n      0x20\n        /* \"#utility.yul\":13124:13133   */\n      dup4\n        /* \"#utility.yul\":13120:13138   */\n      add\n        /* \"#utility.yul\":13111:13117   */\n      dup5\n        /* \"#utility.yul\":13067:13139   */\n      tag_296\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12814:13146   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13152:13299   */\n    tag_311:\n        /* \"#utility.yul\":13253:13264   */\n      0x00\n        /* \"#utility.yul\":13290:13293   */\n      dup2\n        /* \"#utility.yul\":13275:13293   */\n      swap1\n      pop\n        /* \"#utility.yul\":13152:13299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13305:13419   */\n    tag_312:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13425:13823   */\n    tag_313:\n        /* \"#utility.yul\":13584:13587   */\n      0x00\n        /* \"#utility.yul\":13605:13688   */\n      tag_457\n        /* \"#utility.yul\":13686:13687   */\n      0x00\n        /* \"#utility.yul\":13681:13684   */\n      dup4\n        /* \"#utility.yul\":13605:13688   */\n      tag_311\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13598:13688   */\n      swap2\n      pop\n        /* \"#utility.yul\":13697:13790   */\n      tag_458\n        /* \"#utility.yul\":13786:13789   */\n      dup3\n        /* \"#utility.yul\":13697:13790   */\n      tag_312\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13815:13816   */\n      0x00\n        /* \"#utility.yul\":13810:13813   */\n      dup3\n        /* \"#utility.yul\":13806:13817   */\n      add\n        /* \"#utility.yul\":13799:13817   */\n      swap1\n      pop\n        /* \"#utility.yul\":13425:13823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13829:14208   */\n    tag_214:\n        /* \"#utility.yul\":14013:14016   */\n      0x00\n        /* \"#utility.yul\":14035:14182   */\n      tag_460\n        /* \"#utility.yul\":14178:14181   */\n      dup3\n        /* \"#utility.yul\":14035:14182   */\n      tag_313\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":14028:14182   */\n      swap2\n      pop\n        /* \"#utility.yul\":14199:14202   */\n      dup2\n        /* \"#utility.yul\":14192:14202   */\n      swap1\n      pop\n        /* \"#utility.yul\":13829:14208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14214:14381   */\n    tag_314:\n        /* \"#utility.yul\":14354:14373   */\n      0x5769746864726177616c206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":14350:14351   */\n      0x00\n        /* \"#utility.yul\":14342:14348   */\n      dup3\n        /* \"#utility.yul\":14338:14352   */\n      add\n        /* \"#utility.yul\":14331:14374   */\n      mstore\n        /* \"#utility.yul\":14214:14381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14387:14753   */\n    tag_315:\n        /* \"#utility.yul\":14529:14532   */\n      0x00\n        /* \"#utility.yul\":14550:14617   */\n      tag_463\n        /* \"#utility.yul\":14614:14616   */\n      0x11\n        /* \"#utility.yul\":14609:14612   */\n      dup4\n        /* \"#utility.yul\":14550:14617   */\n      tag_280\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14543:14617   */\n      swap2\n      pop\n        /* \"#utility.yul\":14626:14719   */\n      tag_464\n        /* \"#utility.yul\":14715:14718   */\n      dup3\n        /* \"#utility.yul\":14626:14719   */\n      tag_314\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14744:14746   */\n      0x20\n        /* \"#utility.yul\":14739:14742   */\n      dup3\n        /* \"#utility.yul\":14735:14747   */\n      add\n        /* \"#utility.yul\":14728:14747   */\n      swap1\n      pop\n        /* \"#utility.yul\":14387:14753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14759:15178   */\n    tag_220:\n        /* \"#utility.yul\":14925:14929   */\n      0x00\n        /* \"#utility.yul\":14963:14965   */\n      0x20\n        /* \"#utility.yul\":14952:14961   */\n      dup3\n        /* \"#utility.yul\":14948:14966   */\n      add\n        /* \"#utility.yul\":14940:14966   */\n      swap1\n      pop\n        /* \"#utility.yul\":15012:15021   */\n      dup2\n        /* \"#utility.yul\":15006:15010   */\n      dup2\n        /* \"#utility.yul\":15002:15022   */\n      sub\n        /* \"#utility.yul\":14998:14999   */\n      0x00\n        /* \"#utility.yul\":14987:14996   */\n      dup4\n        /* \"#utility.yul\":14983:15000   */\n      add\n        /* \"#utility.yul\":14976:15023   */\n      mstore\n        /* \"#utility.yul\":15040:15171   */\n      tag_466\n        /* \"#utility.yul\":15166:15170   */\n      dup2\n        /* \"#utility.yul\":15040:15171   */\n      tag_315\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15032:15171   */\n      swap1\n      pop\n        /* \"#utility.yul\":14759:15178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15184:15378   */\n    tag_227:\n        /* \"#utility.yul\":15224:15228   */\n      0x00\n        /* \"#utility.yul\":15244:15264   */\n      tag_468\n        /* \"#utility.yul\":15262:15263   */\n      dup3\n        /* \"#utility.yul\":15244:15264   */\n      tag_291\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15239:15264   */\n      swap2\n      pop\n        /* \"#utility.yul\":15278:15298   */\n      tag_469\n        /* \"#utility.yul\":15296:15297   */\n      dup4\n        /* \"#utility.yul\":15278:15298   */\n      tag_291\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15273:15298   */\n      swap3\n      pop\n        /* \"#utility.yul\":15322:15323   */\n      dup3\n        /* \"#utility.yul\":15319:15320   */\n      dup3\n        /* \"#utility.yul\":15315:15324   */\n      sub\n        /* \"#utility.yul\":15307:15324   */\n      swap1\n      pop\n        /* \"#utility.yul\":15346:15347   */\n      dup2\n        /* \"#utility.yul\":15340:15344   */\n      dup2\n        /* \"#utility.yul\":15337:15348   */\n      gt\n        /* \"#utility.yul\":15334:15371   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":15351:15369   */\n      tag_471\n      tag_301\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15334:15371   */\n    tag_470:\n        /* \"#utility.yul\":15184:15378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15384:15826   */\n    tag_243:\n        /* \"#utility.yul\":15533:15537   */\n      0x00\n        /* \"#utility.yul\":15571:15573   */\n      0x60\n        /* \"#utility.yul\":15560:15569   */\n      dup3\n        /* \"#utility.yul\":15556:15574   */\n      add\n        /* \"#utility.yul\":15548:15574   */\n      swap1\n      pop\n        /* \"#utility.yul\":15584:15655   */\n      tag_473\n        /* \"#utility.yul\":15652:15653   */\n      0x00\n        /* \"#utility.yul\":15641:15650   */\n      dup4\n        /* \"#utility.yul\":15637:15654   */\n      add\n        /* \"#utility.yul\":15628:15634   */\n      dup7\n        /* \"#utility.yul\":15584:15655   */\n      tag_299\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15665:15737   */\n      tag_474\n        /* \"#utility.yul\":15733:15735   */\n      0x20\n        /* \"#utility.yul\":15722:15731   */\n      dup4\n        /* \"#utility.yul\":15718:15736   */\n      add\n        /* \"#utility.yul\":15709:15715   */\n      dup6\n        /* \"#utility.yul\":15665:15737   */\n      tag_296\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15747:15819   */\n      tag_475\n        /* \"#utility.yul\":15815:15817   */\n      0x40\n        /* \"#utility.yul\":15804:15813   */\n      dup4\n        /* \"#utility.yul\":15800:15818   */\n      add\n        /* \"#utility.yul\":15791:15797   */\n      dup5\n        /* \"#utility.yul\":15747:15819   */\n      tag_296\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":15384:15826   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220badebb1a6ee2406dcef8fd6d95b13f6d8ba9fd155041d54519e4d9ff02ef7f8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_4427": {
									"entryPoint": null,
									"id": 4427,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 560,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 357,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 693,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 552,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1439,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15023:10",
										"nodeType": "YulBlock",
										"src": "0:15023:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1363:241:10",
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:10",
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nativeSrc": "1470:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nativeSrc": "1470:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nativeSrc": "1437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nativeSrc": "1434:56:10",
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nativeSrc": "1500:37:10",
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nativeSrc": "1508:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nativeSrc": "1574:23:10",
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nativeSrc": "1582:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:10",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nativeSrc": "1672:77:10",
													"nodeType": "YulBlock",
													"src": "1672:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:10"
																},
																"nativeSrc": "1683:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:10"
															},
															"nativeSrc": "1683:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:10"
																		},
																		"nativeSrc": "1722:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:10"
																},
																"nativeSrc": "1715:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:10"
															},
															"nativeSrc": "1715:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:10",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:10",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:10",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:139:10"
											},
											{
												"body": {
													"nativeSrc": "1850:339:10",
													"nodeType": "YulBlock",
													"src": "1850:339:10",
													"statements": [
														{
															"nativeSrc": "1860:75:10",
															"nodeType": "YulAssignment",
															"src": "1860:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:10"
																		},
																		"nativeSrc": "1885:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:10"
																},
																"nativeSrc": "1869:66:10",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:10"
																},
																"nativeSrc": "1944:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:10"
															},
															"nativeSrc": "1944:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:10"
														},
														{
															"nativeSrc": "1974:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:10"
																},
																"nativeSrc": "1985:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:10",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:10",
																"nodeType": "YulBlock",
																"src": "2039:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:10"
																			},
																			"nativeSrc": "2041:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:10"
																		},
																		"nativeSrc": "2041:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:10"
																		},
																		"nativeSrc": "2016:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:10"
																},
																"nativeSrc": "2013:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:10"
															},
															"nativeSrc": "2010:112:10",
															"nodeType": "YulIf",
															"src": "2010:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:10"
																},
																"nativeSrc": "2131:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:10"
															},
															"nativeSrc": "2131:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:10",
														"nodeType": "YulTypedName",
														"src": "1823:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:10",
														"nodeType": "YulTypedName",
														"src": "1828:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:10",
														"nodeType": "YulTypedName",
														"src": "1836:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:10",
														"nodeType": "YulTypedName",
														"src": "1844:5:10",
														"type": ""
													}
												],
												"src": "1755:434:10"
											},
											{
												"body": {
													"nativeSrc": "2282:282:10",
													"nodeType": "YulBlock",
													"src": "2282:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:10",
																"nodeType": "YulBlock",
																"src": "2331:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:10"
																			},
																			"nativeSrc": "2333:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:10"
																		},
																		"nativeSrc": "2333:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:10"
																				},
																				"nativeSrc": "2306:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:10"
																		},
																		"nativeSrc": "2302:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:10"
																},
																"nativeSrc": "2295:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:10"
															},
															"nativeSrc": "2292:122:10",
															"nodeType": "YulIf",
															"src": "2292:122:10"
														},
														{
															"nativeSrc": "2423:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:10"
																},
																"nativeSrc": "2437:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:10",
															"nodeType": "YulAssignment",
															"src": "2459:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:10"
																		},
																		"nativeSrc": "2527:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:10"
																},
																"nativeSrc": "2468:90:10",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:10",
														"nodeType": "YulTypedName",
														"src": "2260:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:10",
														"nodeType": "YulTypedName",
														"src": "2268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:10",
														"nodeType": "YulTypedName",
														"src": "2276:5:10",
														"type": ""
													}
												],
												"src": "2209:355:10"
											},
											{
												"body": {
													"nativeSrc": "2615:32:10",
													"nodeType": "YulBlock",
													"src": "2615:32:10",
													"statements": [
														{
															"nativeSrc": "2625:16:10",
															"nodeType": "YulAssignment",
															"src": "2625:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:10",
																"nodeType": "YulIdentifier",
																"src": "2636:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:10",
														"nodeType": "YulTypedName",
														"src": "2597:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:10",
														"nodeType": "YulTypedName",
														"src": "2607:7:10",
														"type": ""
													}
												],
												"src": "2570:77:10"
											},
											{
												"body": {
													"nativeSrc": "2696:79:10",
													"nodeType": "YulBlock",
													"src": "2696:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:10",
																"nodeType": "YulBlock",
																"src": "2753:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:10"
																			},
																			"nativeSrc": "2755:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:10"
																		},
																		"nativeSrc": "2755:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:10"
																				},
																				"nativeSrc": "2726:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:10"
																		},
																		"nativeSrc": "2716:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:10"
																},
																"nativeSrc": "2709:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:10"
															},
															"nativeSrc": "2706:63:10",
															"nodeType": "YulIf",
															"src": "2706:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:10",
														"nodeType": "YulTypedName",
														"src": "2689:5:10",
														"type": ""
													}
												],
												"src": "2653:122:10"
											},
											{
												"body": {
													"nativeSrc": "2844:80:10",
													"nodeType": "YulBlock",
													"src": "2844:80:10",
													"statements": [
														{
															"nativeSrc": "2854:22:10",
															"nodeType": "YulAssignment",
															"src": "2854:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:10"
																},
																"nativeSrc": "2863:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:10"
																},
																"nativeSrc": "2885:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:10"
															},
															"nativeSrc": "2885:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:10",
														"nodeType": "YulTypedName",
														"src": "2822:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:10",
														"nodeType": "YulTypedName",
														"src": "2830:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:10",
														"nodeType": "YulTypedName",
														"src": "2838:5:10",
														"type": ""
													}
												],
												"src": "2781:143:10"
											},
											{
												"body": {
													"nativeSrc": "3095:1158:10",
													"nodeType": "YulBlock",
													"src": "3095:1158:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3142:83:10",
																"nodeType": "YulBlock",
																"src": "3142:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3144:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3144:77:10"
																			},
																			"nativeSrc": "3144:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3144:79:10"
																		},
																		"nativeSrc": "3144:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3144:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3125:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:10"
																		},
																		"nativeSrc": "3112:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3112:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:3:10",
																		"nodeType": "YulLiteral",
																		"src": "3137:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3108:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3108:3:10"
																},
																"nativeSrc": "3108:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3108:33:10"
															},
															"nativeSrc": "3105:120:10",
															"nodeType": "YulIf",
															"src": "3105:120:10"
														},
														{
															"nativeSrc": "3235:291:10",
															"nodeType": "YulBlock",
															"src": "3235:291:10",
															"statements": [
																{
																	"nativeSrc": "3250:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3250:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3274:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3274:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3285:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3285:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3270:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3270:3:10"
																				},
																				"nativeSrc": "3270:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3270:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3264:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3264:5:10"
																		},
																		"nativeSrc": "3264:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3264:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3254:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3254:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3335:83:10",
																		"nodeType": "YulBlock",
																		"src": "3335:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3337:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3337:77:10"
																					},
																					"nativeSrc": "3337:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3337:79:10"
																				},
																				"nativeSrc": "3337:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3337:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3307:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3307:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3315:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3315:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3304:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3304:2:10"
																		},
																		"nativeSrc": "3304:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3304:30:10"
																	},
																	"nativeSrc": "3301:117:10",
																	"nodeType": "YulIf",
																	"src": "3301:117:10"
																},
																{
																	"nativeSrc": "3432:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3432:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3488:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3488:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3499:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3499:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3484:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3484:3:10"
																				},
																				"nativeSrc": "3484:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3484:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3508:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3508:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3442:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3442:41:10"
																		},
																		"nativeSrc": "3442:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3442:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3432:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3432:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3536:292:10",
															"nodeType": "YulBlock",
															"src": "3536:292:10",
															"statements": [
																{
																	"nativeSrc": "3551:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3551:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3575:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3586:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3586:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3571:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:10"
																				},
																				"nativeSrc": "3571:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3565:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3565:5:10"
																		},
																		"nativeSrc": "3565:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3565:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3555:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3555:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3637:83:10",
																		"nodeType": "YulBlock",
																		"src": "3637:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3639:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3639:77:10"
																					},
																					"nativeSrc": "3639:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3639:79:10"
																				},
																				"nativeSrc": "3639:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3639:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3609:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3617:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3617:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3606:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3606:2:10"
																		},
																		"nativeSrc": "3606:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:30:10"
																	},
																	"nativeSrc": "3603:117:10",
																	"nodeType": "YulIf",
																	"src": "3603:117:10"
																},
																{
																	"nativeSrc": "3734:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3734:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3790:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3790:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3801:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3801:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3786:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3786:3:10"
																				},
																				"nativeSrc": "3786:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3810:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3810:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3744:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3744:41:10"
																		},
																		"nativeSrc": "3744:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3744:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3734:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3734:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3838:129:10",
															"nodeType": "YulBlock",
															"src": "3838:129:10",
															"statements": [
																{
																	"nativeSrc": "3853:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3867:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3883:74:10",
																	"nodeType": "YulAssignment",
																	"src": "3883:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3929:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3929:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3940:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3940:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3925:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3925:3:10"
																				},
																				"nativeSrc": "3925:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3925:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3949:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3949:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3893:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "3893:31:10"
																		},
																		"nativeSrc": "3893:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3883:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3883:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3977:129:10",
															"nodeType": "YulBlock",
															"src": "3977:129:10",
															"statements": [
																{
																	"nativeSrc": "3992:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3992:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4006:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3996:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3996:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4022:74:10",
																	"nodeType": "YulAssignment",
																	"src": "4022:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4068:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4068:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4079:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4079:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4064:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4064:3:10"
																				},
																				"nativeSrc": "4064:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4064:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4088:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4088:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4032:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4032:31:10"
																		},
																		"nativeSrc": "4032:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4032:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4022:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4022:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4116:130:10",
															"nodeType": "YulBlock",
															"src": "4116:130:10",
															"statements": [
																{
																	"nativeSrc": "4131:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4131:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4145:3:10",
																		"nodeType": "YulLiteral",
																		"src": "4145:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4135:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4135:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4162:74:10",
																	"nodeType": "YulAssignment",
																	"src": "4162:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4208:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4208:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4219:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4219:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4204:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4204:3:10"
																				},
																				"nativeSrc": "4204:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4228:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4228:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4172:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4172:31:10"
																		},
																		"nativeSrc": "4172:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4172:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4162:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4162:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "2930:1323:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3033:9:10",
														"nodeType": "YulTypedName",
														"src": "3033:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3044:7:10",
														"nodeType": "YulTypedName",
														"src": "3044:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3056:6:10",
														"nodeType": "YulTypedName",
														"src": "3056:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3064:6:10",
														"nodeType": "YulTypedName",
														"src": "3064:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3072:6:10",
														"nodeType": "YulTypedName",
														"src": "3072:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3080:6:10",
														"nodeType": "YulTypedName",
														"src": "3080:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3088:6:10",
														"nodeType": "YulTypedName",
														"src": "3088:6:10",
														"type": ""
													}
												],
												"src": "2930:1323:10"
											},
											{
												"body": {
													"nativeSrc": "4318:40:10",
													"nodeType": "YulBlock",
													"src": "4318:40:10",
													"statements": [
														{
															"nativeSrc": "4329:22:10",
															"nodeType": "YulAssignment",
															"src": "4329:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4345:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4339:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4339:5:10"
																},
																"nativeSrc": "4339:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4339:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4329:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4259:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4301:5:10",
														"nodeType": "YulTypedName",
														"src": "4301:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4311:6:10",
														"nodeType": "YulTypedName",
														"src": "4311:6:10",
														"type": ""
													}
												],
												"src": "4259:99:10"
											},
											{
												"body": {
													"nativeSrc": "4392:152:10",
													"nodeType": "YulBlock",
													"src": "4392:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4409:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4409:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4412:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4412:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:10"
																},
																"nativeSrc": "4402:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4402:88:10"
															},
															"nativeSrc": "4402:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4402:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4506:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4506:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4509:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4509:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4499:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4499:6:10"
																},
																"nativeSrc": "4499:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4499:15:10"
															},
															"nativeSrc": "4499:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4499:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4530:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4530:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4533:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4533:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4523:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4523:6:10"
																},
																"nativeSrc": "4523:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4523:15:10"
															},
															"nativeSrc": "4523:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4523:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4364:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4364:180:10"
											},
											{
												"body": {
													"nativeSrc": "4601:269:10",
													"nodeType": "YulBlock",
													"src": "4601:269:10",
													"statements": [
														{
															"nativeSrc": "4611:22:10",
															"nodeType": "YulAssignment",
															"src": "4611:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4625:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4625:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4621:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:10"
																},
																"nativeSrc": "4621:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4621:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4611:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:10"
																}
															]
														},
														{
															"nativeSrc": "4642:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4672:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4672:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4678:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4678:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4668:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:10"
																},
																"nativeSrc": "4668:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4668:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4646:18:10",
																	"nodeType": "YulTypedName",
																	"src": "4646:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4719:51:10",
																"nodeType": "YulBlock",
																"src": "4719:51:10",
																"statements": [
																	{
																		"nativeSrc": "4733:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4733:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4747:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4747:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4755:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4755:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4743:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4743:3:10"
																			},
																			"nativeSrc": "4743:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4743:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4733:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4733:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4699:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4699:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4692:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:10"
																},
																"nativeSrc": "4692:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4692:26:10"
															},
															"nativeSrc": "4689:81:10",
															"nodeType": "YulIf",
															"src": "4689:81:10"
														},
														{
															"body": {
																"nativeSrc": "4822:42:10",
																"nodeType": "YulBlock",
																"src": "4822:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4836:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4836:16:10"
																			},
																			"nativeSrc": "4836:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4836:18:10"
																		},
																		"nativeSrc": "4836:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4836:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4786:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4786:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4809:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4809:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4817:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4817:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4806:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4806:2:10"
																		},
																		"nativeSrc": "4806:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4806:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4783:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4783:2:10"
																},
																"nativeSrc": "4783:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4783:38:10"
															},
															"nativeSrc": "4780:84:10",
															"nodeType": "YulIf",
															"src": "4780:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4550:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4585:4:10",
														"nodeType": "YulTypedName",
														"src": "4585:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4594:6:10",
														"nodeType": "YulTypedName",
														"src": "4594:6:10",
														"type": ""
													}
												],
												"src": "4550:320:10"
											},
											{
												"body": {
													"nativeSrc": "4930:87:10",
													"nodeType": "YulBlock",
													"src": "4930:87:10",
													"statements": [
														{
															"nativeSrc": "4940:11:10",
															"nodeType": "YulAssignment",
															"src": "4940:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "4948:3:10",
																"nodeType": "YulIdentifier",
																"src": "4948:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4940:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4940:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4968:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4968:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4971:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4971:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4961:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4961:6:10"
																},
																"nativeSrc": "4961:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4961:14:10"
															},
															"nativeSrc": "4961:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "4961:14:10"
														},
														{
															"nativeSrc": "4984:26:10",
															"nodeType": "YulAssignment",
															"src": "4984:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5002:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5002:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5005:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4992:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4992:9:10"
																},
																"nativeSrc": "4992:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4992:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4984:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4984:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4876:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4917:3:10",
														"nodeType": "YulTypedName",
														"src": "4917:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4925:4:10",
														"nodeType": "YulTypedName",
														"src": "4925:4:10",
														"type": ""
													}
												],
												"src": "4876:141:10"
											},
											{
												"body": {
													"nativeSrc": "5067:49:10",
													"nodeType": "YulBlock",
													"src": "5067:49:10",
													"statements": [
														{
															"nativeSrc": "5077:33:10",
															"nodeType": "YulAssignment",
															"src": "5077:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5095:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5095:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5102:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5102:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5091:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5091:3:10"
																		},
																		"nativeSrc": "5091:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5107:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5087:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5087:3:10"
																},
																"nativeSrc": "5087:23:10",
																"nodeType": "YulFunctionCall",
																"src": "5087:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5077:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5023:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5050:5:10",
														"nodeType": "YulTypedName",
														"src": "5050:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5060:6:10",
														"nodeType": "YulTypedName",
														"src": "5060:6:10",
														"type": ""
													}
												],
												"src": "5023:93:10"
											},
											{
												"body": {
													"nativeSrc": "5175:54:10",
													"nodeType": "YulBlock",
													"src": "5175:54:10",
													"statements": [
														{
															"nativeSrc": "5185:37:10",
															"nodeType": "YulAssignment",
															"src": "5185:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5210:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5216:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5216:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5206:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5206:3:10"
																},
																"nativeSrc": "5206:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5206:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5185:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5185:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5122:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5150:4:10",
														"nodeType": "YulTypedName",
														"src": "5150:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5156:5:10",
														"nodeType": "YulTypedName",
														"src": "5156:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5166:8:10",
														"nodeType": "YulTypedName",
														"src": "5166:8:10",
														"type": ""
													}
												],
												"src": "5122:107:10"
											},
											{
												"body": {
													"nativeSrc": "5311:317:10",
													"nodeType": "YulBlock",
													"src": "5311:317:10",
													"statements": [
														{
															"nativeSrc": "5321:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5321:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5342:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "5342:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5354:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5354:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5338:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:10"
																},
																"nativeSrc": "5338:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5338:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5325:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5325:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5365:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5365:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5396:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5396:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5407:66:10",
																		"nodeType": "YulLiteral",
																		"src": "5407:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5377:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5377:18:10"
																},
																"nativeSrc": "5377:97:10",
																"nodeType": "YulFunctionCall",
																"src": "5377:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5369:4:10",
																	"nodeType": "YulTypedName",
																	"src": "5369:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5483:51:10",
															"nodeType": "YulAssignment",
															"src": "5483:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5514:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5525:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "5525:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5495:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5495:18:10"
																},
																"nativeSrc": "5495:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5495:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5483:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5483:8:10"
																}
															]
														},
														{
															"nativeSrc": "5543:30:10",
															"nodeType": "YulAssignment",
															"src": "5543:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5556:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5556:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5567:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5567:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5563:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:10"
																		},
																		"nativeSrc": "5563:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5563:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5552:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5552:3:10"
																},
																"nativeSrc": "5552:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5552:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5543:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5543:5:10"
																}
															]
														},
														{
															"nativeSrc": "5582:40:10",
															"nodeType": "YulAssignment",
															"src": "5582:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5595:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5595:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5606:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "5606:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5616:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5616:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5602:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5602:3:10"
																		},
																		"nativeSrc": "5602:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5592:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5592:2:10"
																},
																"nativeSrc": "5592:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5592:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5582:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5582:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5235:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5272:5:10",
														"nodeType": "YulTypedName",
														"src": "5272:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5279:10:10",
														"nodeType": "YulTypedName",
														"src": "5279:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5291:8:10",
														"nodeType": "YulTypedName",
														"src": "5291:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5304:6:10",
														"nodeType": "YulTypedName",
														"src": "5304:6:10",
														"type": ""
													}
												],
												"src": "5235:393:10"
											},
											{
												"body": {
													"nativeSrc": "5666:28:10",
													"nodeType": "YulBlock",
													"src": "5666:28:10",
													"statements": [
														{
															"nativeSrc": "5676:12:10",
															"nodeType": "YulAssignment",
															"src": "5676:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5683:5:10",
																"nodeType": "YulIdentifier",
																"src": "5683:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5676:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5676:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5634:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5652:5:10",
														"nodeType": "YulTypedName",
														"src": "5652:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5662:3:10",
														"nodeType": "YulTypedName",
														"src": "5662:3:10",
														"type": ""
													}
												],
												"src": "5634:60:10"
											},
											{
												"body": {
													"nativeSrc": "5760:82:10",
													"nodeType": "YulBlock",
													"src": "5760:82:10",
													"statements": [
														{
															"nativeSrc": "5770:66:10",
															"nodeType": "YulAssignment",
															"src": "5770:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5828:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5828:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5810:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5810:17:10"
																				},
																				"nativeSrc": "5810:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5810:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5801:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5801:8:10"
																		},
																		"nativeSrc": "5801:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5801:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5783:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5783:17:10"
																},
																"nativeSrc": "5783:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5783:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5770:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5770:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5700:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5740:5:10",
														"nodeType": "YulTypedName",
														"src": "5740:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5750:9:10",
														"nodeType": "YulTypedName",
														"src": "5750:9:10",
														"type": ""
													}
												],
												"src": "5700:142:10"
											},
											{
												"body": {
													"nativeSrc": "5895:28:10",
													"nodeType": "YulBlock",
													"src": "5895:28:10",
													"statements": [
														{
															"nativeSrc": "5905:12:10",
															"nodeType": "YulAssignment",
															"src": "5905:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5912:5:10",
																"nodeType": "YulIdentifier",
																"src": "5912:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5905:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5905:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5848:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5881:5:10",
														"nodeType": "YulTypedName",
														"src": "5881:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5891:3:10",
														"nodeType": "YulTypedName",
														"src": "5891:3:10",
														"type": ""
													}
												],
												"src": "5848:75:10"
											},
											{
												"body": {
													"nativeSrc": "6005:193:10",
													"nodeType": "YulBlock",
													"src": "6005:193:10",
													"statements": [
														{
															"nativeSrc": "6015:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6015:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6070:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "6070:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6039:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6039:30:10"
																},
																"nativeSrc": "6039:39:10",
																"nodeType": "YulFunctionCall",
																"src": "6039:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6019:16:10",
																	"nodeType": "YulTypedName",
																	"src": "6019:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6094:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6094:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6134:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6134:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6128:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6128:5:10"
																				},
																				"nativeSrc": "6128:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6128:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6141:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6141:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6173:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "6173:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6149:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "6149:23:10"
																				},
																				"nativeSrc": "6149:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6149:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6100:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "6100:27:10"
																		},
																		"nativeSrc": "6100:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6087:6:10"
																},
																"nativeSrc": "6087:105:10",
																"nodeType": "YulFunctionCall",
																"src": "6087:105:10"
															},
															"nativeSrc": "6087:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "6087:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5929:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5982:4:10",
														"nodeType": "YulTypedName",
														"src": "5982:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5988:6:10",
														"nodeType": "YulTypedName",
														"src": "5988:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5996:7:10",
														"nodeType": "YulTypedName",
														"src": "5996:7:10",
														"type": ""
													}
												],
												"src": "5929:269:10"
											},
											{
												"body": {
													"nativeSrc": "6253:24:10",
													"nodeType": "YulBlock",
													"src": "6253:24:10",
													"statements": [
														{
															"nativeSrc": "6263:8:10",
															"nodeType": "YulAssignment",
															"src": "6263:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6270:1:10",
																"nodeType": "YulLiteral",
																"src": "6270:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6263:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6263:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6204:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6249:3:10",
														"nodeType": "YulTypedName",
														"src": "6249:3:10",
														"type": ""
													}
												],
												"src": "6204:73:10"
											},
											{
												"body": {
													"nativeSrc": "6336:136:10",
													"nodeType": "YulBlock",
													"src": "6336:136:10",
													"statements": [
														{
															"nativeSrc": "6346:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6346:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6360:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6360:30:10"
																},
																"nativeSrc": "6360:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6360:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6350:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6350:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6445:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6445:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6451:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6451:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6459:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6459:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6401:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6401:43:10"
																},
																"nativeSrc": "6401:65:10",
																"nodeType": "YulFunctionCall",
																"src": "6401:65:10"
															},
															"nativeSrc": "6401:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "6401:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6283:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6322:4:10",
														"nodeType": "YulTypedName",
														"src": "6322:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6328:6:10",
														"nodeType": "YulTypedName",
														"src": "6328:6:10",
														"type": ""
													}
												],
												"src": "6283:189:10"
											},
											{
												"body": {
													"nativeSrc": "6528:136:10",
													"nodeType": "YulBlock",
													"src": "6528:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6595:63:10",
																"nodeType": "YulBlock",
																"src": "6595:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6639:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6639:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6646:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6646:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6609:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "6609:29:10"
																			},
																			"nativeSrc": "6609:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6609:39:10"
																		},
																		"nativeSrc": "6609:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6609:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6548:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6548:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6555:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6555:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6545:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6545:2:10"
																},
																"nativeSrc": "6545:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6545:14:10"
															},
															"nativeSrc": "6538:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6560:26:10",
																"nodeType": "YulBlock",
																"src": "6560:26:10",
																"statements": [
																	{
																		"nativeSrc": "6562:22:10",
																		"nodeType": "YulAssignment",
																		"src": "6562:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6575:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6575:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6582:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6582:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6571:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6571:3:10"
																			},
																			"nativeSrc": "6571:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6571:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6562:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6562:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6542:2:10",
																"nodeType": "YulBlock",
																"src": "6542:2:10",
																"statements": []
															},
															"src": "6538:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6478:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6516:5:10",
														"nodeType": "YulTypedName",
														"src": "6516:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6523:3:10",
														"nodeType": "YulTypedName",
														"src": "6523:3:10",
														"type": ""
													}
												],
												"src": "6478:186:10"
											},
											{
												"body": {
													"nativeSrc": "6749:464:10",
													"nodeType": "YulBlock",
													"src": "6749:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6775:431:10",
																"nodeType": "YulBlock",
																"src": "6775:431:10",
																"statements": [
																	{
																		"nativeSrc": "6789:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6789:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6837:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6837:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6805:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "6805:31:10"
																			},
																			"nativeSrc": "6805:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6805:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6793:8:10",
																				"nodeType": "YulTypedName",
																				"src": "6793:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6856:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6856:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6879:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6879:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6907:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6907:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6889:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "6889:17:10"
																					},
																					"nativeSrc": "6889:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6889:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6875:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6875:3:10"
																			},
																			"nativeSrc": "6875:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6875:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6860:11:10",
																				"nodeType": "YulTypedName",
																				"src": "6860:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7076:27:10",
																			"nodeType": "YulBlock",
																			"src": "7076:27:10",
																			"statements": [
																				{
																					"nativeSrc": "7078:23:10",
																					"nodeType": "YulAssignment",
																					"src": "7078:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7093:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7093:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7078:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "7078:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7060:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "7060:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7072:2:10",
																					"nodeType": "YulLiteral",
																					"src": "7072:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7057:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "7057:2:10"
																			},
																			"nativeSrc": "7057:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7057:18:10"
																		},
																		"nativeSrc": "7054:49:10",
																		"nodeType": "YulIf",
																		"src": "7054:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7145:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "7145:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7162:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7162:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7190:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7190:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7172:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "7172:17:10"
																							},
																							"nativeSrc": "7172:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7172:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7158:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7158:3:10"
																					},
																					"nativeSrc": "7158:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7158:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7116:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "7116:28:10"
																			},
																			"nativeSrc": "7116:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7116:80:10"
																		},
																		"nativeSrc": "7116:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7116:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6766:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6771:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6763:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6763:2:10"
																},
																"nativeSrc": "6763:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6763:11:10"
															},
															"nativeSrc": "6760:446:10",
															"nodeType": "YulIf",
															"src": "6760:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6670:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6725:5:10",
														"nodeType": "YulTypedName",
														"src": "6725:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6732:3:10",
														"nodeType": "YulTypedName",
														"src": "6732:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6737:10:10",
														"nodeType": "YulTypedName",
														"src": "6737:10:10",
														"type": ""
													}
												],
												"src": "6670:543:10"
											},
											{
												"body": {
													"nativeSrc": "7282:54:10",
													"nodeType": "YulBlock",
													"src": "7282:54:10",
													"statements": [
														{
															"nativeSrc": "7292:37:10",
															"nodeType": "YulAssignment",
															"src": "7292:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7317:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7317:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7323:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7323:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7313:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7313:3:10"
																},
																"nativeSrc": "7313:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7313:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7292:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7292:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7219:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7257:4:10",
														"nodeType": "YulTypedName",
														"src": "7257:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7263:5:10",
														"nodeType": "YulTypedName",
														"src": "7263:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7273:8:10",
														"nodeType": "YulTypedName",
														"src": "7273:8:10",
														"type": ""
													}
												],
												"src": "7219:117:10"
											},
											{
												"body": {
													"nativeSrc": "7393:118:10",
													"nodeType": "YulBlock",
													"src": "7393:118:10",
													"statements": [
														{
															"nativeSrc": "7403:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7403:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7452:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7452:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7455:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7455:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7448:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7448:3:10"
																				},
																				"nativeSrc": "7448:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7448:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7467:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7467:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7463:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7463:3:10"
																				},
																				"nativeSrc": "7463:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7463:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7419:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "7419:28:10"
																		},
																		"nativeSrc": "7419:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7419:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7415:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:10"
																},
																"nativeSrc": "7415:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7415:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7407:4:10",
																	"nodeType": "YulTypedName",
																	"src": "7407:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7480:25:10",
															"nodeType": "YulAssignment",
															"src": "7480:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7494:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7494:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7500:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7500:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7490:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7490:3:10"
																},
																"nativeSrc": "7490:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7490:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7480:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7342:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7370:4:10",
														"nodeType": "YulTypedName",
														"src": "7370:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7376:5:10",
														"nodeType": "YulTypedName",
														"src": "7376:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7386:6:10",
														"nodeType": "YulTypedName",
														"src": "7386:6:10",
														"type": ""
													}
												],
												"src": "7342:169:10"
											},
											{
												"body": {
													"nativeSrc": "7597:214:10",
													"nodeType": "YulBlock",
													"src": "7597:214:10",
													"statements": [
														{
															"nativeSrc": "7730:37:10",
															"nodeType": "YulAssignment",
															"src": "7730:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7757:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7757:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7763:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7738:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7738:18:10"
																},
																"nativeSrc": "7738:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7738:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7730:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7730:4:10"
																}
															]
														},
														{
															"nativeSrc": "7776:29:10",
															"nodeType": "YulAssignment",
															"src": "7776:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7787:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7787:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7797:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7797:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7800:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7800:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7793:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:10"
																		},
																		"nativeSrc": "7793:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7793:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7784:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7784:2:10"
																},
																"nativeSrc": "7784:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7784:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7776:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7776:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7516:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7578:4:10",
														"nodeType": "YulTypedName",
														"src": "7578:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7584:3:10",
														"nodeType": "YulTypedName",
														"src": "7584:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7592:4:10",
														"nodeType": "YulTypedName",
														"src": "7592:4:10",
														"type": ""
													}
												],
												"src": "7516:295:10"
											},
											{
												"body": {
													"nativeSrc": "7908:1303:10",
													"nodeType": "YulBlock",
													"src": "7908:1303:10",
													"statements": [
														{
															"nativeSrc": "7919:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7919:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7966:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7966:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7933:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "7933:32:10"
																},
																"nativeSrc": "7933:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7933:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7923:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7923:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8055:22:10",
																"nodeType": "YulBlock",
																"src": "8055:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8057:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8057:16:10"
																			},
																			"nativeSrc": "8057:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8057:18:10"
																		},
																		"nativeSrc": "8057:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8057:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8027:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8027:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8035:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8035:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8024:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8024:2:10"
																},
																"nativeSrc": "8024:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8024:30:10"
															},
															"nativeSrc": "8021:56:10",
															"nodeType": "YulIf",
															"src": "8021:56:10"
														},
														{
															"nativeSrc": "8087:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8087:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8133:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8133:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8127:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "8127:5:10"
																		},
																		"nativeSrc": "8127:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8101:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "8101:25:10"
																},
																"nativeSrc": "8101:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8101:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8091:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8091:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8232:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8232:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8238:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8238:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8246:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8246:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8186:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "8186:45:10"
																},
																"nativeSrc": "8186:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8186:67:10"
															},
															"nativeSrc": "8186:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8186:67:10"
														},
														{
															"nativeSrc": "8263:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8263:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8280:1:10",
																"nodeType": "YulLiteral",
																"src": "8280:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8267:9:10",
																	"nodeType": "YulTypedName",
																	"src": "8267:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8291:17:10",
															"nodeType": "YulAssignment",
															"src": "8291:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8304:4:10",
																"nodeType": "YulLiteral",
																"src": "8304:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8291:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8291:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8355:611:10",
																		"nodeType": "YulBlock",
																		"src": "8355:611:10",
																		"statements": [
																			{
																				"nativeSrc": "8369:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8369:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8388:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8388:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8400:4:10",
																									"nodeType": "YulLiteral",
																									"src": "8400:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8396:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8396:3:10"
																							},
																							"nativeSrc": "8396:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8396:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8384:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8384:3:10"
																					},
																					"nativeSrc": "8384:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8384:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8373:7:10",
																						"nodeType": "YulTypedName",
																						"src": "8373:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8420:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8420:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8466:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8466:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8434:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "8434:31:10"
																					},
																					"nativeSrc": "8434:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8434:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8424:6:10",
																						"nodeType": "YulTypedName",
																						"src": "8424:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8484:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8484:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8493:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8493:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8488:1:10",
																						"nodeType": "YulTypedName",
																						"src": "8488:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8552:163:10",
																					"nodeType": "YulBlock",
																					"src": "8552:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8577:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8577:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8595:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "8595:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8600:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "8600:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8591:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8591:3:10"
																												},
																												"nativeSrc": "8591:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8591:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8585:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "8585:5:10"
																										},
																										"nativeSrc": "8585:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8585:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8570:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8570:6:10"
																								},
																								"nativeSrc": "8570:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8570:42:10"
																							},
																							"nativeSrc": "8570:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8570:42:10"
																						},
																						{
																							"nativeSrc": "8629:24:10",
																							"nodeType": "YulAssignment",
																							"src": "8629:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8643:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8643:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8651:1:10",
																										"nodeType": "YulLiteral",
																										"src": "8651:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8639:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8639:3:10"
																								},
																								"nativeSrc": "8639:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8639:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8629:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8629:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8670:31:10",
																							"nodeType": "YulAssignment",
																							"src": "8670:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8687:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "8687:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8698:2:10",
																										"nodeType": "YulLiteral",
																										"src": "8698:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8683:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8683:3:10"
																								},
																								"nativeSrc": "8683:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8683:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8670:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "8670:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8518:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "8518:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8521:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8521:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8515:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8515:2:10"
																					},
																					"nativeSrc": "8515:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8515:14:10"
																				},
																				"nativeSrc": "8507:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8530:21:10",
																					"nodeType": "YulBlock",
																					"src": "8530:21:10",
																					"statements": [
																						{
																							"nativeSrc": "8532:17:10",
																							"nodeType": "YulAssignment",
																							"src": "8532:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8541:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "8541:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8544:4:10",
																										"nodeType": "YulLiteral",
																										"src": "8544:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8537:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8537:3:10"
																								},
																								"nativeSrc": "8537:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8537:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8532:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "8532:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8511:3:10",
																					"nodeType": "YulBlock",
																					"src": "8511:3:10",
																					"statements": []
																				},
																				"src": "8507:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "8751:156:10",
																					"nodeType": "YulBlock",
																					"src": "8751:156:10",
																					"statements": [
																						{
																							"nativeSrc": "8769:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8769:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8796:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8796:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8801:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8801:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8792:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8792:3:10"
																										},
																										"nativeSrc": "8792:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8792:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8786:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8786:5:10"
																								},
																								"nativeSrc": "8786:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8786:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8773:9:10",
																									"nodeType": "YulTypedName",
																									"src": "8773:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8836:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8836:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8863:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8863:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8878:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "8878:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8886:4:10",
																														"nodeType": "YulLiteral",
																														"src": "8886:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8874:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8874:3:10"
																												},
																												"nativeSrc": "8874:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8874:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8844:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "8844:18:10"
																										},
																										"nativeSrc": "8844:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8844:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8829:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8829:6:10"
																								},
																								"nativeSrc": "8829:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8829:64:10"
																							},
																							"nativeSrc": "8829:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8829:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8734:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8734:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8743:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8743:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8731:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8731:2:10"
																					},
																					"nativeSrc": "8731:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8731:19:10"
																				},
																				"nativeSrc": "8728:179:10",
																				"nodeType": "YulIf",
																				"src": "8728:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8927:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8927:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8941:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "8941:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8949:1:10",
																											"nodeType": "YulLiteral",
																											"src": "8949:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8937:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "8937:3:10"
																									},
																									"nativeSrc": "8937:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "8937:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8953:1:10",
																									"nodeType": "YulLiteral",
																									"src": "8953:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8933:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8933:3:10"
																							},
																							"nativeSrc": "8933:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8933:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8920:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8920:6:10"
																					},
																					"nativeSrc": "8920:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8920:36:10"
																				},
																				"nativeSrc": "8920:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8920:36:10"
																			}
																		]
																	},
																	"nativeSrc": "8348:618:10",
																	"nodeType": "YulCase",
																	"src": "8348:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8353:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8353:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8983:222:10",
																		"nodeType": "YulBlock",
																		"src": "8983:222:10",
																		"statements": [
																			{
																				"nativeSrc": "8997:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8997:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9010:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9010:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9001:5:10",
																						"nodeType": "YulTypedName",
																						"src": "9001:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9034:67:10",
																					"nodeType": "YulBlock",
																					"src": "9034:67:10",
																					"statements": [
																						{
																							"nativeSrc": "9052:35:10",
																							"nodeType": "YulAssignment",
																							"src": "9052:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9071:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "9071:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9076:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "9076:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9067:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "9067:3:10"
																										},
																										"nativeSrc": "9067:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "9067:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9061:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9061:5:10"
																								},
																								"nativeSrc": "9061:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "9061:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9052:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9052:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9027:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9027:6:10"
																				},
																				"nativeSrc": "9024:77:10",
																				"nodeType": "YulIf",
																				"src": "9024:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9121:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "9121:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9180:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9180:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9187:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "9187:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9127:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "9127:52:10"
																							},
																							"nativeSrc": "9127:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "9127:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9114:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9114:6:10"
																					},
																					"nativeSrc": "9114:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9114:81:10"
																				},
																				"nativeSrc": "9114:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9114:81:10"
																			}
																		]
																	},
																	"nativeSrc": "8975:230:10",
																	"nodeType": "YulCase",
																	"src": "8975:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8328:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8328:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8336:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8336:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8325:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8325:2:10"
																},
																"nativeSrc": "8325:14:10",
																"nodeType": "YulFunctionCall",
																"src": "8325:14:10"
															},
															"nativeSrc": "8318:887:10",
															"nodeType": "YulSwitch",
															"src": "8318:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7816:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7897:4:10",
														"nodeType": "YulTypedName",
														"src": "7897:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7903:3:10",
														"nodeType": "YulTypedName",
														"src": "7903:3:10",
														"type": ""
													}
												],
												"src": "7816:1395:10"
											},
											{
												"body": {
													"nativeSrc": "9262:81:10",
													"nodeType": "YulBlock",
													"src": "9262:81:10",
													"statements": [
														{
															"nativeSrc": "9272:65:10",
															"nodeType": "YulAssignment",
															"src": "9272:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9287:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9287:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9294:42:10",
																		"nodeType": "YulLiteral",
																		"src": "9294:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9283:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:10"
																},
																"nativeSrc": "9283:54:10",
																"nodeType": "YulFunctionCall",
																"src": "9283:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9272:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9272:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9217:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9244:5:10",
														"nodeType": "YulTypedName",
														"src": "9244:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9254:7:10",
														"nodeType": "YulTypedName",
														"src": "9254:7:10",
														"type": ""
													}
												],
												"src": "9217:126:10"
											},
											{
												"body": {
													"nativeSrc": "9394:51:10",
													"nodeType": "YulBlock",
													"src": "9394:51:10",
													"statements": [
														{
															"nativeSrc": "9404:35:10",
															"nodeType": "YulAssignment",
															"src": "9404:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9433:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9433:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9415:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9415:17:10"
																},
																"nativeSrc": "9415:24:10",
																"nodeType": "YulFunctionCall",
																"src": "9415:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9404:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9404:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9349:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9376:5:10",
														"nodeType": "YulTypedName",
														"src": "9376:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9386:7:10",
														"nodeType": "YulTypedName",
														"src": "9386:7:10",
														"type": ""
													}
												],
												"src": "9349:96:10"
											},
											{
												"body": {
													"nativeSrc": "9516:53:10",
													"nodeType": "YulBlock",
													"src": "9516:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:10"
																		},
																		"nativeSrc": "9538:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:10"
																},
																"nativeSrc": "9526:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:10"
															},
															"nativeSrc": "9526:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:10",
														"nodeType": "YulTypedName",
														"src": "9504:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:10",
														"nodeType": "YulTypedName",
														"src": "9511:3:10",
														"type": ""
													}
												],
												"src": "9451:118:10"
											},
											{
												"body": {
													"nativeSrc": "9673:124:10",
													"nodeType": "YulBlock",
													"src": "9673:124:10",
													"statements": [
														{
															"nativeSrc": "9683:26:10",
															"nodeType": "YulAssignment",
															"src": "9683:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:10"
																},
																"nativeSrc": "9691:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:10"
																		},
																		"nativeSrc": "9772:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:10"
																},
																"nativeSrc": "9719:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:10"
															},
															"nativeSrc": "9719:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:10",
														"nodeType": "YulTypedName",
														"src": "9645:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:10",
														"nodeType": "YulTypedName",
														"src": "9657:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:10",
														"nodeType": "YulTypedName",
														"src": "9668:4:10",
														"type": ""
													}
												],
												"src": "9575:222:10"
											},
											{
												"body": {
													"nativeSrc": "9899:73:10",
													"nodeType": "YulBlock",
													"src": "9899:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9916:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9916:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9921:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9921:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9909:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:10"
																},
																"nativeSrc": "9909:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9909:19:10"
															},
															"nativeSrc": "9909:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "9909:19:10"
														},
														{
															"nativeSrc": "9937:29:10",
															"nodeType": "YulAssignment",
															"src": "9937:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9956:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9961:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9961:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9952:3:10"
																},
																"nativeSrc": "9952:14:10",
																"nodeType": "YulFunctionCall",
																"src": "9952:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9937:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "9937:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9803:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9871:3:10",
														"nodeType": "YulTypedName",
														"src": "9871:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9876:6:10",
														"nodeType": "YulTypedName",
														"src": "9876:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9887:11:10",
														"nodeType": "YulTypedName",
														"src": "9887:11:10",
														"type": ""
													}
												],
												"src": "9803:169:10"
											},
											{
												"body": {
													"nativeSrc": "10084:120:10",
													"nodeType": "YulBlock",
													"src": "10084:120:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10106:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10106:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10114:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10114:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10102:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:10"
																		},
																		"nativeSrc": "10102:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10102:14:10"
																	},
																	{
																		"hexValue": "496e697469616c20737570706c792063616e6e6f7420657863656564206d6178",
																		"kind": "string",
																		"nativeSrc": "10118:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10118:34:10",
																		"type": "",
																		"value": "Initial supply cannot exceed max"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10095:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:10"
																},
																"nativeSrc": "10095:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10095:58:10"
															},
															"nativeSrc": "10095:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10095:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10174:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10174:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10182:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10182:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10170:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10170:3:10"
																		},
																		"nativeSrc": "10170:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10170:15:10"
																	},
																	{
																		"hexValue": "20737570706c79",
																		"kind": "string",
																		"nativeSrc": "10187:9:10",
																		"nodeType": "YulLiteral",
																		"src": "10187:9:10",
																		"type": "",
																		"value": " supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10163:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10163:6:10"
																},
																"nativeSrc": "10163:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10163:34:10"
															},
															"nativeSrc": "10163:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10163:34:10"
														}
													]
												},
												"name": "store_literal_in_memory_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14",
												"nativeSrc": "9978:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10076:6:10",
														"nodeType": "YulTypedName",
														"src": "10076:6:10",
														"type": ""
													}
												],
												"src": "9978:226:10"
											},
											{
												"body": {
													"nativeSrc": "10356:220:10",
													"nodeType": "YulBlock",
													"src": "10356:220:10",
													"statements": [
														{
															"nativeSrc": "10366:74:10",
															"nodeType": "YulAssignment",
															"src": "10366:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10432:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10432:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10437:2:10",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10373:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10373:58:10"
																},
																"nativeSrc": "10373:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10373:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10366:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10366:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10538:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10538:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14",
																	"nativeSrc": "10449:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10449:88:10"
																},
																"nativeSrc": "10449:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10449:93:10"
															},
															"nativeSrc": "10449:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10449:93:10"
														},
														{
															"nativeSrc": "10551:19:10",
															"nodeType": "YulAssignment",
															"src": "10551:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10562:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10562:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10567:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10567:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10558:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10558:3:10"
																},
																"nativeSrc": "10558:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10558:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10551:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10551:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10210:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10344:3:10",
														"nodeType": "YulTypedName",
														"src": "10344:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10352:3:10",
														"nodeType": "YulTypedName",
														"src": "10352:3:10",
														"type": ""
													}
												],
												"src": "10210:366:10"
											},
											{
												"body": {
													"nativeSrc": "10753:248:10",
													"nodeType": "YulBlock",
													"src": "10753:248:10",
													"statements": [
														{
															"nativeSrc": "10763:26:10",
															"nodeType": "YulAssignment",
															"src": "10763:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10775:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10775:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10786:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10771:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:10"
																},
																"nativeSrc": "10771:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10771:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10763:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10763:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10810:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10810:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10821:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10821:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10806:3:10"
																		},
																		"nativeSrc": "10806:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10806:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10829:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10829:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10835:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10835:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10825:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10825:3:10"
																		},
																		"nativeSrc": "10825:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10825:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10799:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:10"
																},
																"nativeSrc": "10799:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10799:47:10"
															},
															"nativeSrc": "10799:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10799:47:10"
														},
														{
															"nativeSrc": "10855:139:10",
															"nodeType": "YulAssignment",
															"src": "10855:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10989:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10989:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10863:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10863:124:10"
																},
																"nativeSrc": "10863:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10863:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10855:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10855:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10582:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10733:9:10",
														"nodeType": "YulTypedName",
														"src": "10733:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10748:4:10",
														"nodeType": "YulTypedName",
														"src": "10748:4:10",
														"type": ""
													}
												],
												"src": "10582:419:10"
											},
											{
												"body": {
													"nativeSrc": "11035:152:10",
													"nodeType": "YulBlock",
													"src": "11035:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11052:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11052:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11055:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11055:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11045:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11045:6:10"
																},
																"nativeSrc": "11045:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11045:88:10"
															},
															"nativeSrc": "11045:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11045:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11149:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11149:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11152:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11152:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:10"
																},
																"nativeSrc": "11142:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11142:15:10"
															},
															"nativeSrc": "11142:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11142:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11173:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11173:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11176:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11176:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:10"
																},
																"nativeSrc": "11166:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11166:15:10"
															},
															"nativeSrc": "11166:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11166:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11007:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11007:180:10"
											},
											{
												"body": {
													"nativeSrc": "11244:51:10",
													"nodeType": "YulBlock",
													"src": "11244:51:10",
													"statements": [
														{
															"nativeSrc": "11254:34:10",
															"nodeType": "YulAssignment",
															"src": "11254:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11279:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11279:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11282:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11282:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11275:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11275:3:10"
																},
																"nativeSrc": "11275:13:10",
																"nodeType": "YulFunctionCall",
																"src": "11275:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11254:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "11254:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "11193:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11225:5:10",
														"nodeType": "YulTypedName",
														"src": "11225:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11235:8:10",
														"nodeType": "YulTypedName",
														"src": "11235:8:10",
														"type": ""
													}
												],
												"src": "11193:102:10"
											},
											{
												"body": {
													"nativeSrc": "11374:775:10",
													"nodeType": "YulBlock",
													"src": "11374:775:10",
													"statements": [
														{
															"nativeSrc": "11384:15:10",
															"nodeType": "YulAssignment",
															"src": "11384:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "11393:6:10",
																"nodeType": "YulIdentifier",
																"src": "11393:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11384:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11384:5:10"
																}
															]
														},
														{
															"nativeSrc": "11408:14:10",
															"nodeType": "YulAssignment",
															"src": "11408:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "11417:5:10",
																"nodeType": "YulIdentifier",
																"src": "11417:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11408:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11408:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11466:677:10",
																"nodeType": "YulBlock",
																"src": "11466:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "11554:22:10",
																			"nodeType": "YulBlock",
																			"src": "11554:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11556:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "11556:16:10"
																						},
																						"nativeSrc": "11556:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11556:18:10"
																					},
																					"nativeSrc": "11556:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "11556:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11532:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "11532:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "11542:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11542:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "11547:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "11547:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "11538:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "11538:3:10"
																					},
																					"nativeSrc": "11538:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "11538:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11529:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "11529:2:10"
																			},
																			"nativeSrc": "11529:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11529:24:10"
																		},
																		"nativeSrc": "11526:50:10",
																		"nodeType": "YulIf",
																		"src": "11526:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "11621:419:10",
																			"nodeType": "YulBlock",
																			"src": "11621:419:10",
																			"statements": [
																				{
																					"nativeSrc": "12001:25:10",
																					"nodeType": "YulAssignment",
																					"src": "12001:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "12014:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "12014:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "12021:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "12021:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "12010:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "12010:3:10"
																						},
																						"nativeSrc": "12010:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "12010:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "12001:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "12001:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "11596:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "11596:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11606:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11606:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11592:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11592:3:10"
																			},
																			"nativeSrc": "11592:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11592:16:10"
																		},
																		"nativeSrc": "11589:451:10",
																		"nodeType": "YulIf",
																		"src": "11589:451:10"
																	},
																	{
																		"nativeSrc": "12053:23:10",
																		"nodeType": "YulAssignment",
																		"src": "12053:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12065:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "12065:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "12071:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "12071:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "12061:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12061:3:10"
																			},
																			"nativeSrc": "12061:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12061:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "12053:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12053:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12089:44:10",
																		"nodeType": "YulAssignment",
																		"src": "12089:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "12124:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "12124:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "12101:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "12101:22:10"
																			},
																			"nativeSrc": "12101:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12101:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "12089:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "12089:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11442:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "11442:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11452:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11452:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11439:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11439:2:10"
																},
																"nativeSrc": "11439:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11439:15:10"
															},
															"nativeSrc": "11431:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11455:2:10",
																"nodeType": "YulBlock",
																"src": "11455:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "11435:3:10",
																"nodeType": "YulBlock",
																"src": "11435:3:10",
																"statements": []
															},
															"src": "11431:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "11301:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "11329:6:10",
														"nodeType": "YulTypedName",
														"src": "11329:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "11337:5:10",
														"nodeType": "YulTypedName",
														"src": "11337:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11344:8:10",
														"nodeType": "YulTypedName",
														"src": "11344:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "11354:3:10",
														"nodeType": "YulTypedName",
														"src": "11354:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11362:5:10",
														"nodeType": "YulTypedName",
														"src": "11362:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "11369:4:10",
														"nodeType": "YulTypedName",
														"src": "11369:4:10",
														"type": ""
													}
												],
												"src": "11301:848:10"
											},
											{
												"body": {
													"nativeSrc": "12215:1013:10",
													"nodeType": "YulBlock",
													"src": "12215:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "12410:20:10",
																"nodeType": "YulBlock",
																"src": "12410:20:10",
																"statements": [
																	{
																		"nativeSrc": "12412:10:10",
																		"nodeType": "YulAssignment",
																		"src": "12412:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12421:1:10",
																			"nodeType": "YulLiteral",
																			"src": "12421:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12412:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12412:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12423:5:10",
																		"nodeType": "YulLeave",
																		"src": "12423:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12400:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "12400:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12393:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12393:6:10"
																},
																"nativeSrc": "12393:16:10",
																"nodeType": "YulFunctionCall",
																"src": "12393:16:10"
															},
															"nativeSrc": "12390:40:10",
															"nodeType": "YulIf",
															"src": "12390:40:10"
														},
														{
															"body": {
																"nativeSrc": "12455:20:10",
																"nodeType": "YulBlock",
																"src": "12455:20:10",
																"statements": [
																	{
																		"nativeSrc": "12457:10:10",
																		"nodeType": "YulAssignment",
																		"src": "12457:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12466:1:10",
																			"nodeType": "YulLiteral",
																			"src": "12466:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12457:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12457:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12468:5:10",
																		"nodeType": "YulLeave",
																		"src": "12468:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12449:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12449:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12442:6:10"
																},
																"nativeSrc": "12442:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12442:12:10"
															},
															"nativeSrc": "12439:36:10",
															"nodeType": "YulIf",
															"src": "12439:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12585:20:10",
																		"nodeType": "YulBlock",
																		"src": "12585:20:10",
																		"statements": [
																			{
																				"nativeSrc": "12587:10:10",
																				"nodeType": "YulAssignment",
																				"src": "12587:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12596:1:10",
																					"nodeType": "YulLiteral",
																					"src": "12596:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12587:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12587:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "12598:5:10",
																				"nodeType": "YulLeave",
																				"src": "12598:5:10"
																			}
																		]
																	},
																	"nativeSrc": "12578:27:10",
																	"nodeType": "YulCase",
																	"src": "12578:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12583:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12583:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "12629:176:10",
																		"nodeType": "YulBlock",
																		"src": "12629:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "12664:22:10",
																					"nodeType": "YulBlock",
																					"src": "12664:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "12666:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "12666:16:10"
																								},
																								"nativeSrc": "12666:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "12666:18:10"
																							},
																							"nativeSrc": "12666:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "12666:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "12649:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "12649:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12659:3:10",
																							"nodeType": "YulLiteral",
																							"src": "12659:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "12646:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "12646:2:10"
																					},
																					"nativeSrc": "12646:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12646:17:10"
																				},
																				"nativeSrc": "12643:43:10",
																				"nodeType": "YulIf",
																				"src": "12643:43:10"
																			},
																			{
																				"nativeSrc": "12699:25:10",
																				"nodeType": "YulAssignment",
																				"src": "12699:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12712:1:10",
																							"nodeType": "YulLiteral",
																							"src": "12712:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "12715:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "12715:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "12708:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "12708:3:10"
																					},
																					"nativeSrc": "12708:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12708:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12699:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "12699:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12755:22:10",
																					"nodeType": "YulBlock",
																					"src": "12755:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "12757:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "12757:16:10"
																								},
																								"nativeSrc": "12757:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "12757:18:10"
																							},
																							"nativeSrc": "12757:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "12757:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "12743:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "12743:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "12750:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "12750:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "12740:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "12740:2:10"
																					},
																					"nativeSrc": "12740:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12740:14:10"
																				},
																				"nativeSrc": "12737:40:10",
																				"nodeType": "YulIf",
																				"src": "12737:40:10"
																			},
																			{
																				"nativeSrc": "12790:5:10",
																				"nodeType": "YulLeave",
																				"src": "12790:5:10"
																			}
																		]
																	},
																	"nativeSrc": "12614:191:10",
																	"nodeType": "YulCase",
																	"src": "12614:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12619:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12619:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "12535:4:10",
																"nodeType": "YulIdentifier",
																"src": "12535:4:10"
															},
															"nativeSrc": "12528:277:10",
															"nodeType": "YulSwitch",
															"src": "12528:277:10"
														},
														{
															"body": {
																"nativeSrc": "12937:123:10",
																"nodeType": "YulBlock",
																"src": "12937:123:10",
																"statements": [
																	{
																		"nativeSrc": "12951:28:10",
																		"nodeType": "YulAssignment",
																		"src": "12951:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12964:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "12964:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "12970:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "12970:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "12960:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12960:3:10"
																			},
																			"nativeSrc": "12960:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12960:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12951:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "12951:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13010:22:10",
																			"nodeType": "YulBlock",
																			"src": "13010:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "13012:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "13012:16:10"
																						},
																						"nativeSrc": "13012:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "13012:18:10"
																					},
																					"nativeSrc": "13012:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "13012:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "12998:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "12998:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "13005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13005:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12995:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "12995:2:10"
																			},
																			"nativeSrc": "12995:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12995:14:10"
																		},
																		"nativeSrc": "12992:40:10",
																		"nodeType": "YulIf",
																		"src": "12992:40:10"
																	},
																	{
																		"nativeSrc": "13045:5:10",
																		"nodeType": "YulLeave",
																		"src": "13045:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12840:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "12840:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12846:2:10",
																						"nodeType": "YulLiteral",
																						"src": "12846:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12837:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12837:2:10"
																				},
																				"nativeSrc": "12837:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12837:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12854:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "12854:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12864:2:10",
																						"nodeType": "YulLiteral",
																						"src": "12864:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12851:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12851:2:10"
																				},
																				"nativeSrc": "12851:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12851:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12833:3:10"
																		},
																		"nativeSrc": "12833:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12833:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12889:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "12889:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12895:3:10",
																						"nodeType": "YulLiteral",
																						"src": "12895:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12886:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12886:2:10"
																				},
																				"nativeSrc": "12886:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12886:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12904:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "12904:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12914:2:10",
																						"nodeType": "YulLiteral",
																						"src": "12914:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12901:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "12901:2:10"
																				},
																				"nativeSrc": "12901:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12901:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12882:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12882:3:10"
																		},
																		"nativeSrc": "12882:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12882:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12817:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12817:2:10"
																},
																"nativeSrc": "12817:111:10",
																"nodeType": "YulFunctionCall",
																"src": "12817:111:10"
															},
															"nativeSrc": "12814:246:10",
															"nodeType": "YulIf",
															"src": "12814:246:10"
														},
														{
															"nativeSrc": "13070:57:10",
															"nodeType": "YulAssignment",
															"src": "13070:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13104:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13104:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13107:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13107:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13113:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "13113:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "13123:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13123:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "13085:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "13085:18:10"
																},
																"nativeSrc": "13085:42:10",
																"nodeType": "YulFunctionCall",
																"src": "13085:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13070:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13070:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "13077:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13077:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13166:22:10",
																"nodeType": "YulBlock",
																"src": "13166:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13168:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13168:16:10"
																			},
																			"nativeSrc": "13168:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13168:18:10"
																		},
																		"nativeSrc": "13168:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13168:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "13143:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13143:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "13154:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "13154:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "13159:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13159:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "13150:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13150:3:10"
																		},
																		"nativeSrc": "13150:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13150:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13140:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13140:2:10"
																},
																"nativeSrc": "13140:25:10",
																"nodeType": "YulFunctionCall",
																"src": "13140:25:10"
															},
															"nativeSrc": "13137:51:10",
															"nodeType": "YulIf",
															"src": "13137:51:10"
														},
														{
															"nativeSrc": "13197:25:10",
															"nodeType": "YulAssignment",
															"src": "13197:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "13210:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13210:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13217:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13217:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13206:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13206:3:10"
																},
																"nativeSrc": "13206:16:10",
																"nodeType": "YulFunctionCall",
																"src": "13206:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13197:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13197:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "12155:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12185:4:10",
														"nodeType": "YulTypedName",
														"src": "12185:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12191:8:10",
														"nodeType": "YulTypedName",
														"src": "12191:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "12201:3:10",
														"nodeType": "YulTypedName",
														"src": "12201:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12209:5:10",
														"nodeType": "YulTypedName",
														"src": "12209:5:10",
														"type": ""
													}
												],
												"src": "12155:1073:10"
											},
											{
												"body": {
													"nativeSrc": "13277:43:10",
													"nodeType": "YulBlock",
													"src": "13277:43:10",
													"statements": [
														{
															"nativeSrc": "13287:27:10",
															"nodeType": "YulAssignment",
															"src": "13287:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13302:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13302:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13309:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13309:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13298:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13298:3:10"
																},
																"nativeSrc": "13298:16:10",
																"nodeType": "YulFunctionCall",
																"src": "13298:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13287:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "13287:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "13234:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13259:5:10",
														"nodeType": "YulTypedName",
														"src": "13259:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13269:7:10",
														"nodeType": "YulTypedName",
														"src": "13269:7:10",
														"type": ""
													}
												],
												"src": "13234:86:10"
											},
											{
												"body": {
													"nativeSrc": "13390:217:10",
													"nodeType": "YulBlock",
													"src": "13390:217:10",
													"statements": [
														{
															"nativeSrc": "13400:31:10",
															"nodeType": "YulAssignment",
															"src": "13400:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13426:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13426:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13408:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13408:17:10"
																},
																"nativeSrc": "13408:23:10",
																"nodeType": "YulFunctionCall",
																"src": "13408:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13400:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13400:4:10"
																}
															]
														},
														{
															"nativeSrc": "13440:37:10",
															"nodeType": "YulAssignment",
															"src": "13440:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13468:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "13468:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "13452:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "13452:15:10"
																},
																"nativeSrc": "13452:25:10",
																"nodeType": "YulFunctionCall",
																"src": "13452:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "13440:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "13440:8:10"
																}
															]
														},
														{
															"nativeSrc": "13487:113:10",
															"nodeType": "YulAssignment",
															"src": "13487:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13517:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13523:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "13523:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13533:66:10",
																		"nodeType": "YulLiteral",
																		"src": "13533:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "13496:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "13496:20:10"
																},
																"nativeSrc": "13496:104:10",
																"nodeType": "YulFunctionCall",
																"src": "13496:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13487:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13487:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "13326:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "13365:4:10",
														"nodeType": "YulTypedName",
														"src": "13365:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13371:8:10",
														"nodeType": "YulTypedName",
														"src": "13371:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13384:5:10",
														"nodeType": "YulTypedName",
														"src": "13384:5:10",
														"type": ""
													}
												],
												"src": "13326:281:10"
											},
											{
												"body": {
													"nativeSrc": "13661:362:10",
													"nodeType": "YulBlock",
													"src": "13661:362:10",
													"statements": [
														{
															"nativeSrc": "13671:25:10",
															"nodeType": "YulAssignment",
															"src": "13671:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13694:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13694:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13676:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13676:17:10"
																},
																"nativeSrc": "13676:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13676:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13671:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13671:1:10"
																}
															]
														},
														{
															"nativeSrc": "13705:25:10",
															"nodeType": "YulAssignment",
															"src": "13705:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13728:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13728:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13710:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13710:17:10"
																},
																"nativeSrc": "13710:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13710:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13705:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13705:1:10"
																}
															]
														},
														{
															"nativeSrc": "13739:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "13739:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13762:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13762:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13765:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13765:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13758:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13758:3:10"
																},
																"nativeSrc": "13758:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13758:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13743:11:10",
																	"nodeType": "YulTypedName",
																	"src": "13743:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13776:41:10",
															"nodeType": "YulAssignment",
															"src": "13776:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13805:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "13805:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13787:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13787:17:10"
																},
																"nativeSrc": "13787:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13787:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13776:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "13776:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13994:22:10",
																"nodeType": "YulBlock",
																"src": "13994:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13996:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13996:16:10"
																			},
																			"nativeSrc": "13996:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13996:18:10"
																		},
																		"nativeSrc": "13996:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13996:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13927:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "13927:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13920:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "13920:6:10"
																				},
																				"nativeSrc": "13920:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13920:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13950:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "13950:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13957:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "13957:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13966:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "13966:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13953:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "13953:3:10"
																						},
																						"nativeSrc": "13953:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "13953:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13947:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "13947:2:10"
																				},
																				"nativeSrc": "13947:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13947:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13900:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13900:2:10"
																		},
																		"nativeSrc": "13900:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13900:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13880:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13880:6:10"
																},
																"nativeSrc": "13880:113:10",
																"nodeType": "YulFunctionCall",
																"src": "13880:113:10"
															},
															"nativeSrc": "13877:139:10",
															"nodeType": "YulIf",
															"src": "13877:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13613:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13644:1:10",
														"nodeType": "YulTypedName",
														"src": "13644:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13647:1:10",
														"nodeType": "YulTypedName",
														"src": "13647:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13653:7:10",
														"nodeType": "YulTypedName",
														"src": "13653:7:10",
														"type": ""
													}
												],
												"src": "13613:410:10"
											},
											{
												"body": {
													"nativeSrc": "14073:147:10",
													"nodeType": "YulBlock",
													"src": "14073:147:10",
													"statements": [
														{
															"nativeSrc": "14083:25:10",
															"nodeType": "YulAssignment",
															"src": "14083:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14106:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14106:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14088:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14088:17:10"
																},
																"nativeSrc": "14088:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14088:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14083:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14083:1:10"
																}
															]
														},
														{
															"nativeSrc": "14117:25:10",
															"nodeType": "YulAssignment",
															"src": "14117:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14140:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14140:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14122:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14122:17:10"
																},
																"nativeSrc": "14122:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14122:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14117:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14117:1:10"
																}
															]
														},
														{
															"nativeSrc": "14151:16:10",
															"nodeType": "YulAssignment",
															"src": "14151:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14162:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14162:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14165:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14165:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14158:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14158:3:10"
																},
																"nativeSrc": "14158:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14158:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14151:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14151:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14191:22:10",
																"nodeType": "YulBlock",
																"src": "14191:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14193:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14193:16:10"
																			},
																			"nativeSrc": "14193:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14193:18:10"
																		},
																		"nativeSrc": "14193:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14193:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14183:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14183:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14186:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14186:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14180:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14180:2:10"
																},
																"nativeSrc": "14180:10:10",
																"nodeType": "YulFunctionCall",
																"src": "14180:10:10"
															},
															"nativeSrc": "14177:36:10",
															"nodeType": "YulIf",
															"src": "14177:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14029:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14060:1:10",
														"nodeType": "YulTypedName",
														"src": "14060:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14063:1:10",
														"nodeType": "YulTypedName",
														"src": "14063:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14069:3:10",
														"nodeType": "YulTypedName",
														"src": "14069:3:10",
														"type": ""
													}
												],
												"src": "14029:191:10"
											},
											{
												"body": {
													"nativeSrc": "14291:53:10",
													"nodeType": "YulBlock",
													"src": "14291:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14308:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14308:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14331:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14331:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14313:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "14313:17:10"
																		},
																		"nativeSrc": "14313:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14313:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:10"
																},
																"nativeSrc": "14301:37:10",
																"nodeType": "YulFunctionCall",
																"src": "14301:37:10"
															},
															"nativeSrc": "14301:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "14301:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "14226:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14279:5:10",
														"nodeType": "YulTypedName",
														"src": "14279:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14286:3:10",
														"nodeType": "YulTypedName",
														"src": "14286:3:10",
														"type": ""
													}
												],
												"src": "14226:118:10"
											},
											{
												"body": {
													"nativeSrc": "14504:288:10",
													"nodeType": "YulBlock",
													"src": "14504:288:10",
													"statements": [
														{
															"nativeSrc": "14514:26:10",
															"nodeType": "YulAssignment",
															"src": "14514:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14526:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14526:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14537:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14537:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14522:3:10"
																},
																"nativeSrc": "14522:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14522:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14514:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14514:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14594:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14594:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14607:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14607:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14618:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14618:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14603:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14603:3:10"
																		},
																		"nativeSrc": "14603:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14603:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14550:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14550:43:10"
																},
																"nativeSrc": "14550:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14550:71:10"
															},
															"nativeSrc": "14550:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14550:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14675:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14675:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14688:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14688:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14699:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14699:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14684:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14684:3:10"
																		},
																		"nativeSrc": "14684:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14684:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14631:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14631:43:10"
																},
																"nativeSrc": "14631:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14631:72:10"
															},
															"nativeSrc": "14631:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14631:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14757:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14757:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14770:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14770:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14781:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14781:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14766:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14766:3:10"
																		},
																		"nativeSrc": "14766:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14766:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14713:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14713:43:10"
																},
																"nativeSrc": "14713:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14713:72:10"
															},
															"nativeSrc": "14713:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14713:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14350:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14460:9:10",
														"nodeType": "YulTypedName",
														"src": "14460:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14472:6:10",
														"nodeType": "YulTypedName",
														"src": "14472:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14480:6:10",
														"nodeType": "YulTypedName",
														"src": "14480:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14488:6:10",
														"nodeType": "YulTypedName",
														"src": "14488:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14499:4:10",
														"nodeType": "YulTypedName",
														"src": "14499:4:10",
														"type": ""
													}
												],
												"src": "14350:442:10"
											},
											{
												"body": {
													"nativeSrc": "14896:124:10",
													"nodeType": "YulBlock",
													"src": "14896:124:10",
													"statements": [
														{
															"nativeSrc": "14906:26:10",
															"nodeType": "YulAssignment",
															"src": "14906:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14918:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14918:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14929:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14929:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14914:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14914:3:10"
																},
																"nativeSrc": "14914:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14914:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14906:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14906:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14986:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14986:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14999:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14999:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15010:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15010:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14995:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14995:3:10"
																		},
																		"nativeSrc": "14995:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14995:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14942:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14942:43:10"
																},
																"nativeSrc": "14942:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14942:71:10"
															},
															"nativeSrc": "14942:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14942:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14798:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14868:9:10",
														"nodeType": "YulTypedName",
														"src": "14868:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14880:6:10",
														"nodeType": "YulTypedName",
														"src": "14880:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14891:4:10",
														"nodeType": "YulTypedName",
														"src": "14891:4:10",
														"type": ""
													}
												],
												"src": "14798:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initial supply cannot exceed max\")\n\n        mstore(add(memPtr, 32), \" supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516128063803806128068339818101604052810190610031919061064e565b33858581600390816100439190610901565b5080600490816100539190610901565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610a0f565b60405180910390fd5b6100d58161016560201b60201c565b5080831115610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011090610aa8565b60405180910390fd5b816006819055508060078190555061015b3361013961022860201b60201c565b600a6101459190610c2e565b856101509190610c78565b61023060201b60201c565b5050505050610d49565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a0575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102979190610a0f565b60405180910390fd5b6102b15f83836102b560201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610305578060025f8282546102f99190610cb9565b925050819055506103d3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561038e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038593929190610cfb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361041a578060025f8282540392505081905550610464565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104c19190610d30565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61052d826104e7565b810181811067ffffffffffffffff8211171561054c5761054b6104f7565b5b80604052505050565b5f61055e6104ce565b905061056a8282610524565b919050565b5f67ffffffffffffffff821115610589576105886104f7565b5b610592826104e7565b9050602081019050919050565b8281835e5f83830152505050565b5f6105bf6105ba8461056f565b610555565b9050828152602081018484840111156105db576105da6104e3565b5b6105e684828561059f565b509392505050565b5f82601f830112610602576106016104df565b5b81516106128482602086016105ad565b91505092915050565b5f819050919050565b61062d8161061b565b8114610637575f80fd5b50565b5f8151905061064881610624565b92915050565b5f805f805f60a08688031215610667576106666104d7565b5b5f86015167ffffffffffffffff811115610684576106836104db565b5b610690888289016105ee565b955050602086015167ffffffffffffffff8111156106b1576106b06104db565b5b6106bd888289016105ee565b94505060406106ce8882890161063a565b93505060606106df8882890161063a565b92505060806106f08882890161063a565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061074b57607f821691505b60208210810361075e5761075d610707565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610785565b6107ca8683610785565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6108056108006107fb8461061b565b6107e2565b61061b565b9050919050565b5f819050919050565b61081e836107eb565b61083261082a8261080c565b848454610791565b825550505050565b5f90565b61084661083a565b610851818484610815565b505050565b5b81811015610874576108695f8261083e565b600181019050610857565b5050565b601f8211156108b95761088a81610764565b61089384610776565b810160208510156108a2578190505b6108b66108ae85610776565b830182610856565b50505b505050565b5f82821c905092915050565b5f6108d95f19846008026108be565b1980831691505092915050565b5f6108f183836108ca565b9150826002028217905092915050565b61090a826106fd565b67ffffffffffffffff811115610923576109226104f7565b5b61092d8254610734565b610938828285610878565b5f60209050601f831160018114610969575f8415610957578287015190505b61096185826108e6565b8655506109c8565b601f19841661097786610764565b5f5b8281101561099e57848901518255600182019150602085019450602081019050610979565b868310156109bb57848901516109b7601f8916826108ca565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109f9826109d0565b9050919050565b610a09816109ef565b82525050565b5f602082019050610a225f830184610a00565b92915050565b5f82825260208201905092915050565b7f496e697469616c20737570706c792063616e6e6f7420657863656564206d61785f8201527f20737570706c7900000000000000000000000000000000000000000000000000602082015250565b5f610a92602783610a28565b9150610a9d82610a38565b604082019050919050565b5f6020820190508181035f830152610abf81610a86565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610b4857808604811115610b2457610b23610ac6565b5b6001851615610b335780820291505b8081029050610b4185610af3565b9450610b08565b94509492505050565b5f82610b605760019050610c1b565b81610b6d575f9050610c1b565b8160018114610b835760028114610b8d57610bbc565b6001915050610c1b565b60ff841115610b9f57610b9e610ac6565b5b8360020a915084821115610bb657610bb5610ac6565b5b50610c1b565b5060208310610133831016604e8410600b8410161715610bf15782820a905083811115610bec57610beb610ac6565b5b610c1b565b610bfe8484846001610aff565b92509050818404811115610c1557610c14610ac6565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610c388261061b565b9150610c4383610c22565b9250610c707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b51565b905092915050565b5f610c828261061b565b9150610c8d8361061b565b9250828202610c9b8161061b565b91508282048414831517610cb257610cb1610ac6565b5b5092915050565b5f610cc38261061b565b9150610cce8361061b565b9250828201905080821115610ce657610ce5610ac6565b5b92915050565b610cf58161061b565b82525050565b5f606082019050610d0e5f830186610a00565b610d1b6020830185610cec565b610d286040830184610cec565b949350505050565b5f602082019050610d435f830184610cec565b92915050565b611ab080610d565f395ff3fe608060405260043610610134575f3560e01c80637ff9b596116100aa578063d0febe4c1161006e578063d0febe4c1461041a578063d5abeb0114610424578063dd62ed3e1461044e578063e086e5ec1461048a578063e4b7fb73146104a0578063f2fde38b146104ca57610134565b80637ff9b596146103365780638da5cb5b1461036057806395d89b411461038a578063a9059cbb146103b4578063c4e41b22146103f057610134565b806340c10f19116100fc57806340c10f191461022e5780635f515226146102565780636a61e5fc146102925780636f9fb98a146102ba57806370a08231146102e4578063715018a61461032057610134565b806306fdde0314610138578063095ea7b31461016257806318160ddd1461019e57806323b872dd146101c8578063313ce56714610204575b5f80fd5b348015610143575f80fd5b5061014c6104f2565b6040516101599190611309565b60405180910390f35b34801561016d575f80fd5b50610188600480360381019061018391906113ba565b610582565b6040516101959190611412565b60405180910390f35b3480156101a9575f80fd5b506101b26105a4565b6040516101bf919061143a565b60405180910390f35b3480156101d3575f80fd5b506101ee60048036038101906101e99190611453565b6105ad565b6040516101fb9190611412565b60405180910390f35b34801561020f575f80fd5b506102186105db565b60405161022591906114be565b60405180910390f35b348015610239575f80fd5b50610254600480360381019061024f91906113ba565b6105e3565b005b348015610261575f80fd5b5061027c600480360381019061027791906114d7565b61066e565b604051610289919061143a565b60405180910390f35b34801561029d575f80fd5b506102b860048036038101906102b39190611502565b61067f565b005b3480156102c5575f80fd5b506102ce6106d3565b6040516102db919061143a565b60405180910390f35b3480156102ef575f80fd5b5061030a600480360381019061030591906114d7565b6106e2565b604051610317919061143a565b60405180910390f35b34801561032b575f80fd5b50610334610727565b005b348015610341575f80fd5b5061034a61073a565b604051610357919061143a565b60405180910390f35b34801561036b575f80fd5b50610374610740565b604051610381919061153c565b60405180910390f35b348015610395575f80fd5b5061039e610768565b6040516103ab9190611309565b60405180910390f35b3480156103bf575f80fd5b506103da60048036038101906103d591906113ba565b6107f8565b6040516103e79190611412565b60405180910390f35b3480156103fb575f80fd5b5061040461081a565b604051610411919061143a565b60405180910390f35b610422610828565b005b34801561042f575f80fd5b5061043861094d565b604051610445919061143a565b60405180910390f35b348015610459575f80fd5b50610474600480360381019061046f9190611555565b610953565b604051610481919061143a565b60405180910390f35b348015610495575f80fd5b5061049e6109d5565b005b3480156104ab575f80fd5b506104b4610a8f565b6040516104c1919061143a565b60405180910390f35b3480156104d5575f80fd5b506104f060048036038101906104eb91906114d7565b610ac8565b005b606060038054610501906115c0565b80601f016020809104026020016040519081016040528092919081815260200182805461052d906115c0565b80156105785780601f1061054f57610100808354040283529160200191610578565b820191905f5260205f20905b81548152906001019060200180831161055b57829003601f168201915b5050505050905090565b5f8061058c610b4c565b9050610599818585610b53565b600191505092915050565b5f600254905090565b5f806105b7610b4c565b90506105c4858285610b65565b6105cf858585610bf8565b60019150509392505050565b5f6012905090565b6105eb610ce8565b6105f36105db565b600a6105ff919061174c565b60075461060c9190611796565b816106156105a4565b61061f91906117d7565b1115610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790611854565b60405180910390fd5b61066a8282610d6f565b5050565b5f610678826106e2565b9050919050565b610687610ce8565b5f81116106c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c0906118bc565b60405180910390fd5b8060068190555050565b5f6106dc610ce8565b47905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61072f610ce8565b6107385f610dee565b565b60065481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610777906115c0565b80601f01602080910402602001604051908101604052809291908181526020018280546107a3906115c0565b80156107ee5780601f106107c5576101008083540402835291602001916107ee565b820191905f5260205f20905b8154815290600101906020018083116107d157829003601f168201915b5050505050905090565b5f80610802610b4c565b905061080f818585610bf8565b600191505092915050565b5f6108236105a4565b905090565b5f341161086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611924565b60405180910390fd5b5f600654346108799190611796565b90506108836105db565b600a61088f919061174c565b60075461089c9190611796565b816108a56105a4565b6108af91906117d7565b11156108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790611854565b60405180910390fd5b6108fa3382610d6f565b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f333483604051610942929190611942565b60405180910390a250565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6109dd610ce8565b5f6109e6610740565b73ffffffffffffffffffffffffffffffffffffffff1647604051610a0990611996565b5f6040518083038185875af1925050503d805f8114610a43576040519150601f19603f3d011682016040523d82523d5f602084013e610a48565b606091505b5050905080610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a83906119f4565b60405180910390fd5b50565b5f610a986105a4565b610aa06105db565b600a610aac919061174c565b600754610ab99190611796565b610ac39190611a12565b905090565b610ad0610ce8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b40575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b37919061153c565b60405180910390fd5b610b4981610dee565b50565b5f33905090565b610b608383836001610eb1565b505050565b5f610b708484610953565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610bf25781811015610be3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610bda93929190611a45565b60405180910390fd5b610bf184848484035f610eb1565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c68575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c5f919061153c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cd8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ccf919061153c565b60405180910390fd5b610ce3838383611080565b505050565b610cf0610b4c565b73ffffffffffffffffffffffffffffffffffffffff16610d0e610740565b73ffffffffffffffffffffffffffffffffffffffff1614610d6d57610d31610b4c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d64919061153c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ddf575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dd6919061153c565b60405180910390fd5b610dea5f8383611080565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f21575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f18919061153c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f91575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f88919061153c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561107a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611071919061143a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110d0578060025f8282546110c491906117d7565b9250508190555061119e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611159578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161115093929190611a45565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e5578060025f828254039250508190555061122f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161128c919061143a565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112db82611299565b6112e581856112a3565b93506112f58185602086016112b3565b6112fe816112c1565b840191505092915050565b5f6020820190508181035f83015261132181846112d1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113568261132d565b9050919050565b6113668161134c565b8114611370575f80fd5b50565b5f813590506113818161135d565b92915050565b5f819050919050565b61139981611387565b81146113a3575f80fd5b50565b5f813590506113b481611390565b92915050565b5f80604083850312156113d0576113cf611329565b5b5f6113dd85828601611373565b92505060206113ee858286016113a6565b9150509250929050565b5f8115159050919050565b61140c816113f8565b82525050565b5f6020820190506114255f830184611403565b92915050565b61143481611387565b82525050565b5f60208201905061144d5f83018461142b565b92915050565b5f805f6060848603121561146a57611469611329565b5b5f61147786828701611373565b935050602061148886828701611373565b9250506040611499868287016113a6565b9150509250925092565b5f60ff82169050919050565b6114b8816114a3565b82525050565b5f6020820190506114d15f8301846114af565b92915050565b5f602082840312156114ec576114eb611329565b5b5f6114f984828501611373565b91505092915050565b5f6020828403121561151757611516611329565b5b5f611524848285016113a6565b91505092915050565b6115368161134c565b82525050565b5f60208201905061154f5f83018461152d565b92915050565b5f806040838503121561156b5761156a611329565b5b5f61157885828601611373565b925050602061158985828601611373565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115d757607f821691505b6020821081036115ea576115e9611593565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156116725780860481111561164e5761164d6115f0565b5b600185161561165d5780820291505b808102905061166b8561161d565b9450611632565b94509492505050565b5f8261168a5760019050611745565b81611697575f9050611745565b81600181146116ad57600281146116b7576116e6565b6001915050611745565b60ff8411156116c9576116c86115f0565b5b8360020a9150848211156116e0576116df6115f0565b5b50611745565b5060208310610133831016604e8410600b841016171561171b5782820a905083811115611716576117156115f0565b5b611745565b6117288484846001611629565b9250905081840481111561173f5761173e6115f0565b5b81810290505b9392505050565b5f61175682611387565b9150611761836114a3565b925061178e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461167b565b905092915050565b5f6117a082611387565b91506117ab83611387565b92508282026117b981611387565b915082820484148315176117d0576117cf6115f0565b5b5092915050565b5f6117e182611387565b91506117ec83611387565b9250828201905080821115611804576118036115f0565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f61183e6012836112a3565b91506118498261180a565b602082019050919050565b5f6020820190508181035f83015261186b81611832565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e2030000000005f82015250565b5f6118a6601c836112a3565b91506118b182611872565b602082019050919050565b5f6020820190508181035f8301526118d38161189a565b9050919050565b7f53656e642045544820746f2062757920746f6b656e73000000000000000000005f82015250565b5f61190e6016836112a3565b9150611919826118da565b602082019050919050565b5f6020820190508181035f83015261193b81611902565b9050919050565b5f6040820190506119555f83018561142b565b611962602083018461142b565b9392505050565b5f81905092915050565b50565b5f6119815f83611969565b915061198c82611973565b5f82019050919050565b5f6119a082611976565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f6119de6011836112a3565b91506119e9826119aa565b602082019050919050565b5f6020820190508181035f830152611a0b816119d2565b9050919050565b5f611a1c82611387565b9150611a2783611387565b9250828203905081811115611a3f57611a3e6115f0565b5b92915050565b5f606082019050611a585f83018661152d565b611a65602083018561142b565b611a72604083018461142b565b94935050505056fea2646970667358221220badebb1a6ee2406dcef8fd6d95b13f6d8ba9fd155041d54519e4d9ff02ef7f8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2806 CODESIZE SUB DUP1 PUSH2 0x2806 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST CALLER DUP6 DUP6 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x901 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x901 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x165 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 DUP4 GT ISZERO PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110 SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x15B CALLER PUSH2 0x139 PUSH2 0x228 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST DUP6 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x230 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH2 0xD49 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B1 PUSH0 DUP4 DUP4 PUSH2 0x2B5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x305 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3D3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x38E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x41A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x464 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x52D DUP3 PUSH2 0x4E7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x54C JUMPI PUSH2 0x54B PUSH2 0x4F7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x55E PUSH2 0x4CE JUMP JUMPDEST SWAP1 POP PUSH2 0x56A DUP3 DUP3 PUSH2 0x524 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x589 JUMPI PUSH2 0x588 PUSH2 0x4F7 JUMP JUMPDEST JUMPDEST PUSH2 0x592 DUP3 PUSH2 0x4E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5BF PUSH2 0x5BA DUP5 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5DB JUMPI PUSH2 0x5DA PUSH2 0x4E3 JUMP JUMPDEST JUMPDEST PUSH2 0x5E6 DUP5 DUP3 DUP6 PUSH2 0x59F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x602 JUMPI PUSH2 0x601 PUSH2 0x4DF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x612 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x61B JUMP JUMPDEST DUP2 EQ PUSH2 0x637 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x648 DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x667 JUMPI PUSH2 0x666 PUSH2 0x4D7 JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x684 JUMPI PUSH2 0x683 PUSH2 0x4DB JUMP JUMPDEST JUMPDEST PUSH2 0x690 DUP9 DUP3 DUP10 ADD PUSH2 0x5EE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B0 PUSH2 0x4DB JUMP JUMPDEST JUMPDEST PUSH2 0x6BD DUP9 DUP3 DUP10 ADD PUSH2 0x5EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x6CE DUP9 DUP3 DUP10 ADD PUSH2 0x63A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6DF DUP9 DUP3 DUP10 ADD PUSH2 0x63A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6F0 DUP9 DUP3 DUP10 ADD PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x74B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75E JUMPI PUSH2 0x75D PUSH2 0x707 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7C0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x7CA DUP7 DUP4 PUSH2 0x785 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x805 PUSH2 0x800 PUSH2 0x7FB DUP5 PUSH2 0x61B JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81E DUP4 PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x832 PUSH2 0x82A DUP3 PUSH2 0x80C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x791 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x846 PUSH2 0x83A JUMP JUMPDEST PUSH2 0x851 DUP2 DUP5 DUP5 PUSH2 0x815 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x874 JUMPI PUSH2 0x869 PUSH0 DUP3 PUSH2 0x83E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8B9 JUMPI PUSH2 0x88A DUP2 PUSH2 0x764 JUMP JUMPDEST PUSH2 0x893 DUP5 PUSH2 0x776 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8A2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8B6 PUSH2 0x8AE DUP6 PUSH2 0x776 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x856 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8BE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F1 DUP4 DUP4 PUSH2 0x8CA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x90A DUP3 PUSH2 0x6FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x923 JUMPI PUSH2 0x922 PUSH2 0x4F7 JUMP JUMPDEST JUMPDEST PUSH2 0x92D DUP3 SLOAD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x938 DUP3 DUP3 DUP6 PUSH2 0x878 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x969 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x957 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x961 DUP6 DUP3 PUSH2 0x8E6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x977 DUP7 PUSH2 0x764 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x99E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x979 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9BB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9B7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8CA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F9 DUP3 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA09 DUP2 PUSH2 0x9EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA22 PUSH0 DUP4 ADD DUP5 PUSH2 0xA00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20737570706C792063616E6E6F7420657863656564206D6178 PUSH0 DUP3 ADD MSTORE PUSH32 0x20737570706C7900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA92 PUSH1 0x27 DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA9D DUP3 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xABF DUP2 PUSH2 0xA86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB48 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB24 JUMPI PUSH2 0xB23 PUSH2 0xAC6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB33 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB41 DUP6 PUSH2 0xAF3 JUMP JUMPDEST SWAP5 POP PUSH2 0xB08 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB60 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC1B JUMP JUMPDEST DUP2 PUSH2 0xB6D JUMPI PUSH0 SWAP1 POP PUSH2 0xC1B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB83 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB8D JUMPI PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC1B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0xAC6 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0xAC6 JUMP JUMPDEST JUMPDEST POP PUSH2 0xC1B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBF1 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xBEB PUSH2 0xAC6 JUMP JUMPDEST JUMPDEST PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xBFE DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xAFF JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0xAC6 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC38 DUP3 PUSH2 0x61B JUMP JUMPDEST SWAP2 POP PUSH2 0xC43 DUP4 PUSH2 0xC22 JUMP JUMPDEST SWAP3 POP PUSH2 0xC70 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC82 DUP3 PUSH2 0x61B JUMP JUMPDEST SWAP2 POP PUSH2 0xC8D DUP4 PUSH2 0x61B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC9B DUP2 PUSH2 0x61B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCB2 JUMPI PUSH2 0xCB1 PUSH2 0xAC6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC3 DUP3 PUSH2 0x61B JUMP JUMPDEST SWAP2 POP PUSH2 0xCCE DUP4 PUSH2 0x61B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0xAC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF5 DUP2 PUSH2 0x61B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD0E PUSH0 DUP4 ADD DUP7 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xD1B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0xD28 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCEC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD43 PUSH0 DUP4 ADD DUP5 PUSH2 0xCEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AB0 DUP1 PUSH2 0xD56 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FF9B596 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD0FEBE4C GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xE4B7FB73 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x3F0 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x5F515226 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x6A61E5FC EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x320 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39E PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x404 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x9D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B4 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x58C PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH2 0x599 DUP2 DUP6 DUP6 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B7 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH2 0x5C4 DUP6 DUP3 DUP6 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x5CF DUP6 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xA PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST DUP2 PUSH2 0x615 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST GT ISZERO PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66A DUP3 DUP3 PUSH2 0xD6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x678 DUP3 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C0 SWAP1 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DC PUSH2 0xCE8 JUMP JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72F PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x738 PUSH0 PUSH2 0xDEE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x777 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A3 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x802 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH2 0x80F DUP2 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x823 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 SLOAD CALLVALUE PUSH2 0x879 SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP PUSH2 0x883 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xA PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST DUP2 PUSH2 0x8A5 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST GT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E7 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8FA CALLER DUP3 PUSH2 0xD6F JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0x942 SWAP3 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DD PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH2 0x9E6 PUSH2 0x740 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xA09 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA98 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0xAA0 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xA PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAD0 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB49 DUP2 PUSH2 0xDEE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB60 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEB1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB70 DUP5 DUP5 PUSH2 0x953 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xBF2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBE3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEB1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC68 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE3 DUP4 DUP4 DUP4 PUSH2 0x1080 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCF0 PUSH2 0xB4C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0E PUSH2 0x740 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD6D JUMPI PUSH2 0xD31 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEA PUSH0 DUP4 DUP4 PUSH2 0x1080 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF21 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF91 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x107A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x119E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1159 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x122F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12DB DUP3 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x12E5 DUP2 DUP6 PUSH2 0x12A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH2 0x12C1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1356 DUP3 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x134C JUMP JUMPDEST DUP2 EQ PUSH2 0x1370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1381 DUP2 PUSH2 0x135D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1399 DUP2 PUSH2 0x1387 JUMP JUMPDEST DUP2 EQ PUSH2 0x13A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B4 DUP2 PUSH2 0x1390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13CF PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DD DUP6 DUP3 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EE DUP6 DUP3 DUP7 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x13F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1425 PUSH0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1434 DUP2 PUSH2 0x1387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144D PUSH0 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1477 DUP7 DUP3 DUP8 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1488 DUP7 DUP3 DUP8 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1499 DUP7 DUP3 DUP8 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B8 DUP2 PUSH2 0x14A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EC JUMPI PUSH2 0x14EB PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1517 JUMPI PUSH2 0x1516 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1524 DUP5 DUP3 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x134C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x154F PUSH0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1578 DUP6 DUP3 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1589 DUP6 DUP3 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x1593 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1672 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x164E JUMPI PUSH2 0x164D PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x165D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x166B DUP6 PUSH2 0x161D JUMP JUMPDEST SWAP5 POP PUSH2 0x1632 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x168A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1745 JUMP JUMPDEST DUP2 PUSH2 0x1697 JUMPI PUSH0 SWAP1 POP PUSH2 0x1745 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16AD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x16B7 JUMPI PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1745 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1745 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x171B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1716 JUMPI PUSH2 0x1715 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST PUSH2 0x1745 JUMP JUMPDEST PUSH2 0x1728 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1629 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x173F JUMPI PUSH2 0x173E PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1756 DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x1761 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x178E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A0 DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AB DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x17B9 DUP2 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E1 DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1804 JUMPI PUSH2 0x1803 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x183E PUSH1 0x12 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1849 DUP3 PUSH2 0x180A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186B DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A6 PUSH1 0x1C DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B1 DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D3 DUP2 PUSH2 0x189A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E642045544820746F2062757920746F6B656E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190E PUSH1 0x16 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1919 DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x193B DUP2 PUSH2 0x1902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1955 PUSH0 DUP4 ADD DUP6 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x1962 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1981 PUSH0 DUP4 PUSH2 0x1969 JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP3 PUSH2 0x1973 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A0 DUP3 PUSH2 0x1976 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE PUSH1 0x11 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A0B DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A1C DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A3F JUMPI PUSH2 0x1A3E PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A58 PUSH0 DUP4 ADD DUP7 PUSH2 0x152D JUMP JUMPDEST PUSH2 0x1A65 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x1A72 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xDE 0xBB BYTE PUSH15 0xE2406DCEF8FD6D95B13F6D8BA9FD15 POP COINBASE 0xD5 GASLIMIT NOT 0xE4 0xD9 SELFDESTRUCT MUL 0xEF PUSH32 0x8164736F6C634300081A00330000000000000000000000000000000000000000 ",
							"sourceMap": "315:3468:9:-:0;;;889:514;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1086:10;1062:5;1069:7;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1134:10:9::2;1116:14;:28;;1108:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1220:11;1207:10;:24;;;;1253:10;1241:9;:22;;;;1346:50;1352:10;1385;:8;;;:10;;:::i;:::-;1381:2;:14;;;;:::i;:::-;1364;:31;;;;:::i;:::-;1346:5;;;:50;;:::i;:::-;889:514:::0;;;;;315:3468;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1323::-;3056:6;3064;3072;3080;3088;3137:3;3125:9;3116:7;3112:23;3108:33;3105:120;;;3144:79;;:::i;:::-;3105:120;3285:1;3274:9;3270:17;3264:24;3315:18;3307:6;3304:30;3301:117;;;3337:79;;:::i;:::-;3301:117;3442:74;3508:7;3499:6;3488:9;3484:22;3442:74;:::i;:::-;3432:84;;3235:291;3586:2;3575:9;3571:18;3565:25;3617:18;3609:6;3606:30;3603:117;;;3639:79;;:::i;:::-;3603:117;3744:74;3810:7;3801:6;3790:9;3786:22;3744:74;:::i;:::-;3734:84;;3536:292;3867:2;3893:64;3949:7;3940:6;3929:9;3925:22;3893:64;:::i;:::-;3883:74;;3838:129;4006:2;4032:64;4088:7;4079:6;4068:9;4064:22;4032:64;:::i;:::-;4022:74;;3977:129;4145:3;4172:64;4228:7;4219:6;4208:9;4204:22;4172:64;:::i;:::-;4162:74;;4116:130;2930:1323;;;;;;;;:::o;4259:99::-;4311:6;4345:5;4339:12;4329:22;;4259:99;;;:::o;4364:180::-;4412:77;4409:1;4402:88;4509:4;4506:1;4499:15;4533:4;4530:1;4523:15;4550:320;4594:6;4631:1;4625:4;4621:12;4611:22;;4678:1;4672:4;4668:12;4699:18;4689:81;;4755:4;4747:6;4743:17;4733:27;;4689:81;4817:2;4809:6;4806:14;4786:18;4783:38;4780:84;;4836:18;;:::i;:::-;4780:84;4601:269;4550:320;;;:::o;4876:141::-;4925:4;4948:3;4940:11;;4971:3;4968:1;4961:14;5005:4;5002:1;4992:18;4984:26;;4876:141;;;:::o;5023:93::-;5060:6;5107:2;5102;5095:5;5091:14;5087:23;5077:33;;5023:93;;;:::o;5122:107::-;5166:8;5216:5;5210:4;5206:16;5185:37;;5122:107;;;;:::o;5235:393::-;5304:6;5354:1;5342:10;5338:18;5377:97;5407:66;5396:9;5377:97;:::i;:::-;5495:39;5525:8;5514:9;5495:39;:::i;:::-;5483:51;;5567:4;5563:9;5556:5;5552:21;5543:30;;5616:4;5606:8;5602:19;5595:5;5592:30;5582:40;;5311:317;;5235:393;;;;;:::o;5634:60::-;5662:3;5683:5;5676:12;;5634:60;;;:::o;5700:142::-;5750:9;5783:53;5801:34;5810:24;5828:5;5810:24;:::i;:::-;5801:34;:::i;:::-;5783:53;:::i;:::-;5770:66;;5700:142;;;:::o;5848:75::-;5891:3;5912:5;5905:12;;5848:75;;;:::o;5929:269::-;6039:39;6070:7;6039:39;:::i;:::-;6100:91;6149:41;6173:16;6149:41;:::i;:::-;6141:6;6134:4;6128:11;6100:91;:::i;:::-;6094:4;6087:105;6005:193;5929:269;;;:::o;6204:73::-;6249:3;6204:73;:::o;6283:189::-;6360:32;;:::i;:::-;6401:65;6459:6;6451;6445:4;6401:65;:::i;:::-;6336:136;6283:189;;:::o;6478:186::-;6538:120;6555:3;6548:5;6545:14;6538:120;;;6609:39;6646:1;6639:5;6609:39;:::i;:::-;6582:1;6575:5;6571:13;6562:22;;6538:120;;;6478:186;;:::o;6670:543::-;6771:2;6766:3;6763:11;6760:446;;;6805:38;6837:5;6805:38;:::i;:::-;6889:29;6907:10;6889:29;:::i;:::-;6879:8;6875:44;7072:2;7060:10;7057:18;7054:49;;;7093:8;7078:23;;7054:49;7116:80;7172:22;7190:3;7172:22;:::i;:::-;7162:8;7158:37;7145:11;7116:80;:::i;:::-;6775:431;;6760:446;6670:543;;;:::o;7219:117::-;7273:8;7323:5;7317:4;7313:16;7292:37;;7219:117;;;;:::o;7342:169::-;7386:6;7419:51;7467:1;7463:6;7455:5;7452:1;7448:13;7419:51;:::i;:::-;7415:56;7500:4;7494;7490:15;7480:25;;7393:118;7342:169;;;;:::o;7516:295::-;7592:4;7738:29;7763:3;7757:4;7738:29;:::i;:::-;7730:37;;7800:3;7797:1;7793:11;7787:4;7784:21;7776:29;;7516:295;;;;:::o;7816:1395::-;7933:37;7966:3;7933:37;:::i;:::-;8035:18;8027:6;8024:30;8021:56;;;8057:18;;:::i;:::-;8021:56;8101:38;8133:4;8127:11;8101:38;:::i;:::-;8186:67;8246:6;8238;8232:4;8186:67;:::i;:::-;8280:1;8304:4;8291:17;;8336:2;8328:6;8325:14;8353:1;8348:618;;;;9010:1;9027:6;9024:77;;;9076:9;9071:3;9067:19;9061:26;9052:35;;9024:77;9127:67;9187:6;9180:5;9127:67;:::i;:::-;9121:4;9114:81;8983:222;8318:887;;8348:618;8400:4;8396:9;8388:6;8384:22;8434:37;8466:4;8434:37;:::i;:::-;8493:1;8507:208;8521:7;8518:1;8515:14;8507:208;;;8600:9;8595:3;8591:19;8585:26;8577:6;8570:42;8651:1;8643:6;8639:14;8629:24;;8698:2;8687:9;8683:18;8670:31;;8544:4;8541:1;8537:12;8532:17;;8507:208;;;8743:6;8734:7;8731:19;8728:179;;;8801:9;8796:3;8792:19;8786:26;8844:48;8886:4;8878:6;8874:17;8863:9;8844:48;:::i;:::-;8836:6;8829:64;8751:156;8728:179;8953:1;8949;8941:6;8937:14;8933:22;8927:4;8920:36;8355:611;;;8318:887;;7908:1303;;;7816:1395;;:::o;9217:126::-;9254:7;9294:42;9287:5;9283:54;9272:65;;9217:126;;;:::o;9349:96::-;9386:7;9415:24;9433:5;9415:24;:::i;:::-;9404:35;;9349:96;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:169::-;9887:11;9921:6;9916:3;9909:19;9961:4;9956:3;9952:14;9937:29;;9803:169;;;;:::o;9978:226::-;10118:34;10114:1;10106:6;10102:14;10095:58;10187:9;10182:2;10174:6;10170:15;10163:34;9978:226;:::o;10210:366::-;10352:3;10373:67;10437:2;10432:3;10373:67;:::i;:::-;10366:74;;10449:93;10538:3;10449:93;:::i;:::-;10567:2;10562:3;10558:12;10551:19;;10210:366;;;:::o;10582:419::-;10748:4;10786:2;10775:9;10771:18;10763:26;;10835:9;10829:4;10825:20;10821:1;10810:9;10806:17;10799:47;10863:131;10989:4;10863:131;:::i;:::-;10855:139;;10582:419;;;:::o;11007:180::-;11055:77;11052:1;11045:88;11152:4;11149:1;11142:15;11176:4;11173:1;11166:15;11193:102;11235:8;11282:5;11279:1;11275:13;11254:34;;11193:102;;;:::o;11301:848::-;11362:5;11369:4;11393:6;11384:15;;11417:5;11408:14;;11431:712;11452:1;11442:8;11439:15;11431:712;;;11547:4;11542:3;11538:14;11532:4;11529:24;11526:50;;;11556:18;;:::i;:::-;11526:50;11606:1;11596:8;11592:16;11589:451;;;12021:4;12014:5;12010:16;12001:25;;11589:451;12071:4;12065;12061:15;12053:23;;12101:32;12124:8;12101:32;:::i;:::-;12089:44;;11431:712;;;11301:848;;;;;;;:::o;12155:1073::-;12209:5;12400:8;12390:40;;12421:1;12412:10;;12423:5;;12390:40;12449:4;12439:36;;12466:1;12457:10;;12468:5;;12439:36;12535:4;12583:1;12578:27;;;;12619:1;12614:191;;;;12528:277;;12578:27;12596:1;12587:10;;12598:5;;;12614:191;12659:3;12649:8;12646:17;12643:43;;;12666:18;;:::i;:::-;12643:43;12715:8;12712:1;12708:16;12699:25;;12750:3;12743:5;12740:14;12737:40;;;12757:18;;:::i;:::-;12737:40;12790:5;;;12528:277;;12914:2;12904:8;12901:16;12895:3;12889:4;12886:13;12882:36;12864:2;12854:8;12851:16;12846:2;12840:4;12837:12;12833:35;12817:111;12814:246;;;12970:8;12964:4;12960:19;12951:28;;13005:3;12998:5;12995:14;12992:40;;;13012:18;;:::i;:::-;12992:40;13045:5;;12814:246;13085:42;13123:3;13113:8;13107:4;13104:1;13085:42;:::i;:::-;13070:57;;;;13159:4;13154:3;13150:14;13143:5;13140:25;13137:51;;;13168:18;;:::i;:::-;13137:51;13217:4;13210:5;13206:16;13197:25;;12155:1073;;;;;;:::o;13234:86::-;13269:7;13309:4;13302:5;13298:16;13287:27;;13234:86;;;:::o;13326:281::-;13384:5;13408:23;13426:4;13408:23;:::i;:::-;13400:31;;13452:25;13468:8;13452:25;:::i;:::-;13440:37;;13496:104;13533:66;13523:8;13517:4;13496:104;:::i;:::-;13487:113;;13326:281;;;;:::o;13613:410::-;13653:7;13676:20;13694:1;13676:20;:::i;:::-;13671:25;;13710:20;13728:1;13710:20;:::i;:::-;13705:25;;13765:1;13762;13758:9;13787:30;13805:11;13787:30;:::i;:::-;13776:41;;13966:1;13957:7;13953:15;13950:1;13947:22;13927:1;13920:9;13900:83;13877:139;;13996:18;;:::i;:::-;13877:139;13661:362;13613:410;;;;:::o;14029:191::-;14069:3;14088:20;14106:1;14088:20;:::i;:::-;14083:25;;14122:20;14140:1;14122:20;:::i;:::-;14117:25;;14165:1;14162;14158:9;14151:16;;14186:3;14183:1;14180:10;14177:36;;;14193:18;;:::i;:::-;14177:36;14029:191;;;;:::o;14226:118::-;14313:24;14331:5;14313:24;:::i;:::-;14308:3;14301:37;14226:118;;:::o;14350:442::-;14499:4;14537:2;14526:9;14522:18;14514:26;;14550:71;14618:1;14607:9;14603:17;14594:6;14550:71;:::i;:::-;14631:72;14699:2;14688:9;14684:18;14675:6;14631:72;:::i;:::-;14713;14781:2;14770:9;14766:18;14757:6;14713:72;:::i;:::-;14350:442;;;;;;:::o;14798:222::-;14891:4;14929:2;14918:9;14914:18;14906:26;;14942:71;15010:1;14999:9;14995:17;14986:6;14942:71;:::i;:::-;14798:222;;;;:::o;315:3468:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2899,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3761,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3304,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3439,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2892,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2917,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3566,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3064,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4224,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2387,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1410,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1762,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokens_4507": {
									"entryPoint": 2088,
									"id": 4507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkBalance_4584": {
									"entryPoint": 1646,
									"id": 4584,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1499,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getContractBalance_4522": {
									"entryPoint": 1747,
									"id": 4522,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainingSupply_4612": {
									"entryPoint": 2703,
									"id": 4612,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalSupply_4594": {
									"entryPoint": 2074,
									"id": 4594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxSupply_4370": {
									"entryPoint": 2381,
									"id": 4370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_4458": {
									"entryPoint": 1507,
									"id": 4458,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1266,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1856,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1831,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTokenPrice_4571": {
									"entryPoint": 1663,
									"id": 4571,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1896,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenPrice_4368": {
									"entryPoint": 1850,
									"id": 4368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1444,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1453,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2760,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2040,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawETH_4551": {
									"entryPoint": 2517,
									"id": 4551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15829:10",
										"nodeType": "YulBlock",
										"src": "0:15829:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3791:519:10",
													"nodeType": "YulBlock",
													"src": "3791:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:10",
																"nodeType": "YulBlock",
																"src": "3837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:10"
																			},
																			"nativeSrc": "3839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:10"
																		},
																		"nativeSrc": "3839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:10"
																		},
																		"nativeSrc": "3808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:10"
																},
																"nativeSrc": "3804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:10"
															},
															"nativeSrc": "3801:119:10",
															"nodeType": "YulIf",
															"src": "3801:119:10"
														},
														{
															"nativeSrc": "3930:117:10",
															"nodeType": "YulBlock",
															"src": "3930:117:10",
															"statements": [
																{
																	"nativeSrc": "3945:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:10"
																				},
																				"nativeSrc": "4005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:10"
																		},
																		"nativeSrc": "3984:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:10",
															"nodeType": "YulBlock",
															"src": "4057:118:10",
															"statements": [
																{
																	"nativeSrc": "4072:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nativeSrc": "4133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:10"
																		},
																		"nativeSrc": "4112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:10",
															"nodeType": "YulBlock",
															"src": "4185:118:10",
															"statements": [
																{
																	"nativeSrc": "4200:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:10"
																				},
																				"nativeSrc": "4261:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:10"
																		},
																		"nativeSrc": "4240:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:10",
														"nodeType": "YulTypedName",
														"src": "3745:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:10",
														"nodeType": "YulTypedName",
														"src": "3756:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:10",
														"nodeType": "YulTypedName",
														"src": "3768:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:10",
														"nodeType": "YulTypedName",
														"src": "3776:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:10",
														"nodeType": "YulTypedName",
														"src": "3784:6:10",
														"type": ""
													}
												],
												"src": "3691:619:10"
											},
											{
												"body": {
													"nativeSrc": "4359:43:10",
													"nodeType": "YulBlock",
													"src": "4359:43:10",
													"statements": [
														{
															"nativeSrc": "4369:27:10",
															"nodeType": "YulAssignment",
															"src": "4369:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:10"
																},
																"nativeSrc": "4380:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:10",
														"nodeType": "YulTypedName",
														"src": "4341:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:10",
														"nodeType": "YulTypedName",
														"src": "4351:7:10",
														"type": ""
													}
												],
												"src": "4316:86:10"
											},
											{
												"body": {
													"nativeSrc": "4469:51:10",
													"nodeType": "YulBlock",
													"src": "4469:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:10"
																		},
																		"nativeSrc": "4491:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:10"
																},
																"nativeSrc": "4479:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:10"
															},
															"nativeSrc": "4479:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:10",
														"nodeType": "YulTypedName",
														"src": "4457:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:10",
														"nodeType": "YulTypedName",
														"src": "4464:3:10",
														"type": ""
													}
												],
												"src": "4408:112:10"
											},
											{
												"body": {
													"nativeSrc": "4620:120:10",
													"nodeType": "YulBlock",
													"src": "4620:120:10",
													"statements": [
														{
															"nativeSrc": "4630:26:10",
															"nodeType": "YulAssignment",
															"src": "4630:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:10"
																},
																"nativeSrc": "4638:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:10"
																		},
																		"nativeSrc": "4715:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:10"
																},
																"nativeSrc": "4666:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:10"
															},
															"nativeSrc": "4666:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:10",
														"nodeType": "YulTypedName",
														"src": "4592:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:10",
														"nodeType": "YulTypedName",
														"src": "4604:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:10",
														"nodeType": "YulTypedName",
														"src": "4615:4:10",
														"type": ""
													}
												],
												"src": "4526:214:10"
											},
											{
												"body": {
													"nativeSrc": "4812:263:10",
													"nodeType": "YulBlock",
													"src": "4812:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:10",
																"nodeType": "YulBlock",
																"src": "4858:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:10"
																			},
																			"nativeSrc": "4860:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:10"
																		},
																		"nativeSrc": "4860:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:10"
																		},
																		"nativeSrc": "4829:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:10"
																},
																"nativeSrc": "4825:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:10"
															},
															"nativeSrc": "4822:119:10",
															"nodeType": "YulIf",
															"src": "4822:119:10"
														},
														{
															"nativeSrc": "4951:117:10",
															"nodeType": "YulBlock",
															"src": "4951:117:10",
															"statements": [
																{
																	"nativeSrc": "4966:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:10"
																				},
																				"nativeSrc": "5026:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:10"
																		},
																		"nativeSrc": "5005:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:10",
														"nodeType": "YulTypedName",
														"src": "4782:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:10",
														"nodeType": "YulTypedName",
														"src": "4793:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:10",
														"nodeType": "YulTypedName",
														"src": "4805:6:10",
														"type": ""
													}
												],
												"src": "4746:329:10"
											},
											{
												"body": {
													"nativeSrc": "5147:263:10",
													"nodeType": "YulBlock",
													"src": "5147:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:10",
																"nodeType": "YulBlock",
																"src": "5193:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:10"
																			},
																			"nativeSrc": "5195:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:10"
																		},
																		"nativeSrc": "5195:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:10"
																		},
																		"nativeSrc": "5164:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:10"
																},
																"nativeSrc": "5160:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:10"
															},
															"nativeSrc": "5157:119:10",
															"nodeType": "YulIf",
															"src": "5157:119:10"
														},
														{
															"nativeSrc": "5286:117:10",
															"nodeType": "YulBlock",
															"src": "5286:117:10",
															"statements": [
																{
																	"nativeSrc": "5301:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:10"
																				},
																				"nativeSrc": "5361:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:10"
																		},
																		"nativeSrc": "5340:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:10",
														"nodeType": "YulTypedName",
														"src": "5117:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:10",
														"nodeType": "YulTypedName",
														"src": "5128:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:10",
														"nodeType": "YulTypedName",
														"src": "5140:6:10",
														"type": ""
													}
												],
												"src": "5081:329:10"
											},
											{
												"body": {
													"nativeSrc": "5481:53:10",
													"nodeType": "YulBlock",
													"src": "5481:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:10"
																		},
																		"nativeSrc": "5503:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:10"
																},
																"nativeSrc": "5491:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:10"
															},
															"nativeSrc": "5491:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:10",
														"nodeType": "YulTypedName",
														"src": "5469:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:10",
														"nodeType": "YulTypedName",
														"src": "5476:3:10",
														"type": ""
													}
												],
												"src": "5416:118:10"
											},
											{
												"body": {
													"nativeSrc": "5638:124:10",
													"nodeType": "YulBlock",
													"src": "5638:124:10",
													"statements": [
														{
															"nativeSrc": "5648:26:10",
															"nodeType": "YulAssignment",
															"src": "5648:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:10"
																},
																"nativeSrc": "5656:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:10"
																		},
																		"nativeSrc": "5737:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:10"
																},
																"nativeSrc": "5684:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:10"
															},
															"nativeSrc": "5684:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:10",
														"nodeType": "YulTypedName",
														"src": "5610:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:10",
														"nodeType": "YulTypedName",
														"src": "5622:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:10",
														"nodeType": "YulTypedName",
														"src": "5633:4:10",
														"type": ""
													}
												],
												"src": "5540:222:10"
											},
											{
												"body": {
													"nativeSrc": "5851:391:10",
													"nodeType": "YulBlock",
													"src": "5851:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:10",
																"nodeType": "YulBlock",
																"src": "5897:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:10"
																			},
																			"nativeSrc": "5899:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:10"
																		},
																		"nativeSrc": "5899:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:10"
																		},
																		"nativeSrc": "5868:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:10"
																},
																"nativeSrc": "5864:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:10"
															},
															"nativeSrc": "5861:119:10",
															"nodeType": "YulIf",
															"src": "5861:119:10"
														},
														{
															"nativeSrc": "5990:117:10",
															"nodeType": "YulBlock",
															"src": "5990:117:10",
															"statements": [
																{
																	"nativeSrc": "6005:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:10"
																				},
																				"nativeSrc": "6065:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:10"
																		},
																		"nativeSrc": "6044:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:10",
															"nodeType": "YulBlock",
															"src": "6117:118:10",
															"statements": [
																{
																	"nativeSrc": "6132:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:10"
																				},
																				"nativeSrc": "6193:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:10"
																		},
																		"nativeSrc": "6172:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:10",
														"nodeType": "YulTypedName",
														"src": "5813:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:10",
														"nodeType": "YulTypedName",
														"src": "5824:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:10",
														"nodeType": "YulTypedName",
														"src": "5836:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:10",
														"nodeType": "YulTypedName",
														"src": "5844:6:10",
														"type": ""
													}
												],
												"src": "5768:474:10"
											},
											{
												"body": {
													"nativeSrc": "6276:152:10",
													"nodeType": "YulBlock",
													"src": "6276:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:10"
																},
																"nativeSrc": "6286:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:10"
															},
															"nativeSrc": "6286:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:10"
																},
																"nativeSrc": "6383:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:10"
															},
															"nativeSrc": "6383:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:10"
																},
																"nativeSrc": "6407:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:10"
															},
															"nativeSrc": "6407:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:10"
											},
											{
												"body": {
													"nativeSrc": "6485:269:10",
													"nodeType": "YulBlock",
													"src": "6485:269:10",
													"statements": [
														{
															"nativeSrc": "6495:22:10",
															"nodeType": "YulAssignment",
															"src": "6495:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:10"
																},
																"nativeSrc": "6505:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:10"
																}
															]
														},
														{
															"nativeSrc": "6526:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:10"
																},
																"nativeSrc": "6552:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:10",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:10",
																"nodeType": "YulBlock",
																"src": "6603:51:10",
																"statements": [
																	{
																		"nativeSrc": "6617:27:10",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:10"
																			},
																			"nativeSrc": "6627:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:10"
																},
																"nativeSrc": "6576:26:10",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:10"
															},
															"nativeSrc": "6573:81:10",
															"nodeType": "YulIf",
															"src": "6573:81:10"
														},
														{
															"body": {
																"nativeSrc": "6706:42:10",
																"nodeType": "YulBlock",
																"src": "6706:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:10"
																			},
																			"nativeSrc": "6720:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:10"
																		},
																		"nativeSrc": "6720:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:10"
																		},
																		"nativeSrc": "6690:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:10"
																},
																"nativeSrc": "6667:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:10"
															},
															"nativeSrc": "6664:84:10",
															"nodeType": "YulIf",
															"src": "6664:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:10",
														"nodeType": "YulTypedName",
														"src": "6469:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:10",
														"nodeType": "YulTypedName",
														"src": "6478:6:10",
														"type": ""
													}
												],
												"src": "6434:320:10"
											},
											{
												"body": {
													"nativeSrc": "6788:152:10",
													"nodeType": "YulBlock",
													"src": "6788:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6805:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6805:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6808:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6808:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:10"
																},
																"nativeSrc": "6798:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6798:88:10"
															},
															"nativeSrc": "6798:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6798:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6902:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6905:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6905:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:10"
																},
																"nativeSrc": "6895:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6895:15:10"
															},
															"nativeSrc": "6895:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6895:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6926:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6926:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6929:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6929:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6919:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:10"
																},
																"nativeSrc": "6919:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6919:15:10"
															},
															"nativeSrc": "6919:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6919:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6760:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6760:180:10"
											},
											{
												"body": {
													"nativeSrc": "6997:51:10",
													"nodeType": "YulBlock",
													"src": "6997:51:10",
													"statements": [
														{
															"nativeSrc": "7007:34:10",
															"nodeType": "YulAssignment",
															"src": "7007:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7032:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7032:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7035:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7035:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7028:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7028:3:10"
																},
																"nativeSrc": "7028:13:10",
																"nodeType": "YulFunctionCall",
																"src": "7028:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7007:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7007:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6946:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6978:5:10",
														"nodeType": "YulTypedName",
														"src": "6978:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6988:8:10",
														"nodeType": "YulTypedName",
														"src": "6988:8:10",
														"type": ""
													}
												],
												"src": "6946:102:10"
											},
											{
												"body": {
													"nativeSrc": "7127:775:10",
													"nodeType": "YulBlock",
													"src": "7127:775:10",
													"statements": [
														{
															"nativeSrc": "7137:15:10",
															"nodeType": "YulAssignment",
															"src": "7137:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "7146:6:10",
																"nodeType": "YulIdentifier",
																"src": "7146:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7137:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7137:5:10"
																}
															]
														},
														{
															"nativeSrc": "7161:14:10",
															"nodeType": "YulAssignment",
															"src": "7161:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "7170:5:10",
																"nodeType": "YulIdentifier",
																"src": "7170:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7161:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7219:677:10",
																"nodeType": "YulBlock",
																"src": "7219:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7307:22:10",
																			"nodeType": "YulBlock",
																			"src": "7307:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7309:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "7309:16:10"
																						},
																						"nativeSrc": "7309:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7309:18:10"
																					},
																					"nativeSrc": "7309:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "7309:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7285:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "7285:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7295:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7295:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7300:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "7300:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7291:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7291:3:10"
																					},
																					"nativeSrc": "7291:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7291:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7282:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "7282:2:10"
																			},
																			"nativeSrc": "7282:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7282:24:10"
																		},
																		"nativeSrc": "7279:50:10",
																		"nodeType": "YulIf",
																		"src": "7279:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "7374:419:10",
																			"nodeType": "YulBlock",
																			"src": "7374:419:10",
																			"statements": [
																				{
																					"nativeSrc": "7754:25:10",
																					"nodeType": "YulAssignment",
																					"src": "7754:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7767:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "7767:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7774:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "7774:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7763:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7763:3:10"
																						},
																						"nativeSrc": "7763:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7763:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7754:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "7754:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7349:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "7349:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7359:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7359:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7345:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7345:3:10"
																			},
																			"nativeSrc": "7345:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7345:16:10"
																		},
																		"nativeSrc": "7342:451:10",
																		"nodeType": "YulIf",
																		"src": "7342:451:10"
																	},
																	{
																		"nativeSrc": "7806:23:10",
																		"nodeType": "YulAssignment",
																		"src": "7806:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7818:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "7818:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7824:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "7824:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7814:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7814:3:10"
																			},
																			"nativeSrc": "7814:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7814:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7806:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7806:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7842:44:10",
																		"nodeType": "YulAssignment",
																		"src": "7842:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7877:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "7877:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7854:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "7854:22:10"
																			},
																			"nativeSrc": "7854:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7854:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7842:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "7842:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7195:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7195:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7205:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7205:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7192:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7192:2:10"
																},
																"nativeSrc": "7192:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7192:15:10"
															},
															"nativeSrc": "7184:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7208:2:10",
																"nodeType": "YulBlock",
																"src": "7208:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7188:3:10",
																"nodeType": "YulBlock",
																"src": "7188:3:10",
																"statements": []
															},
															"src": "7184:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7054:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7082:6:10",
														"nodeType": "YulTypedName",
														"src": "7082:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7090:5:10",
														"nodeType": "YulTypedName",
														"src": "7090:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7097:8:10",
														"nodeType": "YulTypedName",
														"src": "7097:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7107:3:10",
														"nodeType": "YulTypedName",
														"src": "7107:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7115:5:10",
														"nodeType": "YulTypedName",
														"src": "7115:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7122:4:10",
														"nodeType": "YulTypedName",
														"src": "7122:4:10",
														"type": ""
													}
												],
												"src": "7054:848:10"
											},
											{
												"body": {
													"nativeSrc": "7968:1013:10",
													"nodeType": "YulBlock",
													"src": "7968:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8163:20:10",
																"nodeType": "YulBlock",
																"src": "8163:20:10",
																"statements": [
																	{
																		"nativeSrc": "8165:10:10",
																		"nodeType": "YulAssignment",
																		"src": "8165:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8174:1:10",
																			"nodeType": "YulLiteral",
																			"src": "8174:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8165:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8165:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8176:5:10",
																		"nodeType": "YulLeave",
																		"src": "8176:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8153:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "8153:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8146:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8146:6:10"
																},
																"nativeSrc": "8146:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8146:16:10"
															},
															"nativeSrc": "8143:40:10",
															"nodeType": "YulIf",
															"src": "8143:40:10"
														},
														{
															"body": {
																"nativeSrc": "8208:20:10",
																"nodeType": "YulBlock",
																"src": "8208:20:10",
																"statements": [
																	{
																		"nativeSrc": "8210:10:10",
																		"nodeType": "YulAssignment",
																		"src": "8210:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8219:1:10",
																			"nodeType": "YulLiteral",
																			"src": "8219:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8210:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8210:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8221:5:10",
																		"nodeType": "YulLeave",
																		"src": "8221:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8202:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8202:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8195:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:10"
																},
																"nativeSrc": "8195:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8195:12:10"
															},
															"nativeSrc": "8192:36:10",
															"nodeType": "YulIf",
															"src": "8192:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8338:20:10",
																		"nodeType": "YulBlock",
																		"src": "8338:20:10",
																		"statements": [
																			{
																				"nativeSrc": "8340:10:10",
																				"nodeType": "YulAssignment",
																				"src": "8340:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8349:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8349:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8340:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "8340:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8351:5:10",
																				"nodeType": "YulLeave",
																				"src": "8351:5:10"
																			}
																		]
																	},
																	"nativeSrc": "8331:27:10",
																	"nodeType": "YulCase",
																	"src": "8331:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8336:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8336:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8382:176:10",
																		"nodeType": "YulBlock",
																		"src": "8382:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8417:22:10",
																					"nodeType": "YulBlock",
																					"src": "8417:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8419:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "8419:16:10"
																								},
																								"nativeSrc": "8419:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8419:18:10"
																							},
																							"nativeSrc": "8419:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8419:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8402:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "8402:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8412:3:10",
																							"nodeType": "YulLiteral",
																							"src": "8412:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8399:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8399:2:10"
																					},
																					"nativeSrc": "8399:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8399:17:10"
																				},
																				"nativeSrc": "8396:43:10",
																				"nodeType": "YulIf",
																				"src": "8396:43:10"
																			},
																			{
																				"nativeSrc": "8452:25:10",
																				"nodeType": "YulAssignment",
																				"src": "8452:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8465:1:10",
																							"nodeType": "YulLiteral",
																							"src": "8465:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8468:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "8468:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8461:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:10"
																					},
																					"nativeSrc": "8461:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8452:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "8452:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8508:22:10",
																					"nodeType": "YulBlock",
																					"src": "8508:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8510:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "8510:16:10"
																								},
																								"nativeSrc": "8510:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8510:18:10"
																							},
																							"nativeSrc": "8510:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8510:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8496:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "8496:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8503:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8503:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8493:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8493:2:10"
																					},
																					"nativeSrc": "8493:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8493:14:10"
																				},
																				"nativeSrc": "8490:40:10",
																				"nodeType": "YulIf",
																				"src": "8490:40:10"
																			},
																			{
																				"nativeSrc": "8543:5:10",
																				"nodeType": "YulLeave",
																				"src": "8543:5:10"
																			}
																		]
																	},
																	"nativeSrc": "8367:191:10",
																	"nodeType": "YulCase",
																	"src": "8367:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8372:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8372:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8288:4:10",
																"nodeType": "YulIdentifier",
																"src": "8288:4:10"
															},
															"nativeSrc": "8281:277:10",
															"nodeType": "YulSwitch",
															"src": "8281:277:10"
														},
														{
															"body": {
																"nativeSrc": "8690:123:10",
																"nodeType": "YulBlock",
																"src": "8690:123:10",
																"statements": [
																	{
																		"nativeSrc": "8704:28:10",
																		"nodeType": "YulAssignment",
																		"src": "8704:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8717:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "8717:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8723:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "8723:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8713:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8713:3:10"
																			},
																			"nativeSrc": "8713:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8713:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8704:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8763:22:10",
																			"nodeType": "YulBlock",
																			"src": "8763:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8765:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "8765:16:10"
																						},
																						"nativeSrc": "8765:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8765:18:10"
																					},
																					"nativeSrc": "8765:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "8765:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8751:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "8751:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8758:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8758:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8748:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "8748:2:10"
																			},
																			"nativeSrc": "8748:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8748:14:10"
																		},
																		"nativeSrc": "8745:40:10",
																		"nodeType": "YulIf",
																		"src": "8745:40:10"
																	},
																	{
																		"nativeSrc": "8798:5:10",
																		"nodeType": "YulLeave",
																		"src": "8798:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8593:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "8593:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8599:2:10",
																						"nodeType": "YulLiteral",
																						"src": "8599:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8590:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8590:2:10"
																				},
																				"nativeSrc": "8590:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8590:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8607:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "8607:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8617:2:10",
																						"nodeType": "YulLiteral",
																						"src": "8617:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8604:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8604:2:10"
																				},
																				"nativeSrc": "8604:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8604:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8586:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8586:3:10"
																		},
																		"nativeSrc": "8586:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8586:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8642:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "8642:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8648:3:10",
																						"nodeType": "YulLiteral",
																						"src": "8648:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8639:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8639:2:10"
																				},
																				"nativeSrc": "8639:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8639:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8657:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "8657:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8667:2:10",
																						"nodeType": "YulLiteral",
																						"src": "8667:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8654:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8654:2:10"
																				},
																				"nativeSrc": "8654:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8654:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8635:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8635:3:10"
																		},
																		"nativeSrc": "8635:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8635:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8570:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8570:2:10"
																},
																"nativeSrc": "8570:111:10",
																"nodeType": "YulFunctionCall",
																"src": "8570:111:10"
															},
															"nativeSrc": "8567:246:10",
															"nodeType": "YulIf",
															"src": "8567:246:10"
														},
														{
															"nativeSrc": "8823:57:10",
															"nodeType": "YulAssignment",
															"src": "8823:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8857:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8857:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8860:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8866:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "8866:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8876:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8838:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "8838:18:10"
																},
																"nativeSrc": "8838:42:10",
																"nodeType": "YulFunctionCall",
																"src": "8838:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8823:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8823:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "8830:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8830:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8919:22:10",
																"nodeType": "YulBlock",
																"src": "8919:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8921:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8921:16:10"
																			},
																			"nativeSrc": "8921:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8921:18:10"
																		},
																		"nativeSrc": "8921:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8921:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8896:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8896:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8907:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8907:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8912:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8912:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8903:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8903:3:10"
																		},
																		"nativeSrc": "8903:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8903:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8893:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8893:2:10"
																},
																"nativeSrc": "8893:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8893:25:10"
															},
															"nativeSrc": "8890:51:10",
															"nodeType": "YulIf",
															"src": "8890:51:10"
														},
														{
															"nativeSrc": "8950:25:10",
															"nodeType": "YulAssignment",
															"src": "8950:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8963:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8963:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8970:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8970:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8959:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8959:3:10"
																},
																"nativeSrc": "8959:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8959:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8950:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8950:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7908:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7938:4:10",
														"nodeType": "YulTypedName",
														"src": "7938:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7944:8:10",
														"nodeType": "YulTypedName",
														"src": "7944:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7954:3:10",
														"nodeType": "YulTypedName",
														"src": "7954:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7962:5:10",
														"nodeType": "YulTypedName",
														"src": "7962:5:10",
														"type": ""
													}
												],
												"src": "7908:1073:10"
											},
											{
												"body": {
													"nativeSrc": "9051:217:10",
													"nodeType": "YulBlock",
													"src": "9051:217:10",
													"statements": [
														{
															"nativeSrc": "9061:31:10",
															"nodeType": "YulAssignment",
															"src": "9061:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9087:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9087:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9069:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9069:17:10"
																},
																"nativeSrc": "9069:23:10",
																"nodeType": "YulFunctionCall",
																"src": "9069:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9061:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9061:4:10"
																}
															]
														},
														{
															"nativeSrc": "9101:37:10",
															"nodeType": "YulAssignment",
															"src": "9101:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9129:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "9129:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9113:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "9113:15:10"
																},
																"nativeSrc": "9113:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9113:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9101:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "9101:8:10"
																}
															]
														},
														{
															"nativeSrc": "9148:113:10",
															"nodeType": "YulAssignment",
															"src": "9148:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9178:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9178:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9184:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "9184:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9194:66:10",
																		"nodeType": "YulLiteral",
																		"src": "9194:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9157:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "9157:20:10"
																},
																"nativeSrc": "9157:104:10",
																"nodeType": "YulFunctionCall",
																"src": "9157:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9148:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9148:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8987:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9026:4:10",
														"nodeType": "YulTypedName",
														"src": "9026:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9032:8:10",
														"nodeType": "YulTypedName",
														"src": "9032:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9045:5:10",
														"nodeType": "YulTypedName",
														"src": "9045:5:10",
														"type": ""
													}
												],
												"src": "8987:281:10"
											},
											{
												"body": {
													"nativeSrc": "9322:362:10",
													"nodeType": "YulBlock",
													"src": "9322:362:10",
													"statements": [
														{
															"nativeSrc": "9332:25:10",
															"nodeType": "YulAssignment",
															"src": "9332:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9355:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9355:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9337:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9337:17:10"
																},
																"nativeSrc": "9337:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9337:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9332:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9332:1:10"
																}
															]
														},
														{
															"nativeSrc": "9366:25:10",
															"nodeType": "YulAssignment",
															"src": "9366:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9389:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9389:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9371:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9371:17:10"
																},
																"nativeSrc": "9371:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9371:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9366:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9366:1:10"
																}
															]
														},
														{
															"nativeSrc": "9400:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9400:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9423:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9423:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9426:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9426:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9419:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9419:3:10"
																},
																"nativeSrc": "9419:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9419:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9404:11:10",
																	"nodeType": "YulTypedName",
																	"src": "9404:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9437:41:10",
															"nodeType": "YulAssignment",
															"src": "9437:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9466:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "9466:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9448:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9448:17:10"
																},
																"nativeSrc": "9448:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9448:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9437:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9437:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9655:22:10",
																"nodeType": "YulBlock",
																"src": "9655:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9657:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9657:16:10"
																			},
																			"nativeSrc": "9657:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9657:18:10"
																		},
																		"nativeSrc": "9657:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9657:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9588:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "9588:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9581:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9581:6:10"
																				},
																				"nativeSrc": "9581:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9581:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9611:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "9611:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9618:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "9618:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9627:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "9627:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9614:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9614:3:10"
																						},
																						"nativeSrc": "9614:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9614:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9608:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "9608:2:10"
																				},
																				"nativeSrc": "9608:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9608:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9561:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9561:2:10"
																		},
																		"nativeSrc": "9561:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9561:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9541:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9541:6:10"
																},
																"nativeSrc": "9541:113:10",
																"nodeType": "YulFunctionCall",
																"src": "9541:113:10"
															},
															"nativeSrc": "9538:139:10",
															"nodeType": "YulIf",
															"src": "9538:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9274:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9305:1:10",
														"nodeType": "YulTypedName",
														"src": "9305:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9308:1:10",
														"nodeType": "YulTypedName",
														"src": "9308:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9314:7:10",
														"nodeType": "YulTypedName",
														"src": "9314:7:10",
														"type": ""
													}
												],
												"src": "9274:410:10"
											},
											{
												"body": {
													"nativeSrc": "9734:147:10",
													"nodeType": "YulBlock",
													"src": "9734:147:10",
													"statements": [
														{
															"nativeSrc": "9744:25:10",
															"nodeType": "YulAssignment",
															"src": "9744:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9767:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9767:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9749:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9749:17:10"
																},
																"nativeSrc": "9749:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9749:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9744:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9744:1:10"
																}
															]
														},
														{
															"nativeSrc": "9778:25:10",
															"nodeType": "YulAssignment",
															"src": "9778:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9801:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9801:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9783:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9783:17:10"
																},
																"nativeSrc": "9783:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9783:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9778:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9778:1:10"
																}
															]
														},
														{
															"nativeSrc": "9812:16:10",
															"nodeType": "YulAssignment",
															"src": "9812:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9823:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9823:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9826:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9826:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9819:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9819:3:10"
																},
																"nativeSrc": "9819:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9819:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9812:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9852:22:10",
																"nodeType": "YulBlock",
																"src": "9852:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9854:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9854:16:10"
																			},
																			"nativeSrc": "9854:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9854:18:10"
																		},
																		"nativeSrc": "9854:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9854:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9844:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9844:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9847:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9847:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9841:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9841:2:10"
																},
																"nativeSrc": "9841:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9841:10:10"
															},
															"nativeSrc": "9838:36:10",
															"nodeType": "YulIf",
															"src": "9838:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9690:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9721:1:10",
														"nodeType": "YulTypedName",
														"src": "9721:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9724:1:10",
														"nodeType": "YulTypedName",
														"src": "9724:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9730:3:10",
														"nodeType": "YulTypedName",
														"src": "9730:3:10",
														"type": ""
													}
												],
												"src": "9690:191:10"
											},
											{
												"body": {
													"nativeSrc": "9993:62:10",
													"nodeType": "YulBlock",
													"src": "9993:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10015:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10015:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10023:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10023:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10011:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10011:3:10"
																		},
																		"nativeSrc": "10011:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10011:14:10"
																	},
																	{
																		"hexValue": "45786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "10027:20:10",
																		"nodeType": "YulLiteral",
																		"src": "10027:20:10",
																		"type": "",
																		"value": "Exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10004:6:10"
																},
																"nativeSrc": "10004:44:10",
																"nodeType": "YulFunctionCall",
																"src": "10004:44:10"
															},
															"nativeSrc": "10004:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "10004:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
												"nativeSrc": "9887:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9985:6:10",
														"nodeType": "YulTypedName",
														"src": "9985:6:10",
														"type": ""
													}
												],
												"src": "9887:168:10"
											},
											{
												"body": {
													"nativeSrc": "10207:220:10",
													"nodeType": "YulBlock",
													"src": "10207:220:10",
													"statements": [
														{
															"nativeSrc": "10217:74:10",
															"nodeType": "YulAssignment",
															"src": "10217:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10283:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10283:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10288:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10224:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10224:58:10"
																},
																"nativeSrc": "10224:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10224:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10217:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10217:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10389:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10389:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																	"nativeSrc": "10300:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10300:88:10"
																},
																"nativeSrc": "10300:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10300:93:10"
															},
															"nativeSrc": "10300:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10300:93:10"
														},
														{
															"nativeSrc": "10402:19:10",
															"nodeType": "YulAssignment",
															"src": "10402:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10413:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10418:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10418:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10409:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10409:3:10"
																},
																"nativeSrc": "10409:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10409:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10402:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10402:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10061:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10195:3:10",
														"nodeType": "YulTypedName",
														"src": "10195:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10203:3:10",
														"nodeType": "YulTypedName",
														"src": "10203:3:10",
														"type": ""
													}
												],
												"src": "10061:366:10"
											},
											{
												"body": {
													"nativeSrc": "10604:248:10",
													"nodeType": "YulBlock",
													"src": "10604:248:10",
													"statements": [
														{
															"nativeSrc": "10614:26:10",
															"nodeType": "YulAssignment",
															"src": "10614:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10626:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10626:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10637:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10637:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10622:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10622:3:10"
																},
																"nativeSrc": "10622:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10622:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10614:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10614:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10661:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10661:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10672:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10672:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10657:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:10"
																		},
																		"nativeSrc": "10657:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10657:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10680:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10680:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10686:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10686:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10676:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:10"
																		},
																		"nativeSrc": "10676:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10650:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10650:6:10"
																},
																"nativeSrc": "10650:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10650:47:10"
															},
															"nativeSrc": "10650:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10650:47:10"
														},
														{
															"nativeSrc": "10706:139:10",
															"nodeType": "YulAssignment",
															"src": "10706:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10840:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10840:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10714:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10714:124:10"
																},
																"nativeSrc": "10714:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10714:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10706:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10706:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10433:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10584:9:10",
														"nodeType": "YulTypedName",
														"src": "10584:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10599:4:10",
														"nodeType": "YulTypedName",
														"src": "10599:4:10",
														"type": ""
													}
												],
												"src": "10433:419:10"
											},
											{
												"body": {
													"nativeSrc": "10964:72:10",
													"nodeType": "YulBlock",
													"src": "10964:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10986:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10986:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10994:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10994:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10982:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10982:3:10"
																		},
																		"nativeSrc": "10982:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10982:14:10"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "10998:30:10",
																		"nodeType": "YulLiteral",
																		"src": "10998:30:10",
																		"type": "",
																		"value": "Price must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10975:6:10"
																},
																"nativeSrc": "10975:54:10",
																"nodeType": "YulFunctionCall",
																"src": "10975:54:10"
															},
															"nativeSrc": "10975:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "10975:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
												"nativeSrc": "10858:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10956:6:10",
														"nodeType": "YulTypedName",
														"src": "10956:6:10",
														"type": ""
													}
												],
												"src": "10858:178:10"
											},
											{
												"body": {
													"nativeSrc": "11188:220:10",
													"nodeType": "YulBlock",
													"src": "11188:220:10",
													"statements": [
														{
															"nativeSrc": "11198:74:10",
															"nodeType": "YulAssignment",
															"src": "11198:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11264:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11264:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11269:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11269:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11205:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11205:58:10"
																},
																"nativeSrc": "11205:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11205:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11198:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11198:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11370:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11370:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																	"nativeSrc": "11281:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11281:88:10"
																},
																"nativeSrc": "11281:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11281:93:10"
															},
															"nativeSrc": "11281:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11281:93:10"
														},
														{
															"nativeSrc": "11383:19:10",
															"nodeType": "YulAssignment",
															"src": "11383:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11394:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11394:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11399:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11399:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11390:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11390:3:10"
																},
																"nativeSrc": "11390:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11390:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11383:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11042:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11176:3:10",
														"nodeType": "YulTypedName",
														"src": "11176:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11184:3:10",
														"nodeType": "YulTypedName",
														"src": "11184:3:10",
														"type": ""
													}
												],
												"src": "11042:366:10"
											},
											{
												"body": {
													"nativeSrc": "11585:248:10",
													"nodeType": "YulBlock",
													"src": "11585:248:10",
													"statements": [
														{
															"nativeSrc": "11595:26:10",
															"nodeType": "YulAssignment",
															"src": "11595:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11607:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11607:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11618:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11618:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11603:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11603:3:10"
																},
																"nativeSrc": "11603:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11603:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11595:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11595:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11642:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11642:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11653:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11653:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11638:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11638:3:10"
																		},
																		"nativeSrc": "11638:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11638:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11661:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11661:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11667:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11667:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11657:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11657:3:10"
																		},
																		"nativeSrc": "11657:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11657:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11631:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11631:6:10"
																},
																"nativeSrc": "11631:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11631:47:10"
															},
															"nativeSrc": "11631:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11631:47:10"
														},
														{
															"nativeSrc": "11687:139:10",
															"nodeType": "YulAssignment",
															"src": "11687:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11821:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11821:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11695:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11695:124:10"
																},
																"nativeSrc": "11695:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11695:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11687:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11687:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11414:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11565:9:10",
														"nodeType": "YulTypedName",
														"src": "11565:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11580:4:10",
														"nodeType": "YulTypedName",
														"src": "11580:4:10",
														"type": ""
													}
												],
												"src": "11414:419:10"
											},
											{
												"body": {
													"nativeSrc": "11945:66:10",
													"nodeType": "YulBlock",
													"src": "11945:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11967:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11967:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11975:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11975:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11963:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11963:3:10"
																		},
																		"nativeSrc": "11963:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11963:14:10"
																	},
																	{
																		"hexValue": "53656e642045544820746f2062757920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "11979:24:10",
																		"nodeType": "YulLiteral",
																		"src": "11979:24:10",
																		"type": "",
																		"value": "Send ETH to buy tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11956:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11956:6:10"
																},
																"nativeSrc": "11956:48:10",
																"nodeType": "YulFunctionCall",
																"src": "11956:48:10"
															},
															"nativeSrc": "11956:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "11956:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
												"nativeSrc": "11839:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11937:6:10",
														"nodeType": "YulTypedName",
														"src": "11937:6:10",
														"type": ""
													}
												],
												"src": "11839:172:10"
											},
											{
												"body": {
													"nativeSrc": "12163:220:10",
													"nodeType": "YulBlock",
													"src": "12163:220:10",
													"statements": [
														{
															"nativeSrc": "12173:74:10",
															"nodeType": "YulAssignment",
															"src": "12173:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12239:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12239:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12244:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12244:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12180:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12180:58:10"
																},
																"nativeSrc": "12180:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12180:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12173:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12173:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12345:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12345:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
																	"nativeSrc": "12256:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12256:88:10"
																},
																"nativeSrc": "12256:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12256:93:10"
															},
															"nativeSrc": "12256:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12256:93:10"
														},
														{
															"nativeSrc": "12358:19:10",
															"nodeType": "YulAssignment",
															"src": "12358:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12369:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12369:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12374:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12374:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12365:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12365:3:10"
																},
																"nativeSrc": "12365:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12365:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12358:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12358:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12017:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12151:3:10",
														"nodeType": "YulTypedName",
														"src": "12151:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12159:3:10",
														"nodeType": "YulTypedName",
														"src": "12159:3:10",
														"type": ""
													}
												],
												"src": "12017:366:10"
											},
											{
												"body": {
													"nativeSrc": "12560:248:10",
													"nodeType": "YulBlock",
													"src": "12560:248:10",
													"statements": [
														{
															"nativeSrc": "12570:26:10",
															"nodeType": "YulAssignment",
															"src": "12570:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12582:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12582:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12593:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12593:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12578:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12578:3:10"
																},
																"nativeSrc": "12578:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12578:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12570:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12570:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12617:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12617:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12628:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12628:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12613:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12613:3:10"
																		},
																		"nativeSrc": "12613:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12613:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12636:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12636:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12642:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12642:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12632:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12632:3:10"
																		},
																		"nativeSrc": "12632:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12632:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12606:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12606:6:10"
																},
																"nativeSrc": "12606:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12606:47:10"
															},
															"nativeSrc": "12606:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12606:47:10"
														},
														{
															"nativeSrc": "12662:139:10",
															"nodeType": "YulAssignment",
															"src": "12662:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12796:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12796:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12670:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12670:124:10"
																},
																"nativeSrc": "12670:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12670:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12662:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12662:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12389:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12540:9:10",
														"nodeType": "YulTypedName",
														"src": "12540:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12555:4:10",
														"nodeType": "YulTypedName",
														"src": "12555:4:10",
														"type": ""
													}
												],
												"src": "12389:419:10"
											},
											{
												"body": {
													"nativeSrc": "12940:206:10",
													"nodeType": "YulBlock",
													"src": "12940:206:10",
													"statements": [
														{
															"nativeSrc": "12950:26:10",
															"nodeType": "YulAssignment",
															"src": "12950:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12962:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12962:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12973:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12973:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12958:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12958:3:10"
																},
																"nativeSrc": "12958:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12958:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12950:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12950:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13030:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13030:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13043:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13043:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13054:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13054:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13039:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13039:3:10"
																		},
																		"nativeSrc": "13039:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13039:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12986:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12986:43:10"
																},
																"nativeSrc": "12986:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12986:71:10"
															},
															"nativeSrc": "12986:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12986:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13111:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13111:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13124:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13124:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13135:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13135:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13120:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13120:3:10"
																		},
																		"nativeSrc": "13120:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13120:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13067:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13067:43:10"
																},
																"nativeSrc": "13067:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13067:72:10"
															},
															"nativeSrc": "13067:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13067:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12814:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12904:9:10",
														"nodeType": "YulTypedName",
														"src": "12904:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12916:6:10",
														"nodeType": "YulTypedName",
														"src": "12916:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12924:6:10",
														"nodeType": "YulTypedName",
														"src": "12924:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12935:4:10",
														"nodeType": "YulTypedName",
														"src": "12935:4:10",
														"type": ""
													}
												],
												"src": "12814:332:10"
											},
											{
												"body": {
													"nativeSrc": "13265:34:10",
													"nodeType": "YulBlock",
													"src": "13265:34:10",
													"statements": [
														{
															"nativeSrc": "13275:18:10",
															"nodeType": "YulAssignment",
															"src": "13275:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "13290:3:10",
																"nodeType": "YulIdentifier",
																"src": "13290:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13275:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "13275:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13152:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13237:3:10",
														"nodeType": "YulTypedName",
														"src": "13237:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13242:6:10",
														"nodeType": "YulTypedName",
														"src": "13242:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13253:11:10",
														"nodeType": "YulTypedName",
														"src": "13253:11:10",
														"type": ""
													}
												],
												"src": "13152:147:10"
											},
											{
												"body": {
													"nativeSrc": "13411:8:10",
													"nodeType": "YulBlock",
													"src": "13411:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "13305:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13403:6:10",
														"nodeType": "YulTypedName",
														"src": "13403:6:10",
														"type": ""
													}
												],
												"src": "13305:114:10"
											},
											{
												"body": {
													"nativeSrc": "13588:235:10",
													"nodeType": "YulBlock",
													"src": "13588:235:10",
													"statements": [
														{
															"nativeSrc": "13598:90:10",
															"nodeType": "YulAssignment",
															"src": "13598:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13681:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13681:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13686:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13686:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13605:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "13605:75:10"
																},
																"nativeSrc": "13605:83:10",
																"nodeType": "YulFunctionCall",
																"src": "13605:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13598:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13598:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13786:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13786:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "13697:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13697:88:10"
																},
																"nativeSrc": "13697:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13697:93:10"
															},
															"nativeSrc": "13697:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13697:93:10"
														},
														{
															"nativeSrc": "13799:18:10",
															"nodeType": "YulAssignment",
															"src": "13799:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13810:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13810:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13815:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13815:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13806:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13806:3:10"
																},
																"nativeSrc": "13806:11:10",
																"nodeType": "YulFunctionCall",
																"src": "13806:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13799:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13799:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13425:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13576:3:10",
														"nodeType": "YulTypedName",
														"src": "13576:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13584:3:10",
														"nodeType": "YulTypedName",
														"src": "13584:3:10",
														"type": ""
													}
												],
												"src": "13425:398:10"
											},
											{
												"body": {
													"nativeSrc": "14017:191:10",
													"nodeType": "YulBlock",
													"src": "14017:191:10",
													"statements": [
														{
															"nativeSrc": "14028:154:10",
															"nodeType": "YulAssignment",
															"src": "14028:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14178:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14035:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "14035:141:10"
																},
																"nativeSrc": "14035:147:10",
																"nodeType": "YulFunctionCall",
																"src": "14035:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14028:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14028:3:10"
																}
															]
														},
														{
															"nativeSrc": "14192:10:10",
															"nodeType": "YulAssignment",
															"src": "14192:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "14199:3:10",
																"nodeType": "YulIdentifier",
																"src": "14199:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14192:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14192:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13829:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14004:3:10",
														"nodeType": "YulTypedName",
														"src": "14004:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14013:3:10",
														"nodeType": "YulTypedName",
														"src": "14013:3:10",
														"type": ""
													}
												],
												"src": "13829:379:10"
											},
											{
												"body": {
													"nativeSrc": "14320:61:10",
													"nodeType": "YulBlock",
													"src": "14320:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14342:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14342:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14350:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14350:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14338:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14338:3:10"
																		},
																		"nativeSrc": "14338:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14338:14:10"
																	},
																	{
																		"hexValue": "5769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14354:19:10",
																		"nodeType": "YulLiteral",
																		"src": "14354:19:10",
																		"type": "",
																		"value": "Withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14331:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14331:6:10"
																},
																"nativeSrc": "14331:43:10",
																"nodeType": "YulFunctionCall",
																"src": "14331:43:10"
															},
															"nativeSrc": "14331:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "14331:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
												"nativeSrc": "14214:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14312:6:10",
														"nodeType": "YulTypedName",
														"src": "14312:6:10",
														"type": ""
													}
												],
												"src": "14214:167:10"
											},
											{
												"body": {
													"nativeSrc": "14533:220:10",
													"nodeType": "YulBlock",
													"src": "14533:220:10",
													"statements": [
														{
															"nativeSrc": "14543:74:10",
															"nodeType": "YulAssignment",
															"src": "14543:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14609:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14609:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14614:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14614:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14550:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14550:58:10"
																},
																"nativeSrc": "14550:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14550:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14543:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14543:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14715:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14715:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																	"nativeSrc": "14626:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14626:88:10"
																},
																"nativeSrc": "14626:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14626:93:10"
															},
															"nativeSrc": "14626:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14626:93:10"
														},
														{
															"nativeSrc": "14728:19:10",
															"nodeType": "YulAssignment",
															"src": "14728:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14739:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14739:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14744:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14744:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14735:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14735:3:10"
																},
																"nativeSrc": "14735:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14735:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14728:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14728:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14387:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14521:3:10",
														"nodeType": "YulTypedName",
														"src": "14521:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14529:3:10",
														"nodeType": "YulTypedName",
														"src": "14529:3:10",
														"type": ""
													}
												],
												"src": "14387:366:10"
											},
											{
												"body": {
													"nativeSrc": "14930:248:10",
													"nodeType": "YulBlock",
													"src": "14930:248:10",
													"statements": [
														{
															"nativeSrc": "14940:26:10",
															"nodeType": "YulAssignment",
															"src": "14940:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14952:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14952:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14963:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14963:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14948:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14948:3:10"
																},
																"nativeSrc": "14948:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14948:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14940:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14940:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14987:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14987:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14998:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14998:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14983:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14983:3:10"
																		},
																		"nativeSrc": "14983:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14983:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15006:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15006:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15012:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15012:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15002:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:10"
																		},
																		"nativeSrc": "15002:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15002:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14976:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14976:6:10"
																},
																"nativeSrc": "14976:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14976:47:10"
															},
															"nativeSrc": "14976:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14976:47:10"
														},
														{
															"nativeSrc": "15032:139:10",
															"nodeType": "YulAssignment",
															"src": "15032:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15166:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15166:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15040:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15040:124:10"
																},
																"nativeSrc": "15040:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15040:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15032:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15032:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14759:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14910:9:10",
														"nodeType": "YulTypedName",
														"src": "14910:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14925:4:10",
														"nodeType": "YulTypedName",
														"src": "14925:4:10",
														"type": ""
													}
												],
												"src": "14759:419:10"
											},
											{
												"body": {
													"nativeSrc": "15229:149:10",
													"nodeType": "YulBlock",
													"src": "15229:149:10",
													"statements": [
														{
															"nativeSrc": "15239:25:10",
															"nodeType": "YulAssignment",
															"src": "15239:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15262:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15262:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15244:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15244:17:10"
																},
																"nativeSrc": "15244:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15244:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15239:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15239:1:10"
																}
															]
														},
														{
															"nativeSrc": "15273:25:10",
															"nodeType": "YulAssignment",
															"src": "15273:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15296:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15296:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15278:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15278:17:10"
																},
																"nativeSrc": "15278:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15278:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15273:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15273:1:10"
																}
															]
														},
														{
															"nativeSrc": "15307:17:10",
															"nodeType": "YulAssignment",
															"src": "15307:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15319:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15319:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15322:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15322:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15315:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15315:3:10"
																},
																"nativeSrc": "15315:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15315:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15307:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15307:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15349:22:10",
																"nodeType": "YulBlock",
																"src": "15349:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15351:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15351:16:10"
																			},
																			"nativeSrc": "15351:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15351:18:10"
																		},
																		"nativeSrc": "15351:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15351:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15340:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15340:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15346:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15346:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15337:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15337:2:10"
																},
																"nativeSrc": "15337:11:10",
																"nodeType": "YulFunctionCall",
																"src": "15337:11:10"
															},
															"nativeSrc": "15334:37:10",
															"nodeType": "YulIf",
															"src": "15334:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15184:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15215:1:10",
														"nodeType": "YulTypedName",
														"src": "15215:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15218:1:10",
														"nodeType": "YulTypedName",
														"src": "15218:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15224:4:10",
														"nodeType": "YulTypedName",
														"src": "15224:4:10",
														"type": ""
													}
												],
												"src": "15184:194:10"
											},
											{
												"body": {
													"nativeSrc": "15538:288:10",
													"nodeType": "YulBlock",
													"src": "15538:288:10",
													"statements": [
														{
															"nativeSrc": "15548:26:10",
															"nodeType": "YulAssignment",
															"src": "15548:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15560:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15560:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15571:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15571:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15556:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15556:3:10"
																},
																"nativeSrc": "15556:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15556:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15548:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15548:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15628:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15628:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15641:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15641:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15652:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15652:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15637:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15637:3:10"
																		},
																		"nativeSrc": "15637:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15637:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15584:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15584:43:10"
																},
																"nativeSrc": "15584:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15584:71:10"
															},
															"nativeSrc": "15584:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15584:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15709:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15709:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15722:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15722:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15733:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15733:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15718:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15718:3:10"
																		},
																		"nativeSrc": "15718:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15718:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15665:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15665:43:10"
																},
																"nativeSrc": "15665:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15665:72:10"
															},
															"nativeSrc": "15665:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15665:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15791:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15791:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15804:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15804:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15815:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15815:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15800:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15800:3:10"
																		},
																		"nativeSrc": "15800:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15800:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15747:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15747:43:10"
																},
																"nativeSrc": "15747:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15747:72:10"
															},
															"nativeSrc": "15747:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15747:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15384:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15494:9:10",
														"nodeType": "YulTypedName",
														"src": "15494:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15506:6:10",
														"nodeType": "YulTypedName",
														"src": "15506:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15514:6:10",
														"nodeType": "YulTypedName",
														"src": "15514:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15522:6:10",
														"nodeType": "YulTypedName",
														"src": "15522:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15533:4:10",
														"nodeType": "YulTypedName",
														"src": "15533:4:10",
														"type": ""
													}
												],
												"src": "15384:442:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Send ETH to buy tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610134575f3560e01c80637ff9b596116100aa578063d0febe4c1161006e578063d0febe4c1461041a578063d5abeb0114610424578063dd62ed3e1461044e578063e086e5ec1461048a578063e4b7fb73146104a0578063f2fde38b146104ca57610134565b80637ff9b596146103365780638da5cb5b1461036057806395d89b411461038a578063a9059cbb146103b4578063c4e41b22146103f057610134565b806340c10f19116100fc57806340c10f191461022e5780635f515226146102565780636a61e5fc146102925780636f9fb98a146102ba57806370a08231146102e4578063715018a61461032057610134565b806306fdde0314610138578063095ea7b31461016257806318160ddd1461019e57806323b872dd146101c8578063313ce56714610204575b5f80fd5b348015610143575f80fd5b5061014c6104f2565b6040516101599190611309565b60405180910390f35b34801561016d575f80fd5b50610188600480360381019061018391906113ba565b610582565b6040516101959190611412565b60405180910390f35b3480156101a9575f80fd5b506101b26105a4565b6040516101bf919061143a565b60405180910390f35b3480156101d3575f80fd5b506101ee60048036038101906101e99190611453565b6105ad565b6040516101fb9190611412565b60405180910390f35b34801561020f575f80fd5b506102186105db565b60405161022591906114be565b60405180910390f35b348015610239575f80fd5b50610254600480360381019061024f91906113ba565b6105e3565b005b348015610261575f80fd5b5061027c600480360381019061027791906114d7565b61066e565b604051610289919061143a565b60405180910390f35b34801561029d575f80fd5b506102b860048036038101906102b39190611502565b61067f565b005b3480156102c5575f80fd5b506102ce6106d3565b6040516102db919061143a565b60405180910390f35b3480156102ef575f80fd5b5061030a600480360381019061030591906114d7565b6106e2565b604051610317919061143a565b60405180910390f35b34801561032b575f80fd5b50610334610727565b005b348015610341575f80fd5b5061034a61073a565b604051610357919061143a565b60405180910390f35b34801561036b575f80fd5b50610374610740565b604051610381919061153c565b60405180910390f35b348015610395575f80fd5b5061039e610768565b6040516103ab9190611309565b60405180910390f35b3480156103bf575f80fd5b506103da60048036038101906103d591906113ba565b6107f8565b6040516103e79190611412565b60405180910390f35b3480156103fb575f80fd5b5061040461081a565b604051610411919061143a565b60405180910390f35b610422610828565b005b34801561042f575f80fd5b5061043861094d565b604051610445919061143a565b60405180910390f35b348015610459575f80fd5b50610474600480360381019061046f9190611555565b610953565b604051610481919061143a565b60405180910390f35b348015610495575f80fd5b5061049e6109d5565b005b3480156104ab575f80fd5b506104b4610a8f565b6040516104c1919061143a565b60405180910390f35b3480156104d5575f80fd5b506104f060048036038101906104eb91906114d7565b610ac8565b005b606060038054610501906115c0565b80601f016020809104026020016040519081016040528092919081815260200182805461052d906115c0565b80156105785780601f1061054f57610100808354040283529160200191610578565b820191905f5260205f20905b81548152906001019060200180831161055b57829003601f168201915b5050505050905090565b5f8061058c610b4c565b9050610599818585610b53565b600191505092915050565b5f600254905090565b5f806105b7610b4c565b90506105c4858285610b65565b6105cf858585610bf8565b60019150509392505050565b5f6012905090565b6105eb610ce8565b6105f36105db565b600a6105ff919061174c565b60075461060c9190611796565b816106156105a4565b61061f91906117d7565b1115610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790611854565b60405180910390fd5b61066a8282610d6f565b5050565b5f610678826106e2565b9050919050565b610687610ce8565b5f81116106c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c0906118bc565b60405180910390fd5b8060068190555050565b5f6106dc610ce8565b47905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61072f610ce8565b6107385f610dee565b565b60065481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610777906115c0565b80601f01602080910402602001604051908101604052809291908181526020018280546107a3906115c0565b80156107ee5780601f106107c5576101008083540402835291602001916107ee565b820191905f5260205f20905b8154815290600101906020018083116107d157829003601f168201915b5050505050905090565b5f80610802610b4c565b905061080f818585610bf8565b600191505092915050565b5f6108236105a4565b905090565b5f341161086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611924565b60405180910390fd5b5f600654346108799190611796565b90506108836105db565b600a61088f919061174c565b60075461089c9190611796565b816108a56105a4565b6108af91906117d7565b11156108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790611854565b60405180910390fd5b6108fa3382610d6f565b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f333483604051610942929190611942565b60405180910390a250565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6109dd610ce8565b5f6109e6610740565b73ffffffffffffffffffffffffffffffffffffffff1647604051610a0990611996565b5f6040518083038185875af1925050503d805f8114610a43576040519150601f19603f3d011682016040523d82523d5f602084013e610a48565b606091505b5050905080610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a83906119f4565b60405180910390fd5b50565b5f610a986105a4565b610aa06105db565b600a610aac919061174c565b600754610ab99190611796565b610ac39190611a12565b905090565b610ad0610ce8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b40575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b37919061153c565b60405180910390fd5b610b4981610dee565b50565b5f33905090565b610b608383836001610eb1565b505050565b5f610b708484610953565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610bf25781811015610be3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610bda93929190611a45565b60405180910390fd5b610bf184848484035f610eb1565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c68575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c5f919061153c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cd8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ccf919061153c565b60405180910390fd5b610ce3838383611080565b505050565b610cf0610b4c565b73ffffffffffffffffffffffffffffffffffffffff16610d0e610740565b73ffffffffffffffffffffffffffffffffffffffff1614610d6d57610d31610b4c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d64919061153c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ddf575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dd6919061153c565b60405180910390fd5b610dea5f8383611080565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f21575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f18919061153c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f91575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f88919061153c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561107a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611071919061143a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110d0578060025f8282546110c491906117d7565b9250508190555061119e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611159578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161115093929190611a45565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e5578060025f828254039250508190555061122f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161128c919061143a565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112db82611299565b6112e581856112a3565b93506112f58185602086016112b3565b6112fe816112c1565b840191505092915050565b5f6020820190508181035f83015261132181846112d1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113568261132d565b9050919050565b6113668161134c565b8114611370575f80fd5b50565b5f813590506113818161135d565b92915050565b5f819050919050565b61139981611387565b81146113a3575f80fd5b50565b5f813590506113b481611390565b92915050565b5f80604083850312156113d0576113cf611329565b5b5f6113dd85828601611373565b92505060206113ee858286016113a6565b9150509250929050565b5f8115159050919050565b61140c816113f8565b82525050565b5f6020820190506114255f830184611403565b92915050565b61143481611387565b82525050565b5f60208201905061144d5f83018461142b565b92915050565b5f805f6060848603121561146a57611469611329565b5b5f61147786828701611373565b935050602061148886828701611373565b9250506040611499868287016113a6565b9150509250925092565b5f60ff82169050919050565b6114b8816114a3565b82525050565b5f6020820190506114d15f8301846114af565b92915050565b5f602082840312156114ec576114eb611329565b5b5f6114f984828501611373565b91505092915050565b5f6020828403121561151757611516611329565b5b5f611524848285016113a6565b91505092915050565b6115368161134c565b82525050565b5f60208201905061154f5f83018461152d565b92915050565b5f806040838503121561156b5761156a611329565b5b5f61157885828601611373565b925050602061158985828601611373565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115d757607f821691505b6020821081036115ea576115e9611593565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156116725780860481111561164e5761164d6115f0565b5b600185161561165d5780820291505b808102905061166b8561161d565b9450611632565b94509492505050565b5f8261168a5760019050611745565b81611697575f9050611745565b81600181146116ad57600281146116b7576116e6565b6001915050611745565b60ff8411156116c9576116c86115f0565b5b8360020a9150848211156116e0576116df6115f0565b5b50611745565b5060208310610133831016604e8410600b841016171561171b5782820a905083811115611716576117156115f0565b5b611745565b6117288484846001611629565b9250905081840481111561173f5761173e6115f0565b5b81810290505b9392505050565b5f61175682611387565b9150611761836114a3565b925061178e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461167b565b905092915050565b5f6117a082611387565b91506117ab83611387565b92508282026117b981611387565b915082820484148315176117d0576117cf6115f0565b5b5092915050565b5f6117e182611387565b91506117ec83611387565b9250828201905080821115611804576118036115f0565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f61183e6012836112a3565b91506118498261180a565b602082019050919050565b5f6020820190508181035f83015261186b81611832565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e2030000000005f82015250565b5f6118a6601c836112a3565b91506118b182611872565b602082019050919050565b5f6020820190508181035f8301526118d38161189a565b9050919050565b7f53656e642045544820746f2062757920746f6b656e73000000000000000000005f82015250565b5f61190e6016836112a3565b9150611919826118da565b602082019050919050565b5f6020820190508181035f83015261193b81611902565b9050919050565b5f6040820190506119555f83018561142b565b611962602083018461142b565b9392505050565b5f81905092915050565b50565b5f6119815f83611969565b915061198c82611973565b5f82019050919050565b5f6119a082611976565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f6119de6011836112a3565b91506119e9826119aa565b602082019050919050565b5f6020820190508181035f830152611a0b816119d2565b9050919050565b5f611a1c82611387565b9150611a2783611387565b9250828203905081811115611a3f57611a3e6115f0565b5b92915050565b5f606082019050611a585f83018661152d565b611a65602083018561142b565b611a72604083018461142b565b94935050505056fea2646970667358221220badebb1a6ee2406dcef8fd6d95b13f6d8ba9fd155041d54519e4d9ff02ef7f8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FF9B596 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD0FEBE4C GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xE4B7FB73 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x3F0 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x5F515226 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x6A61E5FC EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x320 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH2 0x73A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39E PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x404 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x9D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B4 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x58C PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH2 0x599 DUP2 DUP6 DUP6 PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B7 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH2 0x5C4 DUP6 DUP3 DUP6 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x5CF DUP6 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xA PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST DUP2 PUSH2 0x615 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST GT ISZERO PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66A DUP3 DUP3 PUSH2 0xD6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x678 DUP3 PUSH2 0x6E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C0 SWAP1 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DC PUSH2 0xCE8 JUMP JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72F PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x738 PUSH0 PUSH2 0xDEE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x777 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A3 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x802 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH2 0x80F DUP2 DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x823 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 SLOAD CALLVALUE PUSH2 0x879 SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP PUSH2 0x883 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xA PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST DUP2 PUSH2 0x8A5 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST GT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E7 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8FA CALLER DUP3 PUSH2 0xD6F JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0x942 SWAP3 SWAP2 SWAP1 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DD PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH2 0x9E6 PUSH2 0x740 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xA09 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA98 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0xAA0 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0xA PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAD0 PUSH2 0xCE8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB49 DUP2 PUSH2 0xDEE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB60 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEB1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB70 DUP5 DUP5 PUSH2 0x953 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xBF2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBE3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEB1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC68 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE3 DUP4 DUP4 DUP4 PUSH2 0x1080 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCF0 PUSH2 0xB4C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0E PUSH2 0x740 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD6D JUMPI PUSH2 0xD31 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEA PUSH0 DUP4 DUP4 PUSH2 0x1080 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF21 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF91 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x107A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x119E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1159 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x122F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12DB DUP3 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x12E5 DUP2 DUP6 PUSH2 0x12A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH2 0x12C1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1356 DUP3 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x134C JUMP JUMPDEST DUP2 EQ PUSH2 0x1370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1381 DUP2 PUSH2 0x135D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1399 DUP2 PUSH2 0x1387 JUMP JUMPDEST DUP2 EQ PUSH2 0x13A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B4 DUP2 PUSH2 0x1390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13CF PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DD DUP6 DUP3 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EE DUP6 DUP3 DUP7 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x13F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1425 PUSH0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1434 DUP2 PUSH2 0x1387 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x144D PUSH0 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1477 DUP7 DUP3 DUP8 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1488 DUP7 DUP3 DUP8 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1499 DUP7 DUP3 DUP8 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B8 DUP2 PUSH2 0x14A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EC JUMPI PUSH2 0x14EB PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1517 JUMPI PUSH2 0x1516 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1524 DUP5 DUP3 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x134C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x154F PUSH0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1578 DUP6 DUP3 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1589 DUP6 DUP3 DUP7 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x1593 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1672 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x164E JUMPI PUSH2 0x164D PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x165D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x166B DUP6 PUSH2 0x161D JUMP JUMPDEST SWAP5 POP PUSH2 0x1632 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x168A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1745 JUMP JUMPDEST DUP2 PUSH2 0x1697 JUMPI PUSH0 SWAP1 POP PUSH2 0x1745 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x16AD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x16B7 JUMPI PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1745 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1745 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x171B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1716 JUMPI PUSH2 0x1715 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST PUSH2 0x1745 JUMP JUMPDEST PUSH2 0x1728 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1629 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x173F JUMPI PUSH2 0x173E PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1756 DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x1761 DUP4 PUSH2 0x14A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x178E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A0 DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AB DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x17B9 DUP2 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E1 DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1804 JUMPI PUSH2 0x1803 PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x183E PUSH1 0x12 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1849 DUP3 PUSH2 0x180A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186B DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A6 PUSH1 0x1C DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B1 DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D3 DUP2 PUSH2 0x189A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E642045544820746F2062757920746F6B656E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x190E PUSH1 0x16 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1919 DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x193B DUP2 PUSH2 0x1902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1955 PUSH0 DUP4 ADD DUP6 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x1962 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1981 PUSH0 DUP4 PUSH2 0x1969 JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP3 PUSH2 0x1973 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A0 DUP3 PUSH2 0x1976 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE PUSH1 0x11 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A0B DUP2 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A1C DUP3 PUSH2 0x1387 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP4 PUSH2 0x1387 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A3F JUMPI PUSH2 0x1A3E PUSH2 0x15F0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A58 PUSH0 DUP4 ADD DUP7 PUSH2 0x152D JUMP JUMPDEST PUSH2 0x1A65 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x1A72 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x142B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xDE 0xBB BYTE PUSH15 0xE2406DCEF8FD6D95B13F6D8BA9FD15 POP COINBASE 0xD5 GASLIMIT NOT 0xE4 0xD9 SELFDESTRUCT MUL 0xEF PUSH32 0x8164736F6C634300081A00330000000000000000000000000000000000000000 ",
							"sourceMap": "315:3468:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1563:186:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3231:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2925:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2419:115;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;399:25:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3441:93:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1814:522;;;:::i;:::-;;463:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2618:178:9;;;;;;;;;;;;;:::i;:::-;;3653:128;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;1563:186:9:-;1531:13:0;:11;:13::i;:::-;1682:10:9::1;:8;:10::i;:::-;1678:2;:14;;;;:::i;:::-;1666:9;;:26;;;;:::i;:::-;1656:6;1640:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:52;;1632:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1725:17;1731:2;1735:6;1725:5;:17::i;:::-;1563:186:::0;;:::o;3231:111::-;3291:7;3317:18;3327:7;3317:9;:18::i;:::-;3310:25;;3231:111;;;:::o;2925:162::-;1531:13:0;:11;:13::i;:::-;3014:1:9::1;3002:9;:13;2994:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3071:9;3058:10;:22;;;;2925:162:::0;:::o;2419:115::-;2480:7;1531:13:0;:11;:13::i;:::-;2506:21:9::1;2499:28;;2419:115:::0;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;399:25:9:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3441:93:9:-;3488:7;3514:13;:11;:13::i;:::-;3507:20;;3441:93;:::o;1814:522::-;1880:1;1868:9;:13;1860:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1966:19;2000:10;;1988:9;:22;;;;:::i;:::-;1966:44;;2119:10;:8;:10::i;:::-;2115:2;:14;;;;:::i;:::-;2103:9;;:26;;;;:::i;:::-;2088:11;2072:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:57;;2064:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2196:30;2202:10;2214:11;2196:5;:30::i;:::-;2294:10;2278:51;;;2306:9;2317:11;2278:51;;;;;;;:::i;:::-;;;;;;;;1850:486;1814:522::o;463:24::-;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2618:178:9:-;1531:13:0;:11;:13::i;:::-;2669:12:9::1;2695:7;:5;:7::i;:::-;2687:21;;2716;2687:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:74;;;2760:7;2752:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;2658:138;2618:178::o:0;3653:128::-;3704:7;3761:13;:11;:13::i;:::-;3747:10;:8;:10::i;:::-;3743:2;:14;;;;:::i;:::-;3731:9;;:26;;;;:::i;:::-;3730:44;;;;:::i;:::-;3723:51;;3653:128;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:180::-;6808:77;6805:1;6798:88;6905:4;6902:1;6895:15;6929:4;6926:1;6919:15;6946:102;6988:8;7035:5;7032:1;7028:13;7007:34;;6946:102;;;:::o;7054:848::-;7115:5;7122:4;7146:6;7137:15;;7170:5;7161:14;;7184:712;7205:1;7195:8;7192:15;7184:712;;;7300:4;7295:3;7291:14;7285:4;7282:24;7279:50;;;7309:18;;:::i;:::-;7279:50;7359:1;7349:8;7345:16;7342:451;;;7774:4;7767:5;7763:16;7754:25;;7342:451;7824:4;7818;7814:15;7806:23;;7854:32;7877:8;7854:32;:::i;:::-;7842:44;;7184:712;;;7054:848;;;;;;;:::o;7908:1073::-;7962:5;8153:8;8143:40;;8174:1;8165:10;;8176:5;;8143:40;8202:4;8192:36;;8219:1;8210:10;;8221:5;;8192:36;8288:4;8336:1;8331:27;;;;8372:1;8367:191;;;;8281:277;;8331:27;8349:1;8340:10;;8351:5;;;8367:191;8412:3;8402:8;8399:17;8396:43;;;8419:18;;:::i;:::-;8396:43;8468:8;8465:1;8461:16;8452:25;;8503:3;8496:5;8493:14;8490:40;;;8510:18;;:::i;:::-;8490:40;8543:5;;;8281:277;;8667:2;8657:8;8654:16;8648:3;8642:4;8639:13;8635:36;8617:2;8607:8;8604:16;8599:2;8593:4;8590:12;8586:35;8570:111;8567:246;;;8723:8;8717:4;8713:19;8704:28;;8758:3;8751:5;8748:14;8745:40;;;8765:18;;:::i;:::-;8745:40;8798:5;;8567:246;8838:42;8876:3;8866:8;8860:4;8857:1;8838:42;:::i;:::-;8823:57;;;;8912:4;8907:3;8903:14;8896:5;8893:25;8890:51;;;8921:18;;:::i;:::-;8890:51;8970:4;8963:5;8959:16;8950:25;;7908:1073;;;;;;:::o;8987:281::-;9045:5;9069:23;9087:4;9069:23;:::i;:::-;9061:31;;9113:25;9129:8;9113:25;:::i;:::-;9101:37;;9157:104;9194:66;9184:8;9178:4;9157:104;:::i;:::-;9148:113;;8987:281;;;;:::o;9274:410::-;9314:7;9337:20;9355:1;9337:20;:::i;:::-;9332:25;;9371:20;9389:1;9371:20;:::i;:::-;9366:25;;9426:1;9423;9419:9;9448:30;9466:11;9448:30;:::i;:::-;9437:41;;9627:1;9618:7;9614:15;9611:1;9608:22;9588:1;9581:9;9561:83;9538:139;;9657:18;;:::i;:::-;9538:139;9322:362;9274:410;;;;:::o;9690:191::-;9730:3;9749:20;9767:1;9749:20;:::i;:::-;9744:25;;9783:20;9801:1;9783:20;:::i;:::-;9778:25;;9826:1;9823;9819:9;9812:16;;9847:3;9844:1;9841:10;9838:36;;;9854:18;;:::i;:::-;9838:36;9690:191;;;;:::o;9887:168::-;10027:20;10023:1;10015:6;10011:14;10004:44;9887:168;:::o;10061:366::-;10203:3;10224:67;10288:2;10283:3;10224:67;:::i;:::-;10217:74;;10300:93;10389:3;10300:93;:::i;:::-;10418:2;10413:3;10409:12;10402:19;;10061:366;;;:::o;10433:419::-;10599:4;10637:2;10626:9;10622:18;10614:26;;10686:9;10680:4;10676:20;10672:1;10661:9;10657:17;10650:47;10714:131;10840:4;10714:131;:::i;:::-;10706:139;;10433:419;;;:::o;10858:178::-;10998:30;10994:1;10986:6;10982:14;10975:54;10858:178;:::o;11042:366::-;11184:3;11205:67;11269:2;11264:3;11205:67;:::i;:::-;11198:74;;11281:93;11370:3;11281:93;:::i;:::-;11399:2;11394:3;11390:12;11383:19;;11042:366;;;:::o;11414:419::-;11580:4;11618:2;11607:9;11603:18;11595:26;;11667:9;11661:4;11657:20;11653:1;11642:9;11638:17;11631:47;11695:131;11821:4;11695:131;:::i;:::-;11687:139;;11414:419;;;:::o;11839:172::-;11979:24;11975:1;11967:6;11963:14;11956:48;11839:172;:::o;12017:366::-;12159:3;12180:67;12244:2;12239:3;12180:67;:::i;:::-;12173:74;;12256:93;12345:3;12256:93;:::i;:::-;12374:2;12369:3;12365:12;12358:19;;12017:366;;;:::o;12389:419::-;12555:4;12593:2;12582:9;12578:18;12570:26;;12642:9;12636:4;12632:20;12628:1;12617:9;12613:17;12606:47;12670:131;12796:4;12670:131;:::i;:::-;12662:139;;12389:419;;;:::o;12814:332::-;12935:4;12973:2;12962:9;12958:18;12950:26;;12986:71;13054:1;13043:9;13039:17;13030:6;12986:71;:::i;:::-;13067:72;13135:2;13124:9;13120:18;13111:6;13067:72;:::i;:::-;12814:332;;;;;:::o;13152:147::-;13253:11;13290:3;13275:18;;13152:147;;;;:::o;13305:114::-;;:::o;13425:398::-;13584:3;13605:83;13686:1;13681:3;13605:83;:::i;:::-;13598:90;;13697:93;13786:3;13697:93;:::i;:::-;13815:1;13810:3;13806:11;13799:18;;13425:398;;;:::o;13829:379::-;14013:3;14035:147;14178:3;14035:147;:::i;:::-;14028:154;;14199:3;14192:10;;13829:379;;;:::o;14214:167::-;14354:19;14350:1;14342:6;14338:14;14331:43;14214:167;:::o;14387:366::-;14529:3;14550:67;14614:2;14609:3;14550:67;:::i;:::-;14543:74;;14626:93;14715:3;14626:93;:::i;:::-;14744:2;14739:3;14735:12;14728:19;;14387:366;;;:::o;14759:419::-;14925:4;14963:2;14952:9;14948:18;14940:26;;15012:9;15006:4;15002:20;14998:1;14987:9;14983:17;14976:47;15040:131;15166:4;15040:131;:::i;:::-;15032:139;;14759:419;;;:::o;15184:194::-;15224:4;15244:20;15262:1;15244:20;:::i;:::-;15239:25;;15278:20;15296:1;15278:20;:::i;:::-;15273:25;;15322:1;15319;15315:9;15307:17;;15346:1;15340:4;15337:11;15334:37;;;15351:18;;:::i;:::-;15334:37;15184:194;;;;:::o;15384:442::-;15533:4;15571:2;15560:9;15556:18;15548:26;;15584:71;15652:1;15641:9;15637:17;15628:6;15584:71;:::i;:::-;15665:72;15733:2;15722:9;15718:18;15709:6;15665:72;:::i;:::-;15747;15815:2;15804:9;15800:18;15791:6;15747:72;:::i;:::-;15384:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1366400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"buyTokens()": "infinite",
								"checkBalance(address)": "2916",
								"decimals()": "450",
								"getContractBalance()": "infinite",
								"getRemainingSupply()": "infinite",
								"getTotalSupply()": "2577",
								"maxSupply()": "2469",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"setTokenPrice(uint256)": "infinite",
								"symbol()": "infinite",
								"tokenPrice()": "2448",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawETH()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 315,
									"end": 3783,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 889,
									"end": 1403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1062,
									"end": 1067,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1069,
									"end": 1076,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1144,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1116,
									"end": 1130,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1116,
									"end": 1144,
									"modifierDepth": 2,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1116,
									"end": 1144,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1188,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1108,
									"end": 1188,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1231,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1217,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1207,
									"end": 1231,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1231,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1231,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1231,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1253,
									"end": 1263,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1241,
									"end": 1250,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1241,
									"end": 1263,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1241,
									"end": 1263,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1241,
									"end": 1263,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1241,
									"end": 1263,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1352,
									"end": 1362,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1385,
									"end": 1393,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1385,
									"end": 1393,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1385,
									"end": 1393,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1385,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1395,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1385,
									"end": 1395,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1385,
									"end": 1395,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1383,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1381,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1381,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1381,
									"end": 1395,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1381,
									"end": 1395,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1381,
									"end": 1395,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1378,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1364,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1395,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1364,
									"end": 1395,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1395,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1364,
									"end": 1395,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1351,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1346,
									"end": 1351,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1346,
									"end": 1351,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1346,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1396,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1346,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 889,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3056,
									"end": 3062,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3064,
									"end": 3070,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3072,
									"end": 3078,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3080,
									"end": 3086,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3088,
									"end": 3094,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3137,
									"end": 3140,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 3125,
									"end": 3134,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3116,
									"end": 3123,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3112,
									"end": 3135,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3108,
									"end": 3141,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 3144,
									"end": 3223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 3144,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 3105,
									"end": 3225,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3285,
									"end": 3286,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3270,
									"end": 3287,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3264,
									"end": 3288,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3315,
									"end": 3333,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3307,
									"end": 3313,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3304,
									"end": 3334,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 3337,
									"end": 3416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 3337,
									"end": 3416,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 3301,
									"end": 3418,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 3508,
									"end": 3515,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3499,
									"end": 3505,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3488,
									"end": 3497,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 3484,
									"end": 3506,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 3442,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 3442,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3516,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3516,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3235,
									"end": 3526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3586,
									"end": 3588,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3575,
									"end": 3584,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3571,
									"end": 3589,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3565,
									"end": 3590,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3617,
									"end": 3635,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3609,
									"end": 3615,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3636,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 3639,
									"end": 3718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3639,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 3603,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 3810,
									"end": 3817,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3790,
									"end": 3799,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 3808,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 3744,
									"end": 3818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 3744,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3734,
									"end": 3818,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3734,
									"end": 3818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3867,
									"end": 3869,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3949,
									"end": 3956,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3940,
									"end": 3946,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3929,
									"end": 3938,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 3947,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3893,
									"end": 3957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3893,
									"end": 3957,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3883,
									"end": 3957,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3883,
									"end": 3957,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3838,
									"end": 3967,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4006,
									"end": 4008,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 4088,
									"end": 4095,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4079,
									"end": 4085,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4068,
									"end": 4077,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4064,
									"end": 4086,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4032,
									"end": 4096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 4032,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4022,
									"end": 4096,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4022,
									"end": 4096,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4145,
									"end": 4148,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 4228,
									"end": 4235,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4219,
									"end": 4225,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4208,
									"end": 4217,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4226,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4172,
									"end": 4236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 4172,
									"end": 4236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4162,
									"end": 4236,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4162,
									"end": 4236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4116,
									"end": 4246,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4311,
									"end": 4317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4345,
									"end": 4350,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4339,
									"end": 4351,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4329,
									"end": 4351,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4329,
									"end": 4351,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4358,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4364,
									"end": 4544,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 4364,
									"end": 4544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4412,
									"end": 4489,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4409,
									"end": 4410,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4402,
									"end": 4490,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4506,
									"end": 4507,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4499,
									"end": 4514,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4533,
									"end": 4537,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4530,
									"end": 4531,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4523,
									"end": 4538,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4625,
									"end": 4629,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4621,
									"end": 4633,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4611,
									"end": 4633,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4611,
									"end": 4633,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4678,
									"end": 4679,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4672,
									"end": 4676,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4680,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4755,
									"end": 4759,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4747,
									"end": 4753,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4743,
									"end": 4760,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4733,
									"end": 4760,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4733,
									"end": 4760,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 4689,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4817,
									"end": 4819,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4809,
									"end": 4815,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4806,
									"end": 4820,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 4821,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 4836,
									"end": 4854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 4780,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4601,
									"end": 4870,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4870,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4870,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4925,
									"end": 4929,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4948,
									"end": 4951,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4940,
									"end": 4951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4940,
									"end": 4951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4971,
									"end": 4974,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4968,
									"end": 4969,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4961,
									"end": 4975,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5005,
									"end": 5009,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5002,
									"end": 5003,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4992,
									"end": 5010,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4984,
									"end": 5010,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4984,
									"end": 5010,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4876,
									"end": 5017,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4876,
									"end": 5017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5066,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5107,
									"end": 5109,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5102,
									"end": 5104,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5095,
									"end": 5100,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5091,
									"end": 5105,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5087,
									"end": 5110,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 5077,
									"end": 5110,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5077,
									"end": 5110,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5023,
									"end": 5116,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5023,
									"end": 5116,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5166,
									"end": 5174,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5216,
									"end": 5221,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5206,
									"end": 5222,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5185,
									"end": 5222,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5185,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5304,
									"end": 5310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5354,
									"end": 5355,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5342,
									"end": 5352,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5338,
									"end": 5356,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 5407,
									"end": 5473,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5396,
									"end": 5405,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 5377,
									"end": 5474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 5377,
									"end": 5474,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 5525,
									"end": 5533,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5514,
									"end": 5523,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 5495,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 5495,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5483,
									"end": 5534,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 5483,
									"end": 5534,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5567,
									"end": 5571,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5563,
									"end": 5572,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5556,
									"end": 5561,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5552,
									"end": 5573,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 5573,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 5573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5616,
									"end": 5620,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5606,
									"end": 5614,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5602,
									"end": 5621,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5595,
									"end": 5600,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5622,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5582,
									"end": 5622,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5582,
									"end": 5622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5311,
									"end": 5628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5311,
									"end": 5628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5628,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5662,
									"end": 5665,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5683,
									"end": 5688,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5676,
									"end": 5688,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5676,
									"end": 5688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5634,
									"end": 5694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5634,
									"end": 5694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5750,
									"end": 5759,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 5810,
									"end": 5834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 5810,
									"end": 5834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 5801,
									"end": 5835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 5801,
									"end": 5835,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 5783,
									"end": 5836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 5783,
									"end": 5836,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5770,
									"end": 5836,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5770,
									"end": 5836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5842,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5891,
									"end": 5894,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5912,
									"end": 5917,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5848,
									"end": 5923,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5848,
									"end": 5923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 6070,
									"end": 6077,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 6039,
									"end": 6078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 6039,
									"end": 6078,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 6173,
									"end": 6189,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 6149,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 6149,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6134,
									"end": 6138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6128,
									"end": 6139,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 6100,
									"end": 6191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 6100,
									"end": 6191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6094,
									"end": 6098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6087,
									"end": 6192,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6005,
									"end": 6198,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5929,
									"end": 6198,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5929,
									"end": 6198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6204,
									"end": 6277,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 6204,
									"end": 6277,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6252,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6204,
									"end": 6277,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6204,
									"end": 6277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 6360,
									"end": 6392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "tag",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 6360,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 6459,
									"end": 6465,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6451,
									"end": 6457,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6445,
									"end": 6449,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 6401,
									"end": 6466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 6401,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6336,
									"end": 6472,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6283,
									"end": 6472,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6283,
									"end": 6472,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6555,
									"end": 6558,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6545,
									"end": 6559,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 6646,
									"end": 6647,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6639,
									"end": 6644,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 6609,
									"end": 6648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 6609,
									"end": 6648,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6582,
									"end": 6583,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6575,
									"end": 6580,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6571,
									"end": 6584,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6562,
									"end": 6584,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6562,
									"end": 6584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 6538,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6478,
									"end": 6664,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6478,
									"end": 6664,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6771,
									"end": 6773,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6766,
									"end": 6769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6763,
									"end": 6774,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 6837,
									"end": 6842,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 6805,
									"end": 6843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 6805,
									"end": 6843,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 6907,
									"end": 6917,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 6889,
									"end": 6918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 6889,
									"end": 6918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6879,
									"end": 6887,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6875,
									"end": 6919,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7072,
									"end": 7074,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7060,
									"end": 7070,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7057,
									"end": 7075,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7093,
									"end": 7101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7078,
									"end": 7101,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7078,
									"end": 7101,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "tag",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 7054,
									"end": 7103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 7190,
									"end": 7193,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 7172,
									"end": 7194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "tag",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 7172,
									"end": 7194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7162,
									"end": 7170,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7158,
									"end": 7195,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7145,
									"end": 7156,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 7116,
									"end": 7196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "tag",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 7116,
									"end": 7196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 7206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 7206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6760,
									"end": 7206,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6670,
									"end": 7213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6670,
									"end": 7213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7273,
									"end": 7281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7323,
									"end": 7328,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7317,
									"end": 7321,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7329,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 7292,
									"end": 7329,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7292,
									"end": 7329,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7336,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7336,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7392,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 7467,
									"end": 7468,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7463,
									"end": 7469,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7455,
									"end": 7460,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7452,
									"end": 7453,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 7448,
									"end": 7461,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 7419,
									"end": 7470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 7419,
									"end": 7470,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7415,
									"end": 7471,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7500,
									"end": 7504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7494,
									"end": 7498,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7490,
									"end": 7505,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7480,
									"end": 7505,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7480,
									"end": 7505,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7393,
									"end": 7511,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7342,
									"end": 7511,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7342,
									"end": 7511,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 7763,
									"end": 7766,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7757,
									"end": 7761,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 7738,
									"end": 7767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 7738,
									"end": 7767,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7730,
									"end": 7767,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7730,
									"end": 7767,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7800,
									"end": 7803,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7797,
									"end": 7798,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7793,
									"end": 7804,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7787,
									"end": 7791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7784,
									"end": 7805,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7776,
									"end": 7805,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7776,
									"end": 7805,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7516,
									"end": 7811,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7516,
									"end": 7811,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 7966,
									"end": 7969,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 7933,
									"end": 7970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 7933,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8035,
									"end": 8053,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8027,
									"end": 8033,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8024,
									"end": 8054,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 8057,
									"end": 8075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "tag",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 8057,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "tag",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 8021,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 8133,
									"end": 8137,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8127,
									"end": 8138,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 8101,
									"end": 8139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 8101,
									"end": 8139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 8246,
									"end": 8252,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8232,
									"end": 8236,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 8186,
									"end": 8253,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "tag",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 8186,
									"end": 8253,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8280,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8304,
									"end": 8308,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8291,
									"end": 8308,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8291,
									"end": 8308,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8336,
									"end": 8338,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8328,
									"end": 8334,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8325,
									"end": 8339,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8353,
									"end": 8354,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "193"
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9010,
									"end": 9011,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9027,
									"end": 9033,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9076,
									"end": 9085,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9071,
									"end": 9074,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 9067,
									"end": 9086,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9061,
									"end": 9087,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 9052,
									"end": 9087,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9052,
									"end": 9087,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "tag",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 9024,
									"end": 9101,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 9187,
									"end": 9193,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9180,
									"end": 9185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 9127,
									"end": 9194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "tag",
									"source": 10,
									"value": "195"
								},
								{
									"begin": 9127,
									"end": 9194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9121,
									"end": 9125,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 9114,
									"end": 9195,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8983,
									"end": 9205,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "tag",
									"source": 10,
									"value": "193"
								},
								{
									"begin": 8348,
									"end": 8966,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8400,
									"end": 8404,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8396,
									"end": 8405,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8394,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8406,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 8466,
									"end": 8470,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 8434,
									"end": 8471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 8434,
									"end": 8471,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8493,
									"end": 8494,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "tag",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8521,
									"end": 8528,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8518,
									"end": 8519,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8515,
									"end": 8529,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8600,
									"end": 8609,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8595,
									"end": 8598,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8610,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8585,
									"end": 8611,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8577,
									"end": 8583,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8570,
									"end": 8612,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8651,
									"end": 8652,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8643,
									"end": 8649,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8639,
									"end": 8653,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8629,
									"end": 8653,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8629,
									"end": 8653,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8698,
									"end": 8700,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8687,
									"end": 8696,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8683,
									"end": 8701,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8670,
									"end": 8701,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8670,
									"end": 8701,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8544,
									"end": 8548,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8541,
									"end": 8542,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8537,
									"end": 8549,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8532,
									"end": 8549,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8532,
									"end": 8549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "tag",
									"source": 10,
									"value": "199"
								},
								{
									"begin": 8507,
									"end": 8715,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8743,
									"end": 8749,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8734,
									"end": 8741,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8731,
									"end": 8750,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8801,
									"end": 8810,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8796,
									"end": 8799,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8792,
									"end": 8811,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8786,
									"end": 8812,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "201"
								},
								{
									"begin": 8886,
									"end": 8890,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8878,
									"end": 8884,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8874,
									"end": 8891,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8863,
									"end": 8872,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 8844,
									"end": 8892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "tag",
									"source": 10,
									"value": "201"
								},
								{
									"begin": 8844,
									"end": 8892,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8836,
									"end": 8842,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8829,
									"end": 8893,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8751,
									"end": 8907,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "tag",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 8728,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8949,
									"end": 8950,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 8941,
									"end": 8947,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8937,
									"end": 8951,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8933,
									"end": 8955,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8927,
									"end": 8931,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8920,
									"end": 8956,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8355,
									"end": 8966,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8355,
									"end": 8966,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8355,
									"end": 8966,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "tag",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8318,
									"end": 9205,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7908,
									"end": 9211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7908,
									"end": 9211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7908,
									"end": 9211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7816,
									"end": 9211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7816,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9254,
									"end": 9261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9336,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9287,
									"end": 9292,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9283,
									"end": 9337,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9217,
									"end": 9343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9386,
									"end": 9393,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 9433,
									"end": 9438,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 9415,
									"end": 9439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "tag",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9349,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 10,
									"value": "206"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 10,
									"value": "208"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9887,
									"end": 9898,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9921,
									"end": 9927,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9916,
									"end": 9919,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9909,
									"end": 9928,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9961,
									"end": 9965,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9956,
									"end": 9959,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9952,
									"end": 9966,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9937,
									"end": 9966,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9972,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9978,
									"end": 10204,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 9978,
									"end": 10204,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10118,
									"end": 10152,
									"name": "PUSH",
									"source": 10,
									"value": "496E697469616C20737570706C792063616E6E6F7420657863656564206D6178"
								},
								{
									"begin": 10114,
									"end": 10115,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10106,
									"end": 10112,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10102,
									"end": 10116,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10095,
									"end": 10153,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 10187,
									"end": 10196,
									"name": "PUSH",
									"source": 10,
									"value": "20737570706C7900000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10182,
									"end": 10184,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10174,
									"end": 10180,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10170,
									"end": 10185,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10163,
									"end": 10197,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9978,
									"end": 10204,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9978,
									"end": 10204,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10210,
									"end": 10576,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 10210,
									"end": 10576,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10352,
									"end": 10355,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10373,
									"end": 10440,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 10437,
									"end": 10439,
									"name": "PUSH",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 10432,
									"end": 10435,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10373,
									"end": 10440,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 10373,
									"end": 10440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10373,
									"end": 10440,
									"name": "tag",
									"source": 10,
									"value": "212"
								},
								{
									"begin": 10373,
									"end": 10440,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10366,
									"end": 10440,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10366,
									"end": 10440,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10449,
									"end": 10542,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 10538,
									"end": 10541,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10449,
									"end": 10542,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 10449,
									"end": 10542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10449,
									"end": 10542,
									"name": "tag",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 10449,
									"end": 10542,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10567,
									"end": 10569,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 10562,
									"end": 10565,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10558,
									"end": 10570,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10551,
									"end": 10570,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10551,
									"end": 10570,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10210,
									"end": 10576,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10210,
									"end": 10576,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10210,
									"end": 10576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10210,
									"end": 10576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10582,
									"end": 11001,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10582,
									"end": 11001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10748,
									"end": 10752,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10786,
									"end": 10788,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10775,
									"end": 10784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10771,
									"end": 10789,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10763,
									"end": 10789,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10763,
									"end": 10789,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10835,
									"end": 10844,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10829,
									"end": 10833,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10825,
									"end": 10845,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 10821,
									"end": 10822,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10810,
									"end": 10819,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10806,
									"end": 10823,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10799,
									"end": 10846,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 10863,
									"end": 10994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 10989,
									"end": 10993,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10863,
									"end": 10994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 10863,
									"end": 10994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10863,
									"end": 10994,
									"name": "tag",
									"source": 10,
									"value": "215"
								},
								{
									"begin": 10863,
									"end": 10994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10855,
									"end": 10994,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10855,
									"end": 10994,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10582,
									"end": 11001,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10582,
									"end": 11001,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10582,
									"end": 11001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10582,
									"end": 11001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11007,
									"end": 11187,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 11007,
									"end": 11187,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11055,
									"end": 11132,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11052,
									"end": 11053,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11045,
									"end": 11133,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 11152,
									"end": 11156,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 11149,
									"end": 11150,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 11142,
									"end": 11157,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 11176,
									"end": 11180,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 11173,
									"end": 11174,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11166,
									"end": 11181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 11193,
									"end": 11295,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 11193,
									"end": 11295,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11235,
									"end": 11243,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11282,
									"end": 11287,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11279,
									"end": 11280,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11275,
									"end": 11288,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 11254,
									"end": 11288,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11254,
									"end": 11288,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11193,
									"end": 11295,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11193,
									"end": 11295,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11193,
									"end": 11295,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11193,
									"end": 11295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11362,
									"end": 11367,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11369,
									"end": 11373,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 11393,
									"end": 11399,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11384,
									"end": 11399,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 11384,
									"end": 11399,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11417,
									"end": 11422,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 11408,
									"end": 11422,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11408,
									"end": 11422,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "tag",
									"source": 10,
									"value": "219"
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11452,
									"end": 11453,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11442,
									"end": 11450,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11439,
									"end": 11454,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "221"
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11547,
									"end": 11551,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 11542,
									"end": 11545,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 11538,
									"end": 11552,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 11532,
									"end": 11536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 11529,
									"end": 11553,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 11526,
									"end": 11576,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11526,
									"end": 11576,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "222"
								},
								{
									"begin": 11526,
									"end": 11576,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11556,
									"end": 11574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "223"
								},
								{
									"begin": 11556,
									"end": 11574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 11556,
									"end": 11574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11556,
									"end": 11574,
									"name": "tag",
									"source": 10,
									"value": "223"
								},
								{
									"begin": 11556,
									"end": 11574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11526,
									"end": 11576,
									"name": "tag",
									"source": 10,
									"value": "222"
								},
								{
									"begin": 11526,
									"end": 11576,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11606,
									"end": 11607,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11596,
									"end": 11604,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11592,
									"end": 11608,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 11589,
									"end": 12040,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11589,
									"end": 12040,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "224"
								},
								{
									"begin": 11589,
									"end": 12040,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12021,
									"end": 12025,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 12014,
									"end": 12019,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12010,
									"end": 12026,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 12001,
									"end": 12026,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12001,
									"end": 12026,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11589,
									"end": 12040,
									"name": "tag",
									"source": 10,
									"value": "224"
								},
								{
									"begin": 11589,
									"end": 12040,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12071,
									"end": 12075,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 12065,
									"end": 12069,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12061,
									"end": 12076,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 12053,
									"end": 12076,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12053,
									"end": 12076,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12101,
									"end": 12133,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 12124,
									"end": 12132,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 12101,
									"end": 12133,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 12101,
									"end": 12133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12101,
									"end": 12133,
									"name": "tag",
									"source": 10,
									"value": "225"
								},
								{
									"begin": 12101,
									"end": 12133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12089,
									"end": 12133,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 12089,
									"end": 12133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "219"
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "tag",
									"source": 10,
									"value": "221"
								},
								{
									"begin": 11431,
									"end": 12143,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11301,
									"end": 12149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12209,
									"end": 12214,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12400,
									"end": 12408,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12390,
									"end": 12430,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 12390,
									"end": 12430,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12421,
									"end": 12422,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 12412,
									"end": 12422,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12412,
									"end": 12422,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12423,
									"end": 12428,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 12423,
									"end": 12428,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12390,
									"end": 12430,
									"name": "tag",
									"source": 10,
									"value": "227"
								},
								{
									"begin": 12390,
									"end": 12430,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12449,
									"end": 12453,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12439,
									"end": 12475,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 12439,
									"end": 12475,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12466,
									"end": 12467,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 12457,
									"end": 12467,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12457,
									"end": 12467,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12468,
									"end": 12473,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 12468,
									"end": 12473,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12439,
									"end": 12475,
									"name": "tag",
									"source": 10,
									"value": "228"
								},
								{
									"begin": 12439,
									"end": 12475,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12535,
									"end": 12539,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12583,
									"end": 12584,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 12578,
									"end": 12605,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12578,
									"end": 12605,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 12578,
									"end": 12605,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 12578,
									"end": 12605,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12619,
									"end": 12620,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 12614,
									"end": 12805,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12614,
									"end": 12805,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 12614,
									"end": 12805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "231"
								},
								{
									"begin": 12614,
									"end": 12805,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12528,
									"end": 12805,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "229"
								},
								{
									"begin": 12528,
									"end": 12805,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12578,
									"end": 12605,
									"name": "tag",
									"source": 10,
									"value": "230"
								},
								{
									"begin": 12578,
									"end": 12605,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12596,
									"end": 12597,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 12587,
									"end": 12597,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12587,
									"end": 12597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12598,
									"end": 12603,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12598,
									"end": 12603,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 12598,
									"end": 12603,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12614,
									"end": 12805,
									"name": "tag",
									"source": 10,
									"value": "231"
								},
								{
									"begin": 12614,
									"end": 12805,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12659,
									"end": 12662,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 12649,
									"end": 12657,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12646,
									"end": 12663,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12643,
									"end": 12686,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12643,
									"end": 12686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 12643,
									"end": 12686,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12666,
									"end": 12684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "233"
								},
								{
									"begin": 12666,
									"end": 12684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 12666,
									"end": 12684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12666,
									"end": 12684,
									"name": "tag",
									"source": 10,
									"value": "233"
								},
								{
									"begin": 12666,
									"end": 12684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12643,
									"end": 12686,
									"name": "tag",
									"source": 10,
									"value": "232"
								},
								{
									"begin": 12643,
									"end": 12686,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12715,
									"end": 12723,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12712,
									"end": 12713,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 12708,
									"end": 12724,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 12699,
									"end": 12724,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 12699,
									"end": 12724,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12750,
									"end": 12753,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12743,
									"end": 12748,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12740,
									"end": 12754,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12737,
									"end": 12777,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12737,
									"end": 12777,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "234"
								},
								{
									"begin": 12737,
									"end": 12777,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12757,
									"end": 12775,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "235"
								},
								{
									"begin": 12757,
									"end": 12775,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 12757,
									"end": 12775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12757,
									"end": 12775,
									"name": "tag",
									"source": 10,
									"value": "235"
								},
								{
									"begin": 12757,
									"end": 12775,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12737,
									"end": 12777,
									"name": "tag",
									"source": 10,
									"value": "234"
								},
								{
									"begin": 12737,
									"end": 12777,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 12795,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12790,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 12790,
									"end": 12795,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12528,
									"end": 12805,
									"name": "tag",
									"source": 10,
									"value": "229"
								},
								{
									"begin": 12528,
									"end": 12805,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12528,
									"end": 12805,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12914,
									"end": 12916,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 12904,
									"end": 12912,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12901,
									"end": 12917,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12895,
									"end": 12898,
									"name": "PUSH",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 12889,
									"end": 12893,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12886,
									"end": 12899,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12882,
									"end": 12918,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 12864,
									"end": 12866,
									"name": "PUSH",
									"source": 10,
									"value": "4E"
								},
								{
									"begin": 12854,
									"end": 12862,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12851,
									"end": 12867,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12846,
									"end": 12848,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 12840,
									"end": 12844,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 12837,
									"end": 12849,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 12833,
									"end": 12868,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 12817,
									"end": 12928,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 12814,
									"end": 13060,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12814,
									"end": 13060,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 12814,
									"end": 13060,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 12970,
									"end": 12978,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12964,
									"end": 12968,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 12960,
									"end": 12979,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 12951,
									"end": 12979,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 12951,
									"end": 12979,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13005,
									"end": 13008,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 12998,
									"end": 13003,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 12995,
									"end": 13009,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 12992,
									"end": 13032,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 12992,
									"end": 13032,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 12992,
									"end": 13032,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13012,
									"end": 13030,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 13012,
									"end": 13030,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 13012,
									"end": 13030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13012,
									"end": 13030,
									"name": "tag",
									"source": 10,
									"value": "238"
								},
								{
									"begin": 13012,
									"end": 13030,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12992,
									"end": 13032,
									"name": "tag",
									"source": 10,
									"value": "237"
								},
								{
									"begin": 12992,
									"end": 13032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13045,
									"end": 13050,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 13045,
									"end": 13050,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 12814,
									"end": 13060,
									"name": "tag",
									"source": 10,
									"value": "236"
								},
								{
									"begin": 12814,
									"end": 13060,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13085,
									"end": 13127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "239"
								},
								{
									"begin": 13123,
									"end": 13126,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13113,
									"end": 13121,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13107,
									"end": 13111,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13104,
									"end": 13105,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 13085,
									"end": 13127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 13085,
									"end": 13127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13085,
									"end": 13127,
									"name": "tag",
									"source": 10,
									"value": "239"
								},
								{
									"begin": 13085,
									"end": 13127,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13070,
									"end": 13127,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13070,
									"end": 13127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13070,
									"end": 13127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13070,
									"end": 13127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13159,
									"end": 13163,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13154,
									"end": 13157,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13150,
									"end": 13164,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 13143,
									"end": 13148,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13140,
									"end": 13165,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 13137,
									"end": 13188,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13137,
									"end": 13188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "240"
								},
								{
									"begin": 13137,
									"end": 13188,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13168,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "241"
								},
								{
									"begin": 13168,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 13168,
									"end": 13186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13168,
									"end": 13186,
									"name": "tag",
									"source": 10,
									"value": "241"
								},
								{
									"begin": 13168,
									"end": 13186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13137,
									"end": 13188,
									"name": "tag",
									"source": 10,
									"value": "240"
								},
								{
									"begin": 13137,
									"end": 13188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13217,
									"end": 13221,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13210,
									"end": 13215,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13206,
									"end": 13222,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 13197,
									"end": 13222,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13197,
									"end": 13222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "tag",
									"source": 10,
									"value": "226"
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 12155,
									"end": 13228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13234,
									"end": 13320,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 13234,
									"end": 13320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13269,
									"end": 13276,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13309,
									"end": 13313,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 13302,
									"end": 13307,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13298,
									"end": 13314,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 13287,
									"end": 13314,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13287,
									"end": 13314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13234,
									"end": 13320,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13234,
									"end": 13320,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13234,
									"end": 13320,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13234,
									"end": 13320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13326,
									"end": 13607,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 13326,
									"end": 13607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13384,
									"end": 13389,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13408,
									"end": 13431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 13426,
									"end": 13430,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13408,
									"end": 13431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 13408,
									"end": 13431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13408,
									"end": 13431,
									"name": "tag",
									"source": 10,
									"value": "244"
								},
								{
									"begin": 13408,
									"end": 13431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13400,
									"end": 13431,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13400,
									"end": 13431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13452,
									"end": 13477,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "245"
								},
								{
									"begin": 13468,
									"end": 13476,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13452,
									"end": 13477,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 13452,
									"end": 13477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13452,
									"end": 13477,
									"name": "tag",
									"source": 10,
									"value": "245"
								},
								{
									"begin": 13452,
									"end": 13477,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13440,
									"end": 13477,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13440,
									"end": 13477,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13496,
									"end": 13600,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "246"
								},
								{
									"begin": 13533,
									"end": 13599,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13523,
									"end": 13531,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13517,
									"end": 13521,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13496,
									"end": 13600,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 13496,
									"end": 13600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13496,
									"end": 13600,
									"name": "tag",
									"source": 10,
									"value": "246"
								},
								{
									"begin": 13496,
									"end": 13600,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13487,
									"end": 13600,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 13487,
									"end": 13600,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13326,
									"end": 13607,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13326,
									"end": 13607,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13326,
									"end": 13607,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13326,
									"end": 13607,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13326,
									"end": 13607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13613,
									"end": 14023,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 13613,
									"end": 14023,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13653,
									"end": 13660,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 13676,
									"end": 13696,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 13694,
									"end": 13695,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13676,
									"end": 13696,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 13676,
									"end": 13696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13676,
									"end": 13696,
									"name": "tag",
									"source": 10,
									"value": "248"
								},
								{
									"begin": 13676,
									"end": 13696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13671,
									"end": 13696,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13671,
									"end": 13696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13710,
									"end": 13730,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 13728,
									"end": 13729,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13710,
									"end": 13730,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 13710,
									"end": 13730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13710,
									"end": 13730,
									"name": "tag",
									"source": 10,
									"value": "249"
								},
								{
									"begin": 13710,
									"end": 13730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13705,
									"end": 13730,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13705,
									"end": 13730,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13765,
									"end": 13766,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13762,
									"end": 13763,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13758,
									"end": 13767,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 13787,
									"end": 13817,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "250"
								},
								{
									"begin": 13805,
									"end": 13816,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 13787,
									"end": 13817,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 13787,
									"end": 13817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13787,
									"end": 13817,
									"name": "tag",
									"source": 10,
									"value": "250"
								},
								{
									"begin": 13787,
									"end": 13817,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13776,
									"end": 13817,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13776,
									"end": 13817,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13966,
									"end": 13967,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13957,
									"end": 13964,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 13953,
									"end": 13968,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 13950,
									"end": 13951,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 13947,
									"end": 13969,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 13927,
									"end": 13928,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 13920,
									"end": 13929,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 13900,
									"end": 13983,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 13877,
									"end": 14016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "251"
								},
								{
									"begin": 13877,
									"end": 14016,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 13996,
									"end": 14014,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 13996,
									"end": 14014,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 13996,
									"end": 14014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 13996,
									"end": 14014,
									"name": "tag",
									"source": 10,
									"value": "252"
								},
								{
									"begin": 13996,
									"end": 14014,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13877,
									"end": 14016,
									"name": "tag",
									"source": 10,
									"value": "251"
								},
								{
									"begin": 13877,
									"end": 14016,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 13661,
									"end": 14023,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13613,
									"end": 14023,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 13613,
									"end": 14023,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 13613,
									"end": 14023,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13613,
									"end": 14023,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 13613,
									"end": 14023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14029,
									"end": 14220,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 14029,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14069,
									"end": 14072,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14088,
									"end": 14108,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 14106,
									"end": 14107,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14088,
									"end": 14108,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 14088,
									"end": 14108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14088,
									"end": 14108,
									"name": "tag",
									"source": 10,
									"value": "254"
								},
								{
									"begin": 14088,
									"end": 14108,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14083,
									"end": 14108,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14083,
									"end": 14108,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14122,
									"end": 14142,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "255"
								},
								{
									"begin": 14140,
									"end": 14141,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14122,
									"end": 14142,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 14122,
									"end": 14142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14122,
									"end": 14142,
									"name": "tag",
									"source": 10,
									"value": "255"
								},
								{
									"begin": 14122,
									"end": 14142,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14117,
									"end": 14142,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14117,
									"end": 14142,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14165,
									"end": 14166,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14162,
									"end": 14163,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14158,
									"end": 14167,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14151,
									"end": 14167,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14151,
									"end": 14167,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14186,
									"end": 14189,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 14183,
									"end": 14184,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14180,
									"end": 14190,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 14177,
									"end": 14213,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 14177,
									"end": 14213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "256"
								},
								{
									"begin": 14177,
									"end": 14213,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 14193,
									"end": 14211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "257"
								},
								{
									"begin": 14193,
									"end": 14211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 14193,
									"end": 14211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14193,
									"end": 14211,
									"name": "tag",
									"source": 10,
									"value": "257"
								},
								{
									"begin": 14193,
									"end": 14211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14177,
									"end": 14213,
									"name": "tag",
									"source": 10,
									"value": "256"
								},
								{
									"begin": 14177,
									"end": 14213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14029,
									"end": 14220,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14029,
									"end": 14220,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14029,
									"end": 14220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14029,
									"end": 14220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14029,
									"end": 14220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14226,
									"end": 14344,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 14226,
									"end": 14344,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14313,
									"end": 14337,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "259"
								},
								{
									"begin": 14331,
									"end": 14336,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 14313,
									"end": 14337,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 14313,
									"end": 14337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14313,
									"end": 14337,
									"name": "tag",
									"source": 10,
									"value": "259"
								},
								{
									"begin": 14313,
									"end": 14337,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14308,
									"end": 14311,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14301,
									"end": 14338,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 14226,
									"end": 14344,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14226,
									"end": 14344,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14226,
									"end": 14344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14499,
									"end": 14503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14537,
									"end": 14539,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 14526,
									"end": 14535,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14522,
									"end": 14540,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14514,
									"end": 14540,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14514,
									"end": 14540,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14550,
									"end": 14621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "261"
								},
								{
									"begin": 14618,
									"end": 14619,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14607,
									"end": 14616,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14603,
									"end": 14620,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14594,
									"end": 14600,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 14550,
									"end": 14621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 14550,
									"end": 14621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14550,
									"end": 14621,
									"name": "tag",
									"source": 10,
									"value": "261"
								},
								{
									"begin": 14550,
									"end": 14621,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14631,
									"end": 14703,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "262"
								},
								{
									"begin": 14699,
									"end": 14701,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14688,
									"end": 14697,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14684,
									"end": 14702,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14675,
									"end": 14681,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 14631,
									"end": 14703,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 14631,
									"end": 14703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14631,
									"end": 14703,
									"name": "tag",
									"source": 10,
									"value": "262"
								},
								{
									"begin": 14631,
									"end": 14703,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14713,
									"end": 14785,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "263"
								},
								{
									"begin": 14781,
									"end": 14783,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 14770,
									"end": 14779,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14766,
									"end": 14784,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14757,
									"end": 14763,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 14713,
									"end": 14785,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 14713,
									"end": 14785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14713,
									"end": 14785,
									"name": "tag",
									"source": 10,
									"value": "263"
								},
								{
									"begin": 14713,
									"end": 14785,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14350,
									"end": 14792,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14798,
									"end": 15020,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 14798,
									"end": 15020,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14891,
									"end": 14895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14929,
									"end": 14931,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14918,
									"end": 14927,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 14914,
									"end": 14932,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14906,
									"end": 14932,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14906,
									"end": 14932,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14942,
									"end": 15013,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "265"
								},
								{
									"begin": 15010,
									"end": 15011,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 14999,
									"end": 15008,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 14995,
									"end": 15012,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 14986,
									"end": 14992,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 14942,
									"end": 15013,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 14942,
									"end": 15013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14942,
									"end": 15013,
									"name": "tag",
									"source": 10,
									"value": "265"
								},
								{
									"begin": 14942,
									"end": 15013,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14798,
									"end": 15020,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 14798,
									"end": 15020,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14798,
									"end": 15020,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14798,
									"end": 15020,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14798,
									"end": 15020,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 3783,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220badebb1a6ee2406dcef8fd6d95b13f6d8ba9fd155041d54519e4d9ff02ef7f8164736f6c634300081a0033",
									".code": [
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "7FF9B596"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "D0FEBE4C"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "D0FEBE4C"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "D5ABEB01"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "E086E5EC"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "E4B7FB73"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "7FF9B596"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "C4E41B22"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "5F515226"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "6A61E5FC"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "6F9FB98A"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 315,
											"end": 3783,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1563,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1563,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3231,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3231,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3231,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2925,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2925,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2419,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2419,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 399,
											"end": 424,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 399,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 399,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3441,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3441,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1814,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 463,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 463,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2618,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3653,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3653,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1682,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1682,
											"end": 1692,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1692,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1682,
											"end": 1692,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1678,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1678,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1678,
											"end": 1692,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1692,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1678,
											"end": 1692,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1666,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1692,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1666,
											"end": 1692,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1692,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1666,
											"end": 1692,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1640,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1640,
											"end": 1653,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1640,
											"end": 1653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1640,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1640,
											"end": 1662,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1640,
											"end": 1662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1692,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1632,
											"end": 1715,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1632,
											"end": 1715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1731,
											"end": 1733,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1741,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1725,
											"end": 1742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1725,
											"end": 1742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3327,
											"end": 3334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3317,
											"end": 3335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3015,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 2994,
											"end": 3048,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2994,
											"end": 3048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3058,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3080,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3080,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2925,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2527,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 399,
											"end": 424,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 399,
											"end": 424,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 399,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3514,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3527,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3514,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1814,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1868,
											"end": 1881,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1860,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1860,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1988,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1966,
											"end": 2010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1966,
											"end": 2010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2119,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2129,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2119,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2115,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2115,
											"end": 2129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2115,
											"end": 2129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2115,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2115,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2115,
											"end": 2129,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2115,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2103,
											"end": 2129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2103,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2129,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2103,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2072,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2085,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2072,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2072,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2072,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2129,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2129,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2064,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2064,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2196,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2202,
											"end": 2212,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2196,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2196,
											"end": 2226,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2196,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33"
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2278,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2329,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 2336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 2336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 463,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2618,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2695,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2695,
											"end": 2702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2695,
											"end": 2702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2687,
											"end": 2742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2767,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2752,
											"end": 2789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2752,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2796,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3761,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3761,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3774,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3761,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3747,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3747,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3757,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3747,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3743,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3731,
											"end": 3757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3731,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3757,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3731,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3730,
											"end": 3774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3730,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3774,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3730,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6885,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6902,
											"end": 6903,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6933,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6934,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 6996,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7040,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7028,
											"end": 7041,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7126,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7137,
											"end": 7152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7137,
											"end": 7152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7195,
											"end": 7203,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7207,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7304,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7295,
											"end": 7298,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7305,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7306,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7309,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7349,
											"end": 7357,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7361,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7828,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7829,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7877,
											"end": 7885,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7854,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7842,
											"end": 7886,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7842,
											"end": 7886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7962,
											"end": 7967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8174,
											"end": 8175,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8176,
											"end": 8181,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8202,
											"end": 8206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8221,
											"end": 8226,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8340,
											"end": 8350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8402,
											"end": 8410,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 8416,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8419,
											"end": 8437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8476,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8452,
											"end": 8477,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8452,
											"end": 8477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8503,
											"end": 8506,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8493,
											"end": 8507,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8510,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8543,
											"end": 8548,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8667,
											"end": 8669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8657,
											"end": 8665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8654,
											"end": 8670,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8648,
											"end": 8651,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8639,
											"end": 8652,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8617,
											"end": 8619,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 8607,
											"end": 8615,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8620,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8599,
											"end": 8601,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8586,
											"end": 8621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8681,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8732,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8704,
											"end": 8732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8704,
											"end": 8732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8751,
											"end": 8756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8762,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8765,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8798,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8798,
											"end": 8803,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8876,
											"end": 8879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 8874,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8838,
											"end": 8880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8912,
											"end": 8916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8907,
											"end": 8910,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8917,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8896,
											"end": 8901,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8893,
											"end": 8918,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8921,
											"end": 8939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8970,
											"end": 8974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8963,
											"end": 8968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8959,
											"end": 8975,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8950,
											"end": 8975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8950,
											"end": 8975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 9087,
											"end": 9091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9069,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9061,
											"end": 9092,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9061,
											"end": 9092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 9129,
											"end": 9137,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 9113,
											"end": 9138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9138,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 9194,
											"end": 9260,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9184,
											"end": 9192,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9182,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 9157,
											"end": 9261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8987,
											"end": 9268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 9355,
											"end": 9356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9337,
											"end": 9357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9357,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9371,
											"end": 9391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9391,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9466,
											"end": 9477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9448,
											"end": 9478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9627,
											"end": 9628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9625,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9629,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9589,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9590,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9644,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9657,
											"end": 9675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9322,
											"end": 9684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9690,
											"end": 9881,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 9690,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9730,
											"end": 9733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9749,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9744,
											"end": 9769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9783,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9802,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9783,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9783,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9783,
											"end": 9803,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9783,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9803,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9826,
											"end": 9827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9823,
											"end": 9824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9819,
											"end": 9828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9850,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9844,
											"end": 9845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9851,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 9874,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9838,
											"end": 9874,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9854,
											"end": 9872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 9874,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9838,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9690,
											"end": 9881,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9690,
											"end": 9881,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9690,
											"end": 9881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9690,
											"end": 9881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9690,
											"end": 9881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9887,
											"end": 10055,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 9887,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10027,
											"end": 10047,
											"name": "PUSH",
											"source": 10,
											"value": "45786365656473206D617820737570706C790000000000000000000000000000"
										},
										{
											"begin": 10023,
											"end": 10024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10015,
											"end": 10021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10048,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9887,
											"end": 10055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9887,
											"end": 10055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10427,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 10061,
											"end": 10427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10203,
											"end": 10206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10224,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10283,
											"end": 10286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10224,
											"end": 10291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10291,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10224,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10217,
											"end": 10291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10217,
											"end": 10291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10389,
											"end": 10392,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10300,
											"end": 10393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10393,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10300,
											"end": 10393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10418,
											"end": 10420,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10413,
											"end": 10416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10409,
											"end": 10421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10626,
											"end": 10635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10695,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10697,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 10840,
											"end": 10844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 10714,
											"end": 10845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10706,
											"end": 10845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10706,
											"end": 10845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10858,
											"end": 11036,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 10858,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10998,
											"end": 11028,
											"name": "PUSH",
											"source": 10,
											"value": "5072696365206D7573742062652067726561746572207468616E203000000000"
										},
										{
											"begin": 10994,
											"end": 10995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 10996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10858,
											"end": 11036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10858,
											"end": 11036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11408,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 11042,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11269,
											"end": 11271,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 11264,
											"end": 11267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11205,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11205,
											"end": 11272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11205,
											"end": 11272,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11205,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11272,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11370,
											"end": 11373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 11281,
											"end": 11374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11374,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11281,
											"end": 11374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11399,
											"end": 11401,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11394,
											"end": 11397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11390,
											"end": 11402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11383,
											"end": 11402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11383,
											"end": 11402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11414,
											"end": 11833,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 11414,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11618,
											"end": 11620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11595,
											"end": 11621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11595,
											"end": 11621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11667,
											"end": 11676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11661,
											"end": 11665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 11677,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11653,
											"end": 11654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11642,
											"end": 11651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11638,
											"end": 11655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11695,
											"end": 11826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11821,
											"end": 11825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11695,
											"end": 11826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 11695,
											"end": 11826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11695,
											"end": 11826,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11695,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11687,
											"end": 11826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11687,
											"end": 11826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11414,
											"end": 11833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11414,
											"end": 11833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11414,
											"end": 11833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11414,
											"end": 11833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11839,
											"end": 12011,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 11839,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12003,
											"name": "PUSH",
											"source": 10,
											"value": "53656E642045544820746F2062757920746F6B656E7300000000000000000000"
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11967,
											"end": 11973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11963,
											"end": 11977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11956,
											"end": 12004,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11839,
											"end": 12011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11839,
											"end": 12011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12383,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 12017,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12159,
											"end": 12162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 12244,
											"end": 12246,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 12239,
											"end": 12242,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12180,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12180,
											"end": 12247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12180,
											"end": 12247,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 12180,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12173,
											"end": 12247,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12173,
											"end": 12247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12256,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12345,
											"end": 12348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12256,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 12256,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12256,
											"end": 12349,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12256,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12374,
											"end": 12376,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12369,
											"end": 12372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12358,
											"end": 12377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12358,
											"end": 12377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12383,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12808,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 12389,
											"end": 12808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12555,
											"end": 12559,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12593,
											"end": 12595,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12582,
											"end": 12591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12578,
											"end": 12596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12636,
											"end": 12640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 12652,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12628,
											"end": 12629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12617,
											"end": 12626,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12613,
											"end": 12630,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12606,
											"end": 12653,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 12670,
											"end": 12801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12801,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12670,
											"end": 12801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12662,
											"end": 12801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12662,
											"end": 12801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12808,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 13146,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12814,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 12939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12973,
											"end": 12975,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12962,
											"end": 12971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 12976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 13054,
											"end": 13055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13043,
											"end": 13052,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13039,
											"end": 13056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13030,
											"end": 13036,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 12986,
											"end": 13057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 13057,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 12986,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13067,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13135,
											"end": 13137,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13133,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13120,
											"end": 13138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13111,
											"end": 13117,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13067,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 13067,
											"end": 13139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13067,
											"end": 13139,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13067,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 13146,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 13146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 13146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 13146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 13146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 13146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13152,
											"end": 13299,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13152,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13290,
											"end": 13293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13275,
											"end": 13293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13275,
											"end": 13293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13152,
											"end": 13299,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13152,
											"end": 13299,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13152,
											"end": 13299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13152,
											"end": 13299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13152,
											"end": 13299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13419,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 13305,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13305,
											"end": 13419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13823,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 13425,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13584,
											"end": 13587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13605,
											"end": 13688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13686,
											"end": 13687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13681,
											"end": 13684,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13605,
											"end": 13688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 13605,
											"end": 13688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13605,
											"end": 13688,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13605,
											"end": 13688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13598,
											"end": 13688,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13598,
											"end": 13688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 13786,
											"end": 13789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 13697,
											"end": 13790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13815,
											"end": 13816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13810,
											"end": 13813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13806,
											"end": 13817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13829,
											"end": 14208,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 13829,
											"end": 14208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14013,
											"end": 14016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14035,
											"end": 14182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 14178,
											"end": 14181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14035,
											"end": 14182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 14035,
											"end": 14182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14035,
											"end": 14182,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 14035,
											"end": 14182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14199,
											"end": 14202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13829,
											"end": 14208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13829,
											"end": 14208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13829,
											"end": 14208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13829,
											"end": 14208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14214,
											"end": 14381,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 14214,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14354,
											"end": 14373,
											"name": "PUSH",
											"source": 10,
											"value": "5769746864726177616C206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 14350,
											"end": 14351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14342,
											"end": 14348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14338,
											"end": 14352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14214,
											"end": 14381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14214,
											"end": 14381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14529,
											"end": 14532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14614,
											"end": 14616,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 14550,
											"end": 14617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14543,
											"end": 14617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14543,
											"end": 14617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 14715,
											"end": 14718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 14626,
											"end": 14719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 14746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14739,
											"end": 14742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14735,
											"end": 14747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 14929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 14965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14952,
											"end": 14961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14940,
											"end": 14966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14940,
											"end": 14966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15012,
											"end": 15021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15006,
											"end": 15010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15002,
											"end": 15022,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14998,
											"end": 14999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14987,
											"end": 14996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14983,
											"end": 15000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14976,
											"end": 15023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15166,
											"end": 15170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 15040,
											"end": 15171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15032,
											"end": 15171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15032,
											"end": 15171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 15178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15378,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 15184,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15244,
											"end": 15264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15262,
											"end": 15263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 15244,
											"end": 15264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15264,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15244,
											"end": 15264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15296,
											"end": 15297,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 15278,
											"end": 15298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15298,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15278,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15298,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15322,
											"end": 15323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15319,
											"end": 15320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15315,
											"end": 15324,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15307,
											"end": 15324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15307,
											"end": 15324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15340,
											"end": 15344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15348,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15334,
											"end": 15371,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15334,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 15334,
											"end": 15371,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 15351,
											"end": 15369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15334,
											"end": 15371,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 15334,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15378,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15533,
											"end": 15537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15571,
											"end": 15573,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15560,
											"end": 15569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15548,
											"end": 15574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15548,
											"end": 15574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15584,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 15652,
											"end": 15653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15641,
											"end": 15650,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15584,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 15584,
											"end": 15655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15584,
											"end": 15655,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 15584,
											"end": 15655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 15737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 15733,
											"end": 15735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15722,
											"end": 15731,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15718,
											"end": 15736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15709,
											"end": 15715,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 15737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 15665,
											"end": 15737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15665,
											"end": 15737,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 15665,
											"end": 15737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15747,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 15815,
											"end": 15817,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15804,
											"end": 15813,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15791,
											"end": 15797,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15747,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 15747,
											"end": 15819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15747,
											"end": 15819,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 15747,
											"end": 15819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens()": "d0febe4c",
							"checkBalance(address)": "5f515226",
							"decimals()": "313ce567",
							"getContractBalance()": "6f9fb98a",
							"getRemainingSupply()": "e4b7fb73",
							"getTotalSupply()": "c4e41b22",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setTokenPrice(uint256)": "6a61e5fc",
							"symbol()": "95d89b41",
							"tokenPrice()": "7ff9b596",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawETH()": "e086e5ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 \\ud1a0\\ud070 \\uad6c\\ud604, \\ubc1c\\ud589, \\uad6c\\ub9e4, \\uc870\\ud68c \\uae30\\ub2a5 \\ud3ec\\ud568\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"buyTokens()\":{\"details\":\"ETH\\ub97c \\ubcf4\\ub0b4\\uace0 \\ud1a0\\ud070 \\uad6c\\ub9e4\"},\"checkBalance(address)\":{\"details\":\"\\ud2b9\\uc815 \\uc8fc\\uc18c\\uc758 \\ud1a0\\ud070 \\uc794\\uc561 \\uc870\\ud68c\",\"params\":{\"account\":\"\\uc870\\ud68c\\ud560 \\uc8fc\\uc18c\"},\"returns\":{\"_0\":\"\\ud1a0\\ud070 \\uc794\\uc561\"}},\"constructor\":{\"details\":\"\\ucee8\\ud2b8\\ub799\\ud2b8 \\uc0dd\\uc131\\uc790\",\"params\":{\"_initialSupply\":\"\\ucd08\\uae30 \\ubc1c\\ud589\\ub7c9\",\"_maxSupply\":\"\\ucd5c\\ub300 \\ubc1c\\ud589\\ub7c9\",\"_name\":\"\\ud1a0\\ud070 \\uc774\\ub984\",\"_symbol\":\"\\ud1a0\\ud070 \\uc2ec\\ubcfc\",\"_tokenPrice\":\"\\ud1a0\\ud070 \\uac00\\uaca9 (1 ETH\\ub2f9 \\ud1a0\\ud070 \\uc218)\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getContractBalance()\":{\"details\":\"\\ucee8\\ud2b8\\ub799\\ud2b8 \\uc794\\uace0 \\ud655\\uc778 (\\uc18c\\uc720\\uc790\\ub9cc \\uac00\\ub2a5)\"},\"getRemainingSupply()\":{\"details\":\"\\ub0a8\\uc740 \\ubc1c\\ud589 \\uac00\\ub2a5\\ud55c \\ud1a0\\ud070 \\uc591 \\uc870\\ud68c\",\"returns\":{\"_0\":\"\\ub0a8\\uc740 \\ubc1c\\ud589 \\uac00\\ub2a5\\ub7c9\"}},\"getTotalSupply()\":{\"details\":\"\\ubc1c\\ud589\\ub41c \\ucd1d \\ud1a0\\ud070 \\uc591 \\uc870\\ud68c\",\"returns\":{\"_0\":\"\\ucd1d \\uacf5\\uae09\\ub7c9\"}},\"mint(address,uint256)\":{\"details\":\"\\ucd94\\uac00 \\ud1a0\\ud070 \\ubc1c\\ud589 (\\uc18c\\uc720\\uc790\\ub9cc \\uac00\\ub2a5)\",\"params\":{\"amount\":\"\\ubc1c\\ud589\\ud560 \\ud1a0\\ud070 \\uc591\",\"to\":\"\\ud1a0\\ud070\\uc744 \\ubc1b\\uc744 \\uc8fc\\uc18c\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTokenPrice(uint256)\":{\"details\":\"\\ud1a0\\ud070 \\uac00\\uaca9 \\uc5c5\\ub370\\uc774\\ud2b8 (\\uc18c\\uc720\\uc790\\ub9cc \\uac00\\ub2a5)\",\"params\":{\"_newPrice\":\"\\uc0c8 \\ud1a0\\ud070 \\uac00\\uaca9\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETH()\":{\"details\":\"\\ucee8\\ud2b8\\ub799\\ud2b8 ETH \\uc778\\ucd9c (\\uc18c\\uc720\\uc790\\ub9cc \\uac00\\ub2a5)\"}},\"title\":\"MyToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x22ed613aca9f16c6d64501934df67d239def2deb0c4ab8bf43e42f934e05e079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b40cf43ae51bffbf3aa0b4e7495a79896a168e5f0c9ddd584ab5d51ac4801ed1\",\"dweb:/ipfs/QmPVh4VfE1hkrE2RT82WGwT3nrQszuHTYUh1CXXYQfzpoF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 4368,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 4370,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "maxSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:6",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "Panic",
							"nameLocation": "665:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:6",
										"text": "@dev generic / unspecified error"
									},
									"id": 940,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "718:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 938,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 939,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:6",
										"text": "@dev used by the assert() builtin"
									},
									"id": 944,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "806:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 943,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:6",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 948,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "897:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 947,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:6",
										"text": "@dev division or modulo by zero"
									},
									"id": 952,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "990:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 951,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:6",
										"text": "@dev enum conversion error"
									},
									"id": 956,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "1080:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 955,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:6",
										"text": "@dev invalid encoding in storage"
									},
									"id": 960,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "1181:55:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:6",
										"text": "@dev empty array pop"
									},
									"id": 964,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "1271:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 962,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:6",
										"text": "@dev array out of bounds access"
									},
									"id": 968,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "1365:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 966,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 967,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:6",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 972,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "1493:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 970,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 971,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:6",
										"text": "@dev calling invalid internal function"
									},
									"id": 976,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:6",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "1593:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 974,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 975,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "1819:151:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:6",
													"nodeType": "YulBlock",
													"src": "1854:110:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:6",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:6",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:6"
																},
																"nativeSrc": "1868:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:6"
															},
															"nativeSrc": "1868:24:6",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:6",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:6"
																},
																"nativeSrc": "1905:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:6"
															},
															"nativeSrc": "1905:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:6",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:6"
																},
																"nativeSrc": "1936:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:6"
															},
															"nativeSrc": "1936:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:6"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 979,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 982,
												"nodeType": "InlineAssembly",
												"src": "1829:135:6"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:6",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1791:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:6"
									},
									"scope": 985,
									"src": "1776:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 986,
							"src": "657:1315:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2591
						],
						"Panic": [
							985
						],
						"SafeCast": [
							4356
						]
					},
					"id": 2592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2592,
							"sourceUnit": 986,
							"src": "129:35:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "137:5:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2592,
							"sourceUnit": 4357,
							"src": "165:40:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 990,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4356,
										"src": "173:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 992,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2591,
							"linearizedBaseContracts": [
								2591
							],
							"name": "Math",
							"nameLocation": "289:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 997,
									"members": [
										{
											"id": 993,
											"name": "Floor",
											"nameLocation": "324:5:7",
											"nodeType": "EnumValue",
											"src": "324:5:7"
										},
										{
											"id": 994,
											"name": "Ceil",
											"nameLocation": "367:4:7",
											"nodeType": "EnumValue",
											"src": "367:4:7"
										},
										{
											"id": 995,
											"name": "Trunc",
											"nameLocation": "409:5:7",
											"nodeType": "EnumValue",
											"src": "409:5:7"
										},
										{
											"id": 996,
											"name": "Expand",
											"nameLocation": "439:6:7",
											"nodeType": "EnumValue",
											"src": "439:6:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:7",
									"nodeType": "EnumDefinition",
									"src": "300:169:7"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "677:140:7",
										"statements": [
											{
												"id": 1027,
												"nodeType": "UncheckedBlock",
												"src": "687:124:7",
												"statements": [
													{
														"assignments": [
															1010
														],
														"declarations": [
															{
																"constant": false,
																"id": 1010,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1027,
																"src": "711:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1009,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1014,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "723:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1012,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "727:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "746:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1016,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "750:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1022,
														"nodeType": "IfStatement",
														"src": "742:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1020,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1008,
															"id": 1021,
															"nodeType": "Return",
															"src": "753:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1024,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "798:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1025,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1026,
														"nodeType": "Return",
														"src": "784:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:7",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "602:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "613:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:7"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "647:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "661:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:7"
									},
									"scope": 2591,
									"src": "586:231:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1028:113:7",
										"statements": [
											{
												"id": 1055,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "1066:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1042,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "1070:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1048,
														"nodeType": "IfStatement",
														"src": "1062:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1046,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1040,
															"id": 1047,
															"nodeType": "Return",
															"src": "1073:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1050,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "1118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1051,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "1122:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1053,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1040,
														"id": 1054,
														"nodeType": "Return",
														"src": "1104:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "953:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "964:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:7"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "998:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1036,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1012:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:7"
									},
									"scope": 2591,
									"src": "937:204:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "1355:417:7",
										"statements": [
											{
												"id": 1097,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "1623:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1076,
														"nodeType": "IfStatement",
														"src": "1619:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1068,
															"id": 1075,
															"nodeType": "Return",
															"src": "1631:16:7"
														}
													},
													{
														"assignments": [
															1078
														],
														"declarations": [
															{
																"constant": false,
																"id": 1078,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1097,
																"src": "1661:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1077,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1082,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "1673:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1080,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1677:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1083,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "1696:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1084,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "1700:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1086,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1705:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1092,
														"nodeType": "IfStatement",
														"src": "1692:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1068,
															"id": 1091,
															"nodeType": "Return",
															"src": "1708:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1094,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "1753:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1095,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1068,
														"id": 1096,
														"nodeType": "Return",
														"src": "1739:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1280:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1291:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:7"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1325:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1339:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:7"
									},
									"scope": 2591,
									"src": "1264:508:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "1987:114:7",
										"statements": [
											{
												"id": 1125,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1111,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "2025:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1118,
														"nodeType": "IfStatement",
														"src": "2021:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1110,
															"id": 1117,
															"nodeType": "Return",
															"src": "2033:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1120,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "2078:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1121,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "2082:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1123,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1110,
														"id": 1124,
														"nodeType": "Return",
														"src": "2064:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:7",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1912:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1923:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:7"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1957:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1971:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:7"
									},
									"scope": 2591,
									"src": "1896:205:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2326:114:7",
										"statements": [
											{
												"id": 1153,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1139,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "2364:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1146,
														"nodeType": "IfStatement",
														"src": "2360:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1138,
															"id": 1145,
															"nodeType": "Return",
															"src": "2372:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1148,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "2417:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1149,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "2421:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1151,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1138,
														"id": 1152,
														"nodeType": "Return",
														"src": "2403:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2251:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2262:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:7"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2296:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2310:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:7"
									},
									"scope": 2591,
									"src": "2235:205:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "2912:207:7",
										"statements": [
											{
												"id": 1180,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:7",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1167,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "3060:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1168,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1160,
																						"src": "3066:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1169,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1162,
																						"src": "3070:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1174,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "3091:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1172,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4356,
																					"src": "3075:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:7",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4355,
																				"src": "3075:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1166,
														"id": 1179,
														"nodeType": "Return",
														"src": "3053:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:7",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2842:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2858:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2869:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:7"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:7"
									},
									"scope": 2591,
									"src": "2825:294:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "3256:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "3281:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "3285:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1196,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "3288:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1197,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "3291:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3273:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1191,
												"id": 1199,
												"nodeType": "Return",
												"src": "3266:27:7"
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3202:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3213:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3247:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:7"
									},
									"scope": 2591,
									"src": "3189:111:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "3438:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1212,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "3463:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1213,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "3467:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1215,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3470:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1216,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "3473:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "3455:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1218,
												"nodeType": "Return",
												"src": "3448:27:7"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3384:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3395:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3429:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:7"
									},
									"scope": 2591,
									"src": "3371:111:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "3666:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1230,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "3721:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1231,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "3725:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1233,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1234,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "3731:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1235,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "3735:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1237,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1241,
												"nodeType": "Return",
												"src": "3713:28:7"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "3612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "3623:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "3657:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:7"
									},
									"scope": 2591,
									"src": "3595:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "4040:633:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1253,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "4054:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "4050:150:7",
												"trueBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "4062:138:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1259,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "4166:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:7",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "4166:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1256,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "4154:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:7",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 984,
																	"src": "4154:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1262,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:7"
														}
													]
												}
											},
											{
												"id": 1282,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:7",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1267,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "4630:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1265,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "4614:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "4614:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1273,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1271,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1246,
																							"src": "4641:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1272,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1274,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1275,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "4650:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1279,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1252,
														"id": 1281,
														"nodeType": "Return",
														"src": "4607:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3986:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "3997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:7"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "4031:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:7"
									},
									"scope": 2591,
									"src": "3969:704:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "5094:4128:7",
										"statements": [
											{
												"id": 1419,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:7",
												"statements": [
													{
														"assignments": [
															1297
														],
														"declarations": [
															{
																"constant": false,
																"id": 1297,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1419,
																"src": "5433:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1296,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1301,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1298,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "5449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1299,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "5453:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:7"
													},
													{
														"assignments": [
															1303
														],
														"declarations": [
															{
																"constant": false,
																"id": 1303,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1419,
																"src": "5513:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1302,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1304,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:7"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:7",
															"nodeType": "YulBlock",
															"src": "5593:122:7",
															"statements": [
																{
																	"nativeSrc": "5611:30:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:7"
																				},
																				"nativeSrc": "5634:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:7"
																		},
																		"nativeSrc": "5621:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:7",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:7",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:7"
																				},
																				"nativeSrc": "5671:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:7"
																				},
																				"nativeSrc": "5687:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:7"
																		},
																		"nativeSrc": "5667:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1297,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1297,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1303,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1289,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:7",
																"valueSize": 1
															}
														],
														"id": 1305,
														"nodeType": "InlineAssembly",
														"src": "5584:131:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "5796:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1314,
														"nodeType": "IfStatement",
														"src": "5792:368:7",
														"trueBody": {
															"id": 1313,
															"nodeType": "Block",
															"src": "5808:352:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1309,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1297,
																			"src": "6126:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1310,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "6134:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1295,
																	"id": 1312,
																	"nodeType": "Return",
																	"src": "6119:26:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1315,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "6270:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1316,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "6285:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1333,
														"nodeType": "IfStatement",
														"src": "6266:143:7",
														"trueBody": {
															"id": 1332,
															"nodeType": "Block",
															"src": "6292:117:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1322,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1291,
																							"src": "6330:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1323,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1325,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 985,
																							"src": "6348:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1326,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:7",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 952,
																						"src": "6348:22:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1327,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 985,
																							"src": "6372:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1328,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:7",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 948,
																						"src": "6372:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1321,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "6322:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1318,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 985,
																				"src": "6310:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:7",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 984,
																			"src": "6310:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1331,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:7"
																}
															]
														}
													},
													{
														"assignments": [
															1335
														],
														"declarations": [
															{
																"constant": false,
																"id": 1335,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1419,
																"src": "6664:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1334,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1336,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:7"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:7",
															"nodeType": "YulBlock",
															"src": "6704:291:7",
															"statements": [
																{
																	"nativeSrc": "6773:38:7",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:7"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:7"
																		},
																		"nativeSrc": "6786:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:7"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:7",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:7"
																				},
																				"nativeSrc": "6913:20:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:7"
																		},
																		"nativeSrc": "6902:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:7",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:7"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:7"
																		},
																		"nativeSrc": "6960:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1291,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1297,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1297,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1297,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1303,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1303,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1335,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1335,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1335,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1289,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:7",
																"valueSize": 1
															}
														],
														"id": 1337,
														"nodeType": "InlineAssembly",
														"src": "6695:300:7"
													},
													{
														"assignments": [
															1339
														],
														"declarations": [
															{
																"constant": false,
																"id": 1339,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1419,
																"src": "7199:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1338,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1346,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1340,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "7214:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1342,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "7233:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:7"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:7",
															"nodeType": "YulBlock",
															"src": "7268:366:7",
															"statements": [
																{
																	"nativeSrc": "7333:37:7",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:7"
																		},
																		"nativeSrc": "7348:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:7"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:7",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:7"
																		},
																		"nativeSrc": "7446:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:7",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:7",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:7"
																						},
																						"nativeSrc": "7597:12:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:7"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:7"
																				},
																				"nativeSrc": "7593:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:7"
																		},
																		"nativeSrc": "7589:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1291,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1291,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1297,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1297,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:7",
																"valueSize": 1
															}
														],
														"id": 1347,
														"nodeType": "InlineAssembly",
														"src": "7259:375:7"
													},
													{
														"expression": {
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1348,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "7700:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1349,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "7709:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1350,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "7717:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1353,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:7"
													},
													{
														"assignments": [
															1355
														],
														"declarations": [
															{
																"constant": false,
																"id": 1355,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 1419,
																"src": "8056:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1354,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1362,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1357,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "8079:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1359,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:7"
													},
													{
														"expression": {
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1363,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "8312:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1365,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "8327:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1366,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "8341:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1370,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:7"
													},
													{
														"expression": {
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1371,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "8382:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1373,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "8397:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1374,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "8411:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1378,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:7"
													},
													{
														"expression": {
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1379,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "8454:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1381,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "8469:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1382,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "8483:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1386,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:7"
													},
													{
														"expression": {
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1387,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "8525:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1389,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "8540:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1390,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "8554:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1394,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:7"
													},
													{
														"expression": {
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1395,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "8598:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1397,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "8613:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1398,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "8627:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1402,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:7"
													},
													{
														"expression": {
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1403,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "8672:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1405,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "8687:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1406,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "8701:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1410,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:7"
													},
													{
														"expression": {
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1411,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "9154:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1412,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "9163:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1413,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "9171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1416,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:7"
													},
													{
														"expression": {
															"id": 1417,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "9199:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1295,
														"id": 1418,
														"nodeType": "Return",
														"src": "9192:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:7",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5012:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5023:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5034:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "5078:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:7"
									},
									"scope": 2591,
									"src": "4996:4226:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "9461:128:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1437,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "9485:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1438,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "9488:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1439,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "9491:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1436,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1421,
																1458
															],
															"referencedDeclaration": 1421,
															"src": "9478:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1444,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1431,
																			"src": "9539:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$997",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$997",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1443,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "9522:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1447,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "9559:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1448,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "9562:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1449,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "9565:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1446,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1441,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4356,
																"src": "9506:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:7",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4355,
															"src": "9506:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1435,
												"id": 1456,
												"nodeType": "Return",
												"src": "9471:111:7"
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:7",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "9367:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "9378:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "9389:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "9410:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$997",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1429,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 997,
														"src": "9410:8:7"
													},
													"referencedDeclaration": 997,
													"src": "9410:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$997",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:7"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "9452:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:7"
									},
									"scope": 2591,
									"src": "9351:238:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "10223:1849:7",
										"statements": [
											{
												"id": 1553,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1468,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "10261:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1473,
														"nodeType": "IfStatement",
														"src": "10257:20:7",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1467,
															"id": 1472,
															"nodeType": "Return",
															"src": "10269:8:7"
														}
													},
													{
														"assignments": [
															1475
														],
														"declarations": [
															{
																"constant": false,
																"id": 1475,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1553,
																"src": "10748:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1474,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1479,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1476,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "10768:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1477,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "10772:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:7"
													},
													{
														"assignments": [
															1481
														],
														"declarations": [
															{
																"constant": false,
																"id": 1481,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1553,
																"src": "10787:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1480,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1483,
														"initialValue": {
															"id": 1482,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "10801:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:7"
													},
													{
														"assignments": [
															1485
														],
														"declarations": [
															{
																"constant": false,
																"id": 1485,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1553,
																"src": "10938:8:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1484,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1487,
														"initialValue": {
															"hexValue": "30",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:7"
													},
													{
														"assignments": [
															1489
														],
														"declarations": [
															{
																"constant": false,
																"id": 1489,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1553,
																"src": "10964:8:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1488,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1491,
														"initialValue": {
															"hexValue": "31",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:7"
													},
													{
														"body": {
															"id": 1528,
															"nodeType": "Block",
															"src": "11014:882:7",
															"statements": [
																{
																	"assignments": [
																		1496
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1496,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:7",
																			"nodeType": "VariableDeclaration",
																			"scope": 1528,
																			"src": "11032:16:7",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1495,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1500,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1497,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "11051:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1498,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "11057:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:7"
																},
																{
																	"expression": {
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1501,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1481,
																					"src": "11086:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1502,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "11091:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1503,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1504,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "11191:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1509,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1505,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1481,
																						"src": "11436:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1506,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1475,
																							"src": "11442:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1507,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1496,
																							"src": "11454:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1510,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1512,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:7"
																},
																{
																	"expression": {
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1513,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1485,
																					"src": "11500:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1514,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1489,
																					"src": "11503:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1515,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1516,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1489,
																					"src": "11585:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1517,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1485,
																						"src": "11839:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1523,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1518,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1489,
																							"src": "11843:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1521,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1496,
																									"src": "11854:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1520,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1519,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:7",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1522,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1525,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1527,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:7"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1492,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "10998:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1529,
														"nodeType": "WhileStatement",
														"src": "10991:905:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1530,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "11914:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1535,
														"nodeType": "IfStatement",
														"src": "11910:22:7",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1467,
															"id": 1534,
															"nodeType": "Return",
															"src": "11924:8:7"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1537,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "11983:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1540,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "11990:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:7",
																				"subExpression": {
																					"id": 1543,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1485,
																					"src": "12003:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1541,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1549,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "12015:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1547,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1536,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "11975:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1467,
														"id": 1552,
														"nodeType": "Return",
														"src": "11968:50:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:7",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "10169:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "10180:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:7"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "10214:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:7"
									},
									"scope": 2591,
									"src": "10153:1919:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "12672:82:7",
										"statements": [
											{
												"id": 1574,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1567,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "12725:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1568,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "12728:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1571,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "12735:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1565,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2591,
																	"src": "12713:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2591_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:7",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1612,
																"src": "12713:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1564,
														"id": 1573,
														"nodeType": "Return",
														"src": "12706:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:7",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "12618:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "12629:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:7"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "12663:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:7"
									},
									"scope": 2591,
									"src": "12597:157:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "13524:174:7",
										"statements": [
											{
												"assignments": [
													1589,
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1589,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "13535:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1588,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "13549:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1590,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"arguments": [
														{
															"id": 1593,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "13577:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1594,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "13580:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1595,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "13583:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1592,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1636,
															1718
														],
														"referencedDeclaration": 1636,
														"src": "13567:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:7"
											},
											{
												"condition": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:7",
													"subExpression": {
														"id": 1598,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "13600:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "13595:74:7",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "13609:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1603,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "13635:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:7",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "13635:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1600,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "13623:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:7",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 984,
																	"src": "13623:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1606,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1609,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1591,
													"src": "13685:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1610,
												"nodeType": "Return",
												"src": "13678:13:7"
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:7",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "13459:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "13470:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "13481:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "13515:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:7"
									},
									"scope": 2591,
									"src": "13443:255:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "14552:1493:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "14566:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1633,
												"nodeType": "IfStatement",
												"src": "14562:29:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1631,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1625,
													"id": 1632,
													"nodeType": "Return",
													"src": "14574:17:7"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:7",
													"nodeType": "YulBlock",
													"src": "14626:1413:7",
													"statements": [
														{
															"nativeSrc": "14640:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:7"
																},
																"nativeSrc": "14651:11:7",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:7"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:7",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:7"
																},
																"nativeSrc": "15563:17:7",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:7"
															},
															"nativeSrc": "15563:17:7",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:7",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:7"
																		},
																		"nativeSrc": "15600:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:7"
																},
																"nativeSrc": "15593:28:7",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:7"
															},
															"nativeSrc": "15593:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:7",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:7",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:7"
																		},
																		"nativeSrc": "15641:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:7"
																},
																"nativeSrc": "15634:28:7",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:7"
															},
															"nativeSrc": "15634:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:7",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:7",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:7"
																		},
																		"nativeSrc": "15682:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:7"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:7"
																},
																"nativeSrc": "15675:25:7",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:7"
															},
															"nativeSrc": "15675:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:7",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:7",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:7"
																		},
																		"nativeSrc": "15720:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:7"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:7"
																},
																"nativeSrc": "15713:25:7",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:7"
															},
															"nativeSrc": "15713:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:7",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:7",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:7"
																		},
																		"nativeSrc": "15758:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:7"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:7"
																},
																"nativeSrc": "15751:25:7",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:7"
															},
															"nativeSrc": "15751:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:7"
														},
														{
															"nativeSrc": "15938:57:7",
															"nodeType": "YulAssignment",
															"src": "15938:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:7"
																		},
																		"nativeSrc": "15960:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:7",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:7",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:7"
																},
																"nativeSrc": "15949:46:7",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:7"
																}
															]
														},
														{
															"nativeSrc": "16008:21:7",
															"nodeType": "YulAssignment",
															"src": "16008:21:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:7",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:7"
																},
																"nativeSrc": "16018:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1617,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1619,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:7",
														"valueSize": 1
													},
													{
														"declaration": 1624,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1622,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1634,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:7"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:7",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "14466:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "14477:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "14488:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:7"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "14522:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "14536:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:7"
									},
									"scope": 2591,
									"src": "14447:1598:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "16242:179:7",
										"statements": [
											{
												"assignments": [
													1649,
													1651
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "16253:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1648,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1651,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "16267:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1650,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1657,
												"initialValue": {
													"arguments": [
														{
															"id": 1653,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "16300:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1654,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "16303:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1655,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "16306:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1652,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1636,
															1718
														],
														"referencedDeclaration": 1718,
														"src": "16290:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:7"
											},
											{
												"condition": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:7",
													"subExpression": {
														"id": 1658,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "16323:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1668,
												"nodeType": "IfStatement",
												"src": "16318:74:7",
												"trueBody": {
													"id": 1667,
													"nodeType": "Block",
													"src": "16332:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1663,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "16358:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:7",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "16358:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1660,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "16346:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$985_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:7",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 984,
																	"src": "16346:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1666,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1669,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1651,
													"src": "16408:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1647,
												"id": 1670,
												"nodeType": "Return",
												"src": "16401:13:7"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:7",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "16157:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "16173:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "16189:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:7"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "16228:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:7"
									},
									"scope": 2591,
									"src": "16141:280:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "16675:771:7",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1687,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "16700:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1686,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "16689:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1696,
												"nodeType": "IfStatement",
												"src": "16685:47:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1690,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1694,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1685,
													"id": 1695,
													"nodeType": "Return",
													"src": "16704:28:7"
												}
											},
											{
												"assignments": [
													1698
												],
												"declarations": [
													{
														"constant": false,
														"id": 1698,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1717,
														"src": "16743:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1697,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"expression": {
														"id": 1699,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "16758:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:7"
											},
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1702,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "16848:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1705,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "16874:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1707,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1677,
																	"src": "16884:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1709,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "16894:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1710,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "16900:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1711,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "16903:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1712,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "16906:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1703,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:7",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:7"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:7",
													"nodeType": "YulBlock",
													"src": "16944:496:7",
													"statements": [
														{
															"nativeSrc": "16958:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:7"
																},
																"nativeSrc": "16973:17:7",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:7"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:7",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:7",
															"nodeType": "YulAssignment",
															"src": "17080:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:7"
																		},
																		"nativeSrc": "17102:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:7",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:7"
																		},
																		"nativeSrc": "17124:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:7"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:7"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:7"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:7"
																},
																"nativeSrc": "17091:62:7",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:7"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:7"
																},
																"nativeSrc": "17302:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:7"
															},
															"nativeSrc": "17302:20:7",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:7",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:7"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:7"
																		},
																		"nativeSrc": "17411:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:7"
																},
																"nativeSrc": "17398:32:7",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:7"
															},
															"nativeSrc": "17398:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:7"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1682,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1716,
												"nodeType": "InlineAssembly",
												"src": "16919:521:7"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:7",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16548:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16572:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16596:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:7"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16640:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "16654:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:7"
									},
									"scope": 2591,
									"src": "16520:926:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "17601:176:7",
										"statements": [
											{
												"body": {
													"id": 1746,
													"nodeType": "Block",
													"src": "17658:92:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1737,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "17676:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1739,
																	"indexExpression": {
																		"id": 1738,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "17686:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1745,
															"nodeType": "IfStatement",
															"src": "17672:68:7",
															"trueBody": {
																"id": 1744,
																"nodeType": "Block",
																"src": "17695:45:7",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1725,
																		"id": 1743,
																		"nodeType": "Return",
																		"src": "17713:12:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1730,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "17631:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1731,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "17635:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1747,
												"initializationExpression": {
													"assignments": [
														1727
													],
													"declarations": [
														{
															"constant": false,
															"id": 1727,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1747,
															"src": "17616:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1726,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1729,
													"initialValue": {
														"hexValue": "30",
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:7",
														"subExpression": {
															"id": 1734,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "17655:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1736,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:7"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1725,
												"id": 1749,
												"nodeType": "Return",
												"src": "17759:11:7"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:7",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "17549:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:7"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "17595:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:7"
									},
									"scope": 2591,
									"src": "17529:248:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "18137:5124:7",
										"statements": [
											{
												"id": 1968,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1759,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "18241:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1765,
														"nodeType": "IfStatement",
														"src": "18237:53:7",
														"trueBody": {
															"id": 1764,
															"nodeType": "Block",
															"src": "18249:41:7",
															"statements": [
																{
																	"expression": {
																		"id": 1762,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "18274:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1758,
																	"id": 1763,
																	"nodeType": "Return",
																	"src": "18267:8:7"
																}
															]
														}
													},
													{
														"assignments": [
															1767
														],
														"declarations": [
															{
																"constant": false,
																"id": 1767,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:7",
																"nodeType": "VariableDeclaration",
																"scope": 1968,
																"src": "19217:10:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1769,
														"initialValue": {
															"id": 1768,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "19230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:7"
													},
													{
														"assignments": [
															1771
														],
														"declarations": [
															{
																"constant": false,
																"id": 1771,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:7",
																"nodeType": "VariableDeclaration",
																"scope": 1968,
																"src": "19245:10:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1770,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1773,
														"initialValue": {
															"hexValue": "31",
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1774,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "19278:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 1778,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "19274:92:7",
														"trueBody": {
															"id": 1788,
															"nodeType": "Block",
															"src": "19296:70:7",
															"statements": [
																{
																	"expression": {
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1780,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "19314:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1783,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:7"
																},
																{
																	"expression": {
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1784,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "19342:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1787,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1790,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "19383:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 1794,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1805,
														"nodeType": "IfStatement",
														"src": "19379:90:7",
														"trueBody": {
															"id": 1804,
															"nodeType": "Block",
															"src": "19400:69:7",
															"statements": [
																{
																	"expression": {
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1796,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "19418:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1799,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:7"
																},
																{
																	"expression": {
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1800,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "19445:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1803,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1806,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "19486:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 1810,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1821,
														"nodeType": "IfStatement",
														"src": "19482:90:7",
														"trueBody": {
															"id": 1820,
															"nodeType": "Block",
															"src": "19503:69:7",
															"statements": [
																{
																	"expression": {
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1812,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "19521:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1815,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:7"
																},
																{
																	"expression": {
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1816,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "19548:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1819,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "19589:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 1824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 1826,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1837,
														"nodeType": "IfStatement",
														"src": "19585:89:7",
														"trueBody": {
															"id": 1836,
															"nodeType": "Block",
															"src": "19606:68:7",
															"statements": [
																{
																	"expression": {
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1828,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "19624:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1831,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:7"
																},
																{
																	"expression": {
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1832,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "19651:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1835,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1838,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "19691:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 1842,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1853,
														"nodeType": "IfStatement",
														"src": "19687:87:7",
														"trueBody": {
															"id": 1852,
															"nodeType": "Block",
															"src": "19707:67:7",
															"statements": [
																{
																	"expression": {
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1844,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "19725:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1847,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:7"
																},
																{
																	"expression": {
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1848,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "19751:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1851,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1854,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "19791:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 1858,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1869,
														"nodeType": "IfStatement",
														"src": "19787:87:7",
														"trueBody": {
															"id": 1868,
															"nodeType": "Block",
															"src": "19807:67:7",
															"statements": [
																{
																	"expression": {
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1860,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "19825:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1863,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:7"
																},
																{
																	"expression": {
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1864,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "19851:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1867,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "19891:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 1874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1881,
														"nodeType": "IfStatement",
														"src": "19887:61:7",
														"trueBody": {
															"id": 1880,
															"nodeType": "Block",
															"src": "19907:41:7",
															"statements": [
																{
																	"expression": {
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1876,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "19925:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1879,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:7"
																}
															]
														}
													},
													{
														"expression": {
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1882,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "20368:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 1883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1884,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "20378:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1886,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1890,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:7"
													},
													{
														"expression": {
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1891,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "22273:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1892,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "22279:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1893,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1754,
																					"src": "22284:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1894,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1771,
																					"src": "22288:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1897,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1901,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:7"
													},
													{
														"expression": {
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1902,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "22382:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1903,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "22388:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1904,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1754,
																					"src": "22393:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1905,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1771,
																					"src": "22397:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1908,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1912,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:7"
													},
													{
														"expression": {
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1913,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "22493:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1914,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "22499:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1915,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1754,
																					"src": "22504:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1916,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1771,
																					"src": "22508:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1919,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1923,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:7"
													},
													{
														"expression": {
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1924,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "22602:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1925,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "22608:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1926,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1754,
																					"src": "22613:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1927,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1771,
																					"src": "22617:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1930,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1934,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:7"
													},
													{
														"expression": {
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1935,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "22712:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1936,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "22718:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1937,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1754,
																					"src": "22723:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1938,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1771,
																					"src": "22727:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1941,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1945,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:7"
													},
													{
														"expression": {
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1946,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "22822:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1947,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "22828:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1948,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1754,
																					"src": "22833:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1949,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1771,
																					"src": "22837:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1952,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1956,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1957,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "23211:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1960,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "23232:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1961,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1754,
																				"src": "23237:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1962,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "23241:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1958,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "23216:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "23216:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1758,
														"id": 1967,
														"nodeType": "Return",
														"src": "23204:40:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "18094:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:7"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "18128:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:7"
									},
									"scope": 2591,
									"src": "18080:5181:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "23434:171:7",
										"statements": [
											{
												"id": 2002,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:7",
												"statements": [
													{
														"assignments": [
															1982
														],
														"declarations": [
															{
																"constant": false,
																"id": 1982,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2002,
																"src": "23468:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1981,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1986,
														"initialValue": {
															"arguments": [
																{
																	"id": 1984,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "23490:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1983,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1970,
																	2004
																],
																"referencedDeclaration": 1970,
																"src": "23485:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1987,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "23513:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1991,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1976,
																					"src": "23555:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1990,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2590,
																				"src": "23538:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1993,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1982,
																					"src": "23568:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1994,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1982,
																					"src": "23577:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1996,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1973,
																				"src": "23586:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1988,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "23522:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "23522:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1980,
														"id": 2001,
														"nodeType": "Return",
														"src": "23506:82:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:7",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "23372:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "23383:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$997",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1974,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 997,
														"src": "23383:8:7"
													},
													"referencedDeclaration": 997,
													"src": "23383:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$997",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:7"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "23425:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:7"
									},
									"scope": 2591,
									"src": "23358:247:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "23796:981:7",
										"statements": [
											{
												"assignments": [
													2013
												],
												"declarations": [
													{
														"constant": false,
														"id": 2013,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "23806:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2012,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2015,
												"initialValue": {
													"hexValue": "30",
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:7"
											},
											{
												"assignments": [
													2017
												],
												"declarations": [
													{
														"constant": false,
														"id": 2017,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "23834:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2018,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:7"
											},
											{
												"id": 2196,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:7",
												"statements": [
													{
														"expression": {
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2019,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "23879:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2023,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "23907:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 2029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 2026,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2024,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 2025,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 2027,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2028,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2021,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4356,
																			"src": "23891:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "23891:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2034,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:7"
													},
													{
														"expression": {
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2035,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "23944:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2036,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "23954:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2038,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:7"
													},
													{
														"expression": {
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "23971:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2040,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "23981:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2042,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:7"
													},
													{
														"expression": {
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2043,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "23999:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2047,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "24026:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 2050,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2048,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 2049,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 2051,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2045,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4356,
																			"src": "24010:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "24010:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2058,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:7"
													},
													{
														"expression": {
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2059,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "24062:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2060,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24072:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2062,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:7"
													},
													{
														"expression": {
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2063,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "24089:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2064,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24099:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2066,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:7"
													},
													{
														"expression": {
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2067,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24117:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2071,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "24144:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 2077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 2074,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2072,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 2073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 2075,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2076,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2069,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4356,
																			"src": "24128:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "24128:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2082,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:7"
													},
													{
														"expression": {
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2083,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "24180:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2084,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24190:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2086,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:7"
													},
													{
														"expression": {
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2087,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "24207:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2088,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24217:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2090,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:7"
													},
													{
														"expression": {
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2091,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24235:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2095,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "24262:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 2098,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2096,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 2097,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 2099,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2093,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4356,
																			"src": "24246:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "24246:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2106,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:7"
													},
													{
														"expression": {
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2107,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "24298:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2108,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24308:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2110,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:7"
													},
													{
														"expression": {
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2111,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "24325:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2112,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24335:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2114,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:7"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2115,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24353:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2119,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "24379:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 2125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 2122,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2120,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 2121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 2123,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2117,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4356,
																			"src": "24363:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "24363:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:7"
													},
													{
														"expression": {
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "24414:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2132,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24424:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2134,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:7"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2135,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "24441:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2136,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24451:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:7"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24469:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2143,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "24495:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 2149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 2146,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2144,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 2145,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 2147,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2148,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2141,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4356,
																			"src": "24479:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "24479:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:7"
													},
													{
														"expression": {
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "24530:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2156,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24540:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2158,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:7"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2159,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "24557:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2160,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24567:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:7"
													},
													{
														"expression": {
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2163,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24585:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2167,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "24611:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 2170,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 2169,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 2171,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2165,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4356,
																			"src": "24595:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:7",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "24595:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2178,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:7"
													},
													{
														"expression": {
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2179,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "24646:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2180,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24656:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2182,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:7"
													},
													{
														"expression": {
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2183,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "24673:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2184,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "24683:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2186,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:7"
													},
													{
														"expression": {
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2187,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "24701:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2007,
																			"src": "24727:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2188,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "24711:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "24711:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2195,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:7"
													}
												]
											},
											{
												"expression": {
													"id": 2197,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2013,
													"src": "24764:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2198,
												"nodeType": "Return",
												"src": "24757:13:7"
											}
										]
									},
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:7",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "23749:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:7"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "23787:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:7"
									},
									"scope": 2591,
									"src": "23735:1042:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "25010:175:7",
										"statements": [
											{
												"id": 2232,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:7",
												"statements": [
													{
														"assignments": [
															2212
														],
														"declarations": [
															{
																"constant": false,
																"id": 2212,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2232,
																"src": "25044:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2211,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2216,
														"initialValue": {
															"arguments": [
																{
																	"id": 2214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "25066:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2213,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2200,
																	2234
																],
																"referencedDeclaration": 2200,
																"src": "25061:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2217,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "25093:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2221,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2206,
																					"src": "25135:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2220,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2590,
																				"src": "25118:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2223,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2224,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2212,
																					"src": "25153:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2226,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2203,
																				"src": "25162:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2218,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "25102:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "25102:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2210,
														"id": 2231,
														"nodeType": "Return",
														"src": "25086:82:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "24944:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "24959:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$997",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2204,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 997,
														"src": "24959:8:7"
													},
													"referencedDeclaration": 997,
													"src": "24959:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$997",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:7"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "25001:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:7"
									},
									"scope": 2591,
									"src": "24930:255:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2362,
										"nodeType": "Block",
										"src": "25378:854:7",
										"statements": [
											{
												"assignments": [
													2243
												],
												"declarations": [
													{
														"constant": false,
														"id": 2243,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2362,
														"src": "25388:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2242,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2245,
												"initialValue": {
													"hexValue": "30",
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:7"
											},
											{
												"id": 2359,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "25444:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2262,
														"nodeType": "IfStatement",
														"src": "25440:103:7",
														"trueBody": {
															"id": 2261,
															"nodeType": "Block",
															"src": "25463:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2251,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "25481:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2256,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:7"
																},
																{
																	"expression": {
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "25516:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2260,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2263,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "25560:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2279,
														"nodeType": "IfStatement",
														"src": "25556:103:7",
														"trueBody": {
															"id": 2278,
															"nodeType": "Block",
															"src": "25579:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2268,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "25597:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2273,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:7"
																},
																{
																	"expression": {
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2274,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "25632:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2277,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2280,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "25676:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2296,
														"nodeType": "IfStatement",
														"src": "25672:103:7",
														"trueBody": {
															"id": 2295,
															"nodeType": "Block",
															"src": "25695:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2285,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "25713:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2290,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:7"
																},
																{
																	"expression": {
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2291,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "25748:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2294,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2297,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "25792:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2313,
														"nodeType": "IfStatement",
														"src": "25788:100:7",
														"trueBody": {
															"id": 2312,
															"nodeType": "Block",
															"src": "25810:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2302,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "25828:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2307,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:7"
																},
																{
																	"expression": {
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2308,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "25862:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2311,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2314,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "25905:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2330,
														"nodeType": "IfStatement",
														"src": "25901:100:7",
														"trueBody": {
															"id": 2329,
															"nodeType": "Block",
															"src": "25923:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2319,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "25941:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2324,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:7"
																},
																{
																	"expression": {
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2325,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "25975:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2328,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2331,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "26018:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2347,
														"nodeType": "IfStatement",
														"src": "26014:100:7",
														"trueBody": {
															"id": 2346,
															"nodeType": "Block",
															"src": "26036:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2336,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "26054:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2341,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:7"
																},
																{
																	"expression": {
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2342,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "26088:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2345,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2348,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "26131:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2358,
														"nodeType": "IfStatement",
														"src": "26127:66:7",
														"trueBody": {
															"id": 2357,
															"nodeType": "Block",
															"src": "26149:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "26167:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2356,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2360,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2243,
													"src": "26219:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2361,
												"nodeType": "Return",
												"src": "26212:13:7"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:7",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "25331:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:7"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "25369:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:7"
									},
									"scope": 2591,
									"src": "25316:916:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "26467:177:7",
										"statements": [
											{
												"id": 2395,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:7",
												"statements": [
													{
														"assignments": [
															2375
														],
														"declarations": [
															{
																"constant": false,
																"id": 2375,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "26501:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2379,
														"initialValue": {
															"arguments": [
																{
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2366,
																	"src": "26524:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2376,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2363,
																	2397
																],
																"referencedDeclaration": 2363,
																"src": "26518:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "26551:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2384,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "26593:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2383,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2590,
																				"src": "26576:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2387,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2375,
																					"src": "26612:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2389,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2366,
																				"src": "26621:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2381,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "26560:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "26560:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2373,
														"id": 2394,
														"nodeType": "Return",
														"src": "26544:83:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "26401:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "26416:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$997",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2367,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 997,
														"src": "26416:8:7"
													},
													"referencedDeclaration": 997,
													"src": "26416:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$997",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:7"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "26458:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:7"
									},
									"scope": 2591,
									"src": "26386:258:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2533,
										"nodeType": "Block",
										"src": "26964:674:7",
										"statements": [
											{
												"assignments": [
													2406
												],
												"declarations": [
													{
														"constant": false,
														"id": 2406,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2533,
														"src": "26974:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2408,
												"initialValue": {
													"hexValue": "30",
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:7"
											},
											{
												"assignments": [
													2410
												],
												"declarations": [
													{
														"constant": false,
														"id": 2410,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2533,
														"src": "27002:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2411,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:7"
											},
											{
												"id": 2530,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:7",
												"statements": [
													{
														"expression": {
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2412,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "27048:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2415,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "27071:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 2418,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2416,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 2417,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 2419,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2413,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "27055:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "27055:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2425,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:7"
													},
													{
														"expression": {
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2426,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "27108:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2427,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27118:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2431,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:7"
													},
													{
														"expression": {
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2432,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "27142:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2433,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27152:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2437,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:7"
													},
													{
														"expression": {
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2438,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "27176:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2441,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "27199:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 2444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2442,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 2443,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 2445,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2439,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "27183:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "27183:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2451,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:7"
													},
													{
														"expression": {
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2452,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "27235:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2453,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27245:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2457,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:7"
													},
													{
														"expression": {
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "27268:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2459,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27278:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2463,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:7"
													},
													{
														"expression": {
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2464,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "27301:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2467,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "27324:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 2470,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2468,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 2469,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 2471,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2465,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "27308:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "27308:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2477,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:7"
													},
													{
														"expression": {
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "27360:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2479,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27370:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2483,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:7"
													},
													{
														"expression": {
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2484,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "27393:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2485,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27403:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2489,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:7"
													},
													{
														"expression": {
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2490,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "27426:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "27449:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 2499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 2496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2494,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 2495,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 2497,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2491,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "27433:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "27433:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2503,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:7"
													},
													{
														"expression": {
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2504,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "27485:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2505,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27495:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2509,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:7"
													},
													{
														"expression": {
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2510,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "27518:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2511,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2410,
																	"src": "27528:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2515,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:7"
													},
													{
														"expression": {
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2516,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "27551:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2519,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "27577:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 2522,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2520,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 2521,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 2523,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2517,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "27561:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "27561:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2529,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:7"
													}
												]
											},
											{
												"expression": {
													"id": 2531,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2406,
													"src": "27625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2404,
												"id": 2532,
												"nodeType": "Return",
												"src": "27618:13:7"
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:7",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "26917:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:7"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "26955:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:7"
									},
									"scope": 2591,
									"src": "26901:737:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2570,
										"nodeType": "Block",
										"src": "27875:184:7",
										"statements": [
											{
												"id": 2569,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:7",
												"statements": [
													{
														"assignments": [
															2546
														],
														"declarations": [
															{
																"constant": false,
																"id": 2546,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2569,
																"src": "27909:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2545,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2550,
														"initialValue": {
															"arguments": [
																{
																	"id": 2548,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "27933:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2547,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2534,
																	2571
																],
																"referencedDeclaration": 2534,
																"src": "27926:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2551,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2546,
																"src": "27960:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2555,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "28002:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$997",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2554,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2590,
																				"src": "27985:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2557,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2560,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2558,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2546,
																								"src": "28021:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2559,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2561,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2563,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "28036:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2552,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4356,
																		"src": "27969:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4356_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:7",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "27969:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2544,
														"id": 2568,
														"nodeType": "Return",
														"src": "27953:89:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2535,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "27809:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "27824:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$997",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2538,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 997,
														"src": "27824:8:7"
													},
													"referencedDeclaration": 997,
													"src": "27824:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$997",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:7"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "27866:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:7"
									},
									"scope": 2591,
									"src": "27793:266:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2589,
										"nodeType": "Block",
										"src": "28257:48:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2582,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "28280:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$997",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$997",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2580,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2579,
												"id": 2588,
												"nodeType": "Return",
												"src": "28267:31:7"
											}
										]
									},
									"documentation": {
										"id": 2572,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:7",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "28209:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$997",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2573,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 997,
														"src": "28209:8:7"
													},
													"referencedDeclaration": 997,
													"src": "28209:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$997",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:7"
									},
									"returnParameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "28251:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:7"
									},
									"scope": 2591,
									"src": "28183:122:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2592,
							"src": "281:28026:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4356
						]
					},
					"id": 4357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2594,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:8",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4356,
							"linearizedBaseContracts": [
								4356
							],
							"name": "SafeCast",
							"nameLocation": "777:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2595,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:8",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2601,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "902:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2596,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "914:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:8"
									},
									"src": "865:64:8"
								},
								{
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:8",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2606,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "1049:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2603,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:8"
									},
									"src": "1015:48:8"
								},
								{
									"documentation": {
										"id": 2607,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:8",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2613,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "1177:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2608,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "1189:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2610,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:8"
									},
									"src": "1141:62:8"
								},
								{
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:8",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2618,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "1323:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:8"
									},
									"src": "1289:49:8"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "1695:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2626,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2621,
														"src": "1709:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2628,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2627,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2639,
												"nodeType": "IfStatement",
												"src": "1705:105:8",
												"trueBody": {
													"id": 2638,
													"nodeType": "Block",
													"src": "1736:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2635,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1793:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2633,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "1757:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2637,
															"nodeType": "RevertStatement",
															"src": "1750:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2642,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "1834:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2640,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2625,
												"id": 2644,
												"nodeType": "Return",
												"src": "1819:21:8"
											}
										]
									},
									"documentation": {
										"id": 2619,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:8",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "1648:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:8"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "1686:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2623,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:8"
									},
									"scope": 4356,
									"src": "1629:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "2204:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2654,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "2218:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2656,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2655,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2667,
												"nodeType": "IfStatement",
												"src": "2214:105:8",
												"trueBody": {
													"id": 2666,
													"nodeType": "Block",
													"src": "2245:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2663,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2649,
																		"src": "2302:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2661,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "2266:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2665,
															"nodeType": "RevertStatement",
															"src": "2259:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "2343:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2668,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2653,
												"id": 2672,
												"nodeType": "Return",
												"src": "2328:21:8"
											}
										]
									},
									"documentation": {
										"id": 2647,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:8",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "2157:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:8"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "2195:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2651,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:8"
									},
									"scope": 4356,
									"src": "2138:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2701,
										"nodeType": "Block",
										"src": "2713:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2682,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "2727:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2684,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2683,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2695,
												"nodeType": "IfStatement",
												"src": "2723:105:8",
												"trueBody": {
													"id": 2694,
													"nodeType": "Block",
													"src": "2754:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2691,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2677,
																		"src": "2811:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2689,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "2775:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2693,
															"nodeType": "RevertStatement",
															"src": "2768:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "2852:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2696,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2681,
												"id": 2700,
												"nodeType": "Return",
												"src": "2837:21:8"
											}
										]
									},
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:8",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "2666:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:8"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "2704:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2679,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:8"
									},
									"scope": 4356,
									"src": "2647:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "3222:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2710,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "3236:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2712,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2711,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2723,
												"nodeType": "IfStatement",
												"src": "3232:105:8",
												"trueBody": {
													"id": 2722,
													"nodeType": "Block",
													"src": "3263:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2719,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2705,
																		"src": "3320:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2717,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "3284:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2721,
															"nodeType": "RevertStatement",
															"src": "3277:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2726,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3361:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2724,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2709,
												"id": 2728,
												"nodeType": "Return",
												"src": "3346:21:8"
											}
										]
									},
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:8",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3175:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:8"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3213:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2707,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:8"
									},
									"scope": 4356,
									"src": "3156:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2757,
										"nodeType": "Block",
										"src": "3731:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2738,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "3745:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2740,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2739,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2751,
												"nodeType": "IfStatement",
												"src": "3741:105:8",
												"trueBody": {
													"id": 2750,
													"nodeType": "Block",
													"src": "3772:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2747,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2733,
																		"src": "3829:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2745,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "3793:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2749,
															"nodeType": "RevertStatement",
															"src": "3786:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2754,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2733,
															"src": "3870:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2752,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2737,
												"id": 2756,
												"nodeType": "Return",
												"src": "3855:21:8"
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:8",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "3684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:8"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "3722:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2735,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:8"
									},
									"scope": 4356,
									"src": "3665:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2785,
										"nodeType": "Block",
										"src": "4240:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2766,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2761,
														"src": "4254:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2768,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2767,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2779,
												"nodeType": "IfStatement",
												"src": "4250:105:8",
												"trueBody": {
													"id": 2778,
													"nodeType": "Block",
													"src": "4281:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2775,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2761,
																		"src": "4338:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2773,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "4302:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2777,
															"nodeType": "RevertStatement",
															"src": "4295:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "4379:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2780,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2765,
												"id": 2784,
												"nodeType": "Return",
												"src": "4364:21:8"
											}
										]
									},
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:8",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "4193:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:8"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "4231:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2763,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:8"
									},
									"scope": 4356,
									"src": "4174:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "4749:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2794,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "4763:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2796,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2795,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2807,
												"nodeType": "IfStatement",
												"src": "4759:105:8",
												"trueBody": {
													"id": 2806,
													"nodeType": "Block",
													"src": "4790:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2803,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "4847:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2801,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "4811:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2805,
															"nodeType": "RevertStatement",
															"src": "4804:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2810,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "4888:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2808,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2793,
												"id": 2812,
												"nodeType": "Return",
												"src": "4873:21:8"
											}
										]
									},
									"documentation": {
										"id": 2787,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:8",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "4702:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:8"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "4740:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2791,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:8"
									},
									"scope": 4356,
									"src": "4683:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "5258:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "5272:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2824,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2823,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2835,
												"nodeType": "IfStatement",
												"src": "5268:105:8",
												"trueBody": {
													"id": 2834,
													"nodeType": "Block",
													"src": "5299:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2831,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2817,
																		"src": "5356:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2829,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "5320:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2833,
															"nodeType": "RevertStatement",
															"src": "5313:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2838,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "5397:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2836,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2821,
												"id": 2840,
												"nodeType": "Return",
												"src": "5382:21:8"
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:8",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "5211:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:8"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "5249:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2819,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:8"
									},
									"scope": 4356,
									"src": "5192:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "5767:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2850,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "5781:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2852,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2851,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2863,
												"nodeType": "IfStatement",
												"src": "5777:105:8",
												"trueBody": {
													"id": 2862,
													"nodeType": "Block",
													"src": "5808:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2859,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2845,
																		"src": "5865:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2857,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "5829:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2861,
															"nodeType": "RevertStatement",
															"src": "5822:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "5906:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2864,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2849,
												"id": 2868,
												"nodeType": "Return",
												"src": "5891:21:8"
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:8",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "5720:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:8"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "5758:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2847,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:8"
									},
									"scope": 4356,
									"src": "5701:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "6276:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2878,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2873,
														"src": "6290:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2880,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2879,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2891,
												"nodeType": "IfStatement",
												"src": "6286:105:8",
												"trueBody": {
													"id": 2890,
													"nodeType": "Block",
													"src": "6317:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2887,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2873,
																		"src": "6374:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2885,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "6338:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2889,
															"nodeType": "RevertStatement",
															"src": "6331:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2894,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "6415:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2892,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2877,
												"id": 2896,
												"nodeType": "Return",
												"src": "6400:21:8"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:8",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "6229:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:8"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "6267:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2875,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:8"
									},
									"scope": 4356,
									"src": "6210:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2925,
										"nodeType": "Block",
										"src": "6785:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2906,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "6799:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2908,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2907,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2919,
												"nodeType": "IfStatement",
												"src": "6795:105:8",
												"trueBody": {
													"id": 2918,
													"nodeType": "Block",
													"src": "6826:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2915,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "6883:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2913,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "6847:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2917,
															"nodeType": "RevertStatement",
															"src": "6840:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2922,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "6924:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2920,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2905,
												"id": 2924,
												"nodeType": "Return",
												"src": "6909:21:8"
											}
										]
									},
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:8",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "6738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:8"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "6776:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2903,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:8"
									},
									"scope": 4356,
									"src": "6719:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "7294:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2934,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "7308:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2936,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2935,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "7304:105:8",
												"trueBody": {
													"id": 2946,
													"nodeType": "Block",
													"src": "7335:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2943,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "7392:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2941,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "7356:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2945,
															"nodeType": "RevertStatement",
															"src": "7349:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "7433:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2948,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2933,
												"id": 2952,
												"nodeType": "Return",
												"src": "7418:21:8"
											}
										]
									},
									"documentation": {
										"id": 2927,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:8",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "7247:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:8"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "7285:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2931,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:8"
									},
									"scope": 4356,
									"src": "7228:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "7803:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2962,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "7817:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2964,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2963,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2975,
												"nodeType": "IfStatement",
												"src": "7813:105:8",
												"trueBody": {
													"id": 2974,
													"nodeType": "Block",
													"src": "7844:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2971,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2957,
																		"src": "7901:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2969,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "7865:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2973,
															"nodeType": "RevertStatement",
															"src": "7858:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "7942:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2976,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2961,
												"id": 2980,
												"nodeType": "Return",
												"src": "7927:21:8"
											}
										]
									},
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:8",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "7756:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:8"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "7794:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2959,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:8"
									},
									"scope": 4356,
									"src": "7737:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "8312:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2990,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "8326:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2992,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2991,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3003,
												"nodeType": "IfStatement",
												"src": "8322:105:8",
												"trueBody": {
													"id": 3002,
													"nodeType": "Block",
													"src": "8353:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2999,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2985,
																		"src": "8410:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2997,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "8374:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3001,
															"nodeType": "RevertStatement",
															"src": "8367:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "8451:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 3004,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2989,
												"id": 3008,
												"nodeType": "Return",
												"src": "8436:21:8"
											}
										]
									},
									"documentation": {
										"id": 2983,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:8",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "8265:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:8"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "8303:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2987,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:8"
									},
									"scope": 4356,
									"src": "8246:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3037,
										"nodeType": "Block",
										"src": "8821:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3018,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "8835:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 3020,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 3019,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 3023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3031,
												"nodeType": "IfStatement",
												"src": "8831:105:8",
												"trueBody": {
													"id": 3030,
													"nodeType": "Block",
													"src": "8862:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3027,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3013,
																		"src": "8919:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3025,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "8883:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3029,
															"nodeType": "RevertStatement",
															"src": "8876:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3034,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "8960:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3032,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 3017,
												"id": 3036,
												"nodeType": "Return",
												"src": "8945:21:8"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:8",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "8774:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:8"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "8812:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 3015,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:8"
									},
									"scope": 4356,
									"src": "8755:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "9330:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3046,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3041,
														"src": "9344:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3048,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3047,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3059,
												"nodeType": "IfStatement",
												"src": "9340:105:8",
												"trueBody": {
													"id": 3058,
													"nodeType": "Block",
													"src": "9371:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3055,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3041,
																		"src": "9428:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3053,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "9392:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3057,
															"nodeType": "RevertStatement",
															"src": "9385:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3062,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "9469:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3060,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3045,
												"id": 3064,
												"nodeType": "Return",
												"src": "9454:21:8"
											}
										]
									},
									"documentation": {
										"id": 3039,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:8",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "9283:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:8"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "9321:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3043,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:8"
									},
									"scope": 4356,
									"src": "9264:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "9839:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3074,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "9853:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3076,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3075,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3087,
												"nodeType": "IfStatement",
												"src": "9849:105:8",
												"trueBody": {
													"id": 3086,
													"nodeType": "Block",
													"src": "9880:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3083,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3069,
																		"src": "9937:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3081,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "9901:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3085,
															"nodeType": "RevertStatement",
															"src": "9894:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3090,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "9978:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3088,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3073,
												"id": 3092,
												"nodeType": "Return",
												"src": "9963:21:8"
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:8",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "9792:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:8"
									},
									"returnParameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "9830:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3071,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:8"
									},
									"scope": 4356,
									"src": "9773:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3121,
										"nodeType": "Block",
										"src": "10348:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3102,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3097,
														"src": "10362:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3104,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3103,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3115,
												"nodeType": "IfStatement",
												"src": "10358:105:8",
												"trueBody": {
													"id": 3114,
													"nodeType": "Block",
													"src": "10389:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3097,
																		"src": "10446:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3109,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "10410:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3113,
															"nodeType": "RevertStatement",
															"src": "10403:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3118,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "10487:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3116,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3101,
												"id": 3120,
												"nodeType": "Return",
												"src": "10472:21:8"
											}
										]
									},
									"documentation": {
										"id": 3095,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:8",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "10301:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:8"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "10339:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3099,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:8"
									},
									"scope": 4356,
									"src": "10282:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3149,
										"nodeType": "Block",
										"src": "10857:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3130,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3125,
														"src": "10871:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3132,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3131,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3143,
												"nodeType": "IfStatement",
												"src": "10867:105:8",
												"trueBody": {
													"id": 3142,
													"nodeType": "Block",
													"src": "10898:74:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3139,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3125,
																		"src": "10955:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3137,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "10919:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3141,
															"nodeType": "RevertStatement",
															"src": "10912:49:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3146,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3125,
															"src": "10996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3144,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3129,
												"id": 3148,
												"nodeType": "Return",
												"src": "10981:21:8"
											}
										]
									},
									"documentation": {
										"id": 3123,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:8",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "10810:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:8"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "10848:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3127,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:8"
									},
									"scope": 4356,
									"src": "10791:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3177,
										"nodeType": "Block",
										"src": "11360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3158,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "11374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3160,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3159,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3171,
												"nodeType": "IfStatement",
												"src": "11370:103:8",
												"trueBody": {
													"id": 3170,
													"nodeType": "Block",
													"src": "11400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3167,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3153,
																		"src": "11456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3165,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "11421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3169,
															"nodeType": "RevertStatement",
															"src": "11414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3174,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "11496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3172,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3157,
												"id": 3176,
												"nodeType": "Return",
												"src": "11482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3151,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:8",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "11314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:8"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "11352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3155,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:8"
									},
									"scope": 4356,
									"src": "11296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3205,
										"nodeType": "Block",
										"src": "11860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3186,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "11874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3188,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3187,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3199,
												"nodeType": "IfStatement",
												"src": "11870:103:8",
												"trueBody": {
													"id": 3198,
													"nodeType": "Block",
													"src": "11900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3195,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3181,
																		"src": "11956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3193,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "11921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3197,
															"nodeType": "RevertStatement",
															"src": "11914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3181,
															"src": "11996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3200,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3185,
												"id": 3204,
												"nodeType": "Return",
												"src": "11982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3179,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:8",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "11814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:8"
									},
									"returnParameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "11852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3183,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:8"
									},
									"scope": 4356,
									"src": "11796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3233,
										"nodeType": "Block",
										"src": "12360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3214,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "12374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3216,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3215,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3227,
												"nodeType": "IfStatement",
												"src": "12370:103:8",
												"trueBody": {
													"id": 3226,
													"nodeType": "Block",
													"src": "12400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3209,
																		"src": "12456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3221,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "12421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3225,
															"nodeType": "RevertStatement",
															"src": "12414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "12496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3228,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3213,
												"id": 3232,
												"nodeType": "Return",
												"src": "12482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3207,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:8",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "12314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:8"
									},
									"returnParameters": {
										"id": 3213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "12352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3211,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:8"
									},
									"scope": 4356,
									"src": "12296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "12860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3242,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "12874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 3244,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 3243,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 3247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3255,
												"nodeType": "IfStatement",
												"src": "12870:103:8",
												"trueBody": {
													"id": 3254,
													"nodeType": "Block",
													"src": "12900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3251,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3237,
																		"src": "12956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3249,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "12921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3253,
															"nodeType": "RevertStatement",
															"src": "12914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3258,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3237,
															"src": "12996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 3256,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3241,
												"id": 3260,
												"nodeType": "Return",
												"src": "12982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3235,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:8",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "12814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:8"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "12852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3239,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:8"
									},
									"scope": 4356,
									"src": "12796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "13360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3270,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3265,
														"src": "13374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3272,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 3271,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3283,
												"nodeType": "IfStatement",
												"src": "13370:103:8",
												"trueBody": {
													"id": 3282,
													"nodeType": "Block",
													"src": "13400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3279,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3265,
																		"src": "13456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3277,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "13421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3281,
															"nodeType": "RevertStatement",
															"src": "13414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3265,
															"src": "13496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3284,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 3269,
												"id": 3288,
												"nodeType": "Return",
												"src": "13482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3263,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:8",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "13314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:8"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "13352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3267,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:8"
									},
									"scope": 4356,
									"src": "13296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "13860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3298,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3293,
														"src": "13874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3300,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3299,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3311,
												"nodeType": "IfStatement",
												"src": "13870:103:8",
												"trueBody": {
													"id": 3310,
													"nodeType": "Block",
													"src": "13900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3307,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3293,
																		"src": "13956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3305,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "13921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3309,
															"nodeType": "RevertStatement",
															"src": "13914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3314,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3293,
															"src": "13996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3312,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3297,
												"id": 3316,
												"nodeType": "Return",
												"src": "13982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3291,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:8",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "13814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:8"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "13852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3295,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:8"
									},
									"scope": 4356,
									"src": "13796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3345,
										"nodeType": "Block",
										"src": "14360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3326,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3321,
														"src": "14374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3328,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3327,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3339,
												"nodeType": "IfStatement",
												"src": "14370:103:8",
												"trueBody": {
													"id": 3338,
													"nodeType": "Block",
													"src": "14400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3335,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3321,
																		"src": "14456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3333,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "14421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3337,
															"nodeType": "RevertStatement",
															"src": "14414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3321,
															"src": "14496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3340,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3325,
												"id": 3344,
												"nodeType": "Return",
												"src": "14482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3319,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:8",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "14314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:8"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "14352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3323,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:8"
									},
									"scope": 4356,
									"src": "14296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3373,
										"nodeType": "Block",
										"src": "14860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3354,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "14874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3356,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3355,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3367,
												"nodeType": "IfStatement",
												"src": "14870:103:8",
												"trueBody": {
													"id": 3366,
													"nodeType": "Block",
													"src": "14900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3363,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3349,
																		"src": "14956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3361,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "14921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3365,
															"nodeType": "RevertStatement",
															"src": "14914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3370,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3349,
															"src": "14996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3368,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3353,
												"id": 3372,
												"nodeType": "Return",
												"src": "14982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3347,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:8",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "14814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:8"
									},
									"returnParameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "14852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3351,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:8"
									},
									"scope": 4356,
									"src": "14796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3401,
										"nodeType": "Block",
										"src": "15360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3382,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "15374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3384,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3383,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3395,
												"nodeType": "IfStatement",
												"src": "15370:103:8",
												"trueBody": {
													"id": 3394,
													"nodeType": "Block",
													"src": "15400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3391,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3377,
																		"src": "15456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3389,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "15421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3393,
															"nodeType": "RevertStatement",
															"src": "15414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3377,
															"src": "15496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 3396,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3381,
												"id": 3400,
												"nodeType": "Return",
												"src": "15482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3375,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:8",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "15314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:8"
									},
									"returnParameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "15352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3379,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:8"
									},
									"scope": 4356,
									"src": "15296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3429,
										"nodeType": "Block",
										"src": "15860:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3410,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3405,
														"src": "15874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 3412,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 3411,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 3415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3423,
												"nodeType": "IfStatement",
												"src": "15870:103:8",
												"trueBody": {
													"id": 3422,
													"nodeType": "Block",
													"src": "15900:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3419,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3405,
																		"src": "15956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3417,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "15921:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3421,
															"nodeType": "RevertStatement",
															"src": "15914:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3426,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3405,
															"src": "15996:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3424,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 3409,
												"id": 3428,
												"nodeType": "Return",
												"src": "15982:20:8"
											}
										]
									},
									"documentation": {
										"id": 3403,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:8",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "15814:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:8"
									},
									"returnParameters": {
										"id": 3409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "15852:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3407,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:8"
									},
									"scope": 4356,
									"src": "15796:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3457,
										"nodeType": "Block",
										"src": "16360:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3438,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3433,
														"src": "16374:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3440,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3439,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3451,
												"nodeType": "IfStatement",
												"src": "16370:103:8",
												"trueBody": {
													"id": 3450,
													"nodeType": "Block",
													"src": "16400:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3447,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3433,
																		"src": "16456:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3445,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "16421:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3449,
															"nodeType": "RevertStatement",
															"src": "16414:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3433,
															"src": "16496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3452,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3437,
												"id": 3456,
												"nodeType": "Return",
												"src": "16482:20:8"
											}
										]
									},
									"documentation": {
										"id": 3431,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:8",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "16314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:8"
									},
									"returnParameters": {
										"id": 3437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "16352:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3435,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:8"
									},
									"scope": 4356,
									"src": "16296:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3485,
										"nodeType": "Block",
										"src": "16854:146:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3466,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "16868:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3468,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3467,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3479,
												"nodeType": "IfStatement",
												"src": "16864:101:8",
												"trueBody": {
													"id": 3478,
													"nodeType": "Block",
													"src": "16893:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3475,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3461,
																		"src": "16948:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3473,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "16914:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3477,
															"nodeType": "RevertStatement",
															"src": "16907:47:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3482,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3461,
															"src": "16987:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3480,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:8",
															"typeDescriptions": {}
														}
													},
													"id": 3483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3465,
												"id": 3484,
												"nodeType": "Return",
												"src": "16974:19:8"
											}
										]
									},
									"documentation": {
										"id": 3459,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:8",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "16809:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:8"
									},
									"returnParameters": {
										"id": 3465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "16847:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3463,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:8"
									},
									"scope": 4356,
									"src": "16792:208:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3508,
										"nodeType": "Block",
										"src": "17236:128:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3489,
														"src": "17250:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3502,
												"nodeType": "IfStatement",
												"src": "17246:81:8",
												"trueBody": {
													"id": 3501,
													"nodeType": "Block",
													"src": "17261:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3498,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3489,
																		"src": "17310:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3497,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2606,
																	"src": "17282:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3500,
															"nodeType": "RevertStatement",
															"src": "17275:41:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3505,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3489,
															"src": "17351:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 3506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3493,
												"id": 3507,
												"nodeType": "Return",
												"src": "17336:21:8"
											}
										]
									},
									"documentation": {
										"id": 3487,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:8",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "17190:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3488,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:8"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "17227:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:8"
									},
									"scope": 4356,
									"src": "17171:193:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3534,
										"nodeType": "Block",
										"src": "17761:150:8",
										"statements": [
											{
												"expression": {
													"id": 3522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3517,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3515,
														"src": "17771:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3520,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3512,
																"src": "17791:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3518,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3523,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3524,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3515,
														"src": "17811:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3525,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3512,
														"src": "17825:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3533,
												"nodeType": "IfStatement",
												"src": "17807:98:8",
												"trueBody": {
													"id": 3532,
													"nodeType": "Block",
													"src": "17832:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3529,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3512,
																		"src": "17888:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3527,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "17853:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3531,
															"nodeType": "RevertStatement",
															"src": "17846:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3510,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:8",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "17705:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3511,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:8"
									},
									"returnParameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "17742:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3514,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:8"
									},
									"scope": 4356,
									"src": "17687:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3560,
										"nodeType": "Block",
										"src": "18308:150:8",
										"statements": [
											{
												"expression": {
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3543,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3541,
														"src": "18318:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3546,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3538,
																"src": "18338:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3544,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3549,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3550,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3541,
														"src": "18358:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3551,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3538,
														"src": "18372:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3559,
												"nodeType": "IfStatement",
												"src": "18354:98:8",
												"trueBody": {
													"id": 3558,
													"nodeType": "Block",
													"src": "18379:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3555,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3538,
																		"src": "18435:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3553,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "18400:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3557,
															"nodeType": "RevertStatement",
															"src": "18393:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3536,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:8",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3538,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "18252:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3537,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:8"
									},
									"returnParameters": {
										"id": 3542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3541,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "18289:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3540,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:8"
									},
									"scope": 4356,
									"src": "18234:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3586,
										"nodeType": "Block",
										"src": "18855:150:8",
										"statements": [
											{
												"expression": {
													"id": 3574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3569,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3567,
														"src": "18865:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3572,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3564,
																"src": "18885:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3570,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3575,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3576,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3567,
														"src": "18905:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3577,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3564,
														"src": "18919:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3585,
												"nodeType": "IfStatement",
												"src": "18901:98:8",
												"trueBody": {
													"id": 3584,
													"nodeType": "Block",
													"src": "18926:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3581,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3564,
																		"src": "18982:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3579,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "18947:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3583,
															"nodeType": "RevertStatement",
															"src": "18940:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3562,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:8",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "18799:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3563,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:8"
									},
									"returnParameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "18836:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3566,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:8"
									},
									"scope": 4356,
									"src": "18781:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3612,
										"nodeType": "Block",
										"src": "19402:150:8",
										"statements": [
											{
												"expression": {
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3595,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3593,
														"src": "19412:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3598,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3590,
																"src": "19432:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3596,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3601,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3602,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3593,
														"src": "19452:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3603,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3590,
														"src": "19466:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3611,
												"nodeType": "IfStatement",
												"src": "19448:98:8",
												"trueBody": {
													"id": 3610,
													"nodeType": "Block",
													"src": "19473:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3607,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3590,
																		"src": "19529:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3605,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "19494:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3609,
															"nodeType": "RevertStatement",
															"src": "19487:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3588,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:8",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "19346:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3589,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:8"
									},
									"returnParameters": {
										"id": 3594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3593,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "19383:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3592,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:8"
									},
									"scope": 4356,
									"src": "19328:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3638,
										"nodeType": "Block",
										"src": "19949:150:8",
										"statements": [
											{
												"expression": {
													"id": 3626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3621,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3619,
														"src": "19959:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3624,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3616,
																"src": "19979:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3622,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3627,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3628,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3619,
														"src": "19999:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3629,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3616,
														"src": "20013:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3637,
												"nodeType": "IfStatement",
												"src": "19995:98:8",
												"trueBody": {
													"id": 3636,
													"nodeType": "Block",
													"src": "20020:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3633,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3616,
																		"src": "20076:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3631,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "20041:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3635,
															"nodeType": "RevertStatement",
															"src": "20034:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3614,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:8",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3639,
												"src": "19893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3615,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:8"
									},
									"returnParameters": {
										"id": 3620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3619,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3639,
												"src": "19930:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3618,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:8"
									},
									"scope": 4356,
									"src": "19875:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3664,
										"nodeType": "Block",
										"src": "20496:150:8",
										"statements": [
											{
												"expression": {
													"id": 3652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3647,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3645,
														"src": "20506:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3650,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3642,
																"src": "20526:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3648,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3653,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3654,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3645,
														"src": "20546:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3655,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3642,
														"src": "20560:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3663,
												"nodeType": "IfStatement",
												"src": "20542:98:8",
												"trueBody": {
													"id": 3662,
													"nodeType": "Block",
													"src": "20567:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3659,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3642,
																		"src": "20623:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3657,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "20588:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3661,
															"nodeType": "RevertStatement",
															"src": "20581:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3640,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:8",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "20440:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3641,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:8"
									},
									"returnParameters": {
										"id": 3646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3645,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "20477:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3644,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:8"
									},
									"scope": 4356,
									"src": "20422:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3690,
										"nodeType": "Block",
										"src": "21043:150:8",
										"statements": [
											{
												"expression": {
													"id": 3678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3673,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3671,
														"src": "21053:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3676,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3668,
																"src": "21073:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3674,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3679,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3680,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3671,
														"src": "21093:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3681,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3668,
														"src": "21107:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3689,
												"nodeType": "IfStatement",
												"src": "21089:98:8",
												"trueBody": {
													"id": 3688,
													"nodeType": "Block",
													"src": "21114:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3685,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3668,
																		"src": "21170:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3683,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "21135:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3687,
															"nodeType": "RevertStatement",
															"src": "21128:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3666,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:8",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3691,
												"src": "20987:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3667,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:8"
									},
									"returnParameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3671,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3691,
												"src": "21024:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3670,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:8"
									},
									"scope": 4356,
									"src": "20969:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3716,
										"nodeType": "Block",
										"src": "21590:150:8",
										"statements": [
											{
												"expression": {
													"id": 3704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3699,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3697,
														"src": "21600:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3702,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3694,
																"src": "21620:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3700,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3705,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3706,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3697,
														"src": "21640:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3707,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3694,
														"src": "21654:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3715,
												"nodeType": "IfStatement",
												"src": "21636:98:8",
												"trueBody": {
													"id": 3714,
													"nodeType": "Block",
													"src": "21661:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3711,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3694,
																		"src": "21717:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3709,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "21682:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3713,
															"nodeType": "RevertStatement",
															"src": "21675:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3692,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:8",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3694,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3717,
												"src": "21534:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:8"
									},
									"returnParameters": {
										"id": 3698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3697,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3717,
												"src": "21571:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3696,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:8"
									},
									"scope": 4356,
									"src": "21516:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3742,
										"nodeType": "Block",
										"src": "22137:150:8",
										"statements": [
											{
												"expression": {
													"id": 3730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3725,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3723,
														"src": "22147:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3728,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3720,
																"src": "22167:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3726,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3731,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3732,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3723,
														"src": "22187:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3733,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3720,
														"src": "22201:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3741,
												"nodeType": "IfStatement",
												"src": "22183:98:8",
												"trueBody": {
													"id": 3740,
													"nodeType": "Block",
													"src": "22208:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3737,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3720,
																		"src": "22264:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3735,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "22229:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3739,
															"nodeType": "RevertStatement",
															"src": "22222:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3718,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:8",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3743,
												"src": "22081:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3719,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:8"
									},
									"returnParameters": {
										"id": 3724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3723,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3743,
												"src": "22118:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3722,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:8"
									},
									"scope": 4356,
									"src": "22063:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3768,
										"nodeType": "Block",
										"src": "22684:150:8",
										"statements": [
											{
												"expression": {
													"id": 3756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3751,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3749,
														"src": "22694:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3746,
																"src": "22714:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3752,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3757,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3758,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3749,
														"src": "22734:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3759,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3746,
														"src": "22748:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3767,
												"nodeType": "IfStatement",
												"src": "22730:98:8",
												"trueBody": {
													"id": 3766,
													"nodeType": "Block",
													"src": "22755:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3763,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3746,
																		"src": "22811:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3761,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "22776:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3765,
															"nodeType": "RevertStatement",
															"src": "22769:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3744,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:8",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3769,
												"src": "22628:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3745,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:8"
									},
									"returnParameters": {
										"id": 3750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3749,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3769,
												"src": "22665:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3748,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:8"
									},
									"scope": 4356,
									"src": "22610:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3794,
										"nodeType": "Block",
										"src": "23231:150:8",
										"statements": [
											{
												"expression": {
													"id": 3782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3777,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3775,
														"src": "23241:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3772,
																"src": "23261:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3778,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3783,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3784,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3775,
														"src": "23281:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3785,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3772,
														"src": "23295:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3793,
												"nodeType": "IfStatement",
												"src": "23277:98:8",
												"trueBody": {
													"id": 3792,
													"nodeType": "Block",
													"src": "23302:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3789,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3772,
																		"src": "23358:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3787,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "23323:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3791,
															"nodeType": "RevertStatement",
															"src": "23316:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3770,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:8",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3795,
												"src": "23175:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3771,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:8"
									},
									"returnParameters": {
										"id": 3776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3775,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3795,
												"src": "23212:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3774,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:8"
									},
									"scope": 4356,
									"src": "23157:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3820,
										"nodeType": "Block",
										"src": "23778:150:8",
										"statements": [
											{
												"expression": {
													"id": 3808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3803,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3801,
														"src": "23788:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3806,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3798,
																"src": "23808:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3804,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3809,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3810,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3801,
														"src": "23828:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3811,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3798,
														"src": "23842:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3819,
												"nodeType": "IfStatement",
												"src": "23824:98:8",
												"trueBody": {
													"id": 3818,
													"nodeType": "Block",
													"src": "23849:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3815,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3798,
																		"src": "23905:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3813,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "23870:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3817,
															"nodeType": "RevertStatement",
															"src": "23863:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3796,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:8",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3798,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3821,
												"src": "23722:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3797,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:8"
									},
									"returnParameters": {
										"id": 3802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3801,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3821,
												"src": "23759:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3800,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:8"
									},
									"scope": 4356,
									"src": "23704:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3846,
										"nodeType": "Block",
										"src": "24325:150:8",
										"statements": [
											{
												"expression": {
													"id": 3834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3829,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3827,
														"src": "24335:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3832,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3824,
																"src": "24355:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3830,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3835,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3836,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3827,
														"src": "24375:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3837,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3824,
														"src": "24389:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3845,
												"nodeType": "IfStatement",
												"src": "24371:98:8",
												"trueBody": {
													"id": 3844,
													"nodeType": "Block",
													"src": "24396:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3841,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3824,
																		"src": "24452:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3839,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "24417:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3843,
															"nodeType": "RevertStatement",
															"src": "24410:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3822,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:8",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3824,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "24269:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3823,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:8"
									},
									"returnParameters": {
										"id": 3828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3827,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "24306:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3826,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:8"
									},
									"scope": 4356,
									"src": "24251:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3872,
										"nodeType": "Block",
										"src": "24872:150:8",
										"statements": [
											{
												"expression": {
													"id": 3860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3855,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3853,
														"src": "24882:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3858,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3850,
																"src": "24902:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3856,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3861,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3862,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3853,
														"src": "24922:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3863,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3850,
														"src": "24936:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3871,
												"nodeType": "IfStatement",
												"src": "24918:98:8",
												"trueBody": {
													"id": 3870,
													"nodeType": "Block",
													"src": "24943:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3867,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3850,
																		"src": "24999:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3865,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "24964:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3869,
															"nodeType": "RevertStatement",
															"src": "24957:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3848,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:8",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "24816:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3849,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:8"
									},
									"returnParameters": {
										"id": 3854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3853,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "24853:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3852,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:8"
									},
									"scope": 4356,
									"src": "24798:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3898,
										"nodeType": "Block",
										"src": "25419:150:8",
										"statements": [
											{
												"expression": {
													"id": 3886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3881,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3879,
														"src": "25429:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3884,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3876,
																"src": "25449:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3882,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3887,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3888,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3879,
														"src": "25469:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3889,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3876,
														"src": "25483:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3897,
												"nodeType": "IfStatement",
												"src": "25465:98:8",
												"trueBody": {
													"id": 3896,
													"nodeType": "Block",
													"src": "25490:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3893,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3876,
																		"src": "25546:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3891,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "25511:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3895,
															"nodeType": "RevertStatement",
															"src": "25504:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3874,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:8",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3899,
												"src": "25363:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3875,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:8"
									},
									"returnParameters": {
										"id": 3880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3879,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3899,
												"src": "25400:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3878,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:8"
									},
									"scope": 4356,
									"src": "25345:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3924,
										"nodeType": "Block",
										"src": "25966:150:8",
										"statements": [
											{
												"expression": {
													"id": 3912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3907,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3905,
														"src": "25976:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3910,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3902,
																"src": "25996:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3908,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3913,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3914,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3905,
														"src": "26016:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3915,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3902,
														"src": "26030:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3923,
												"nodeType": "IfStatement",
												"src": "26012:98:8",
												"trueBody": {
													"id": 3922,
													"nodeType": "Block",
													"src": "26037:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3919,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3902,
																		"src": "26093:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3917,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "26058:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3921,
															"nodeType": "RevertStatement",
															"src": "26051:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3900,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:8",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3925,
												"src": "25910:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3901,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:8"
									},
									"returnParameters": {
										"id": 3906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3905,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3925,
												"src": "25947:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3904,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:8"
									},
									"scope": 4356,
									"src": "25892:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3950,
										"nodeType": "Block",
										"src": "26513:150:8",
										"statements": [
											{
												"expression": {
													"id": 3938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3933,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3931,
														"src": "26523:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3936,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3928,
																"src": "26543:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3934,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3939,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3940,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3931,
														"src": "26563:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3941,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3928,
														"src": "26577:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3949,
												"nodeType": "IfStatement",
												"src": "26559:98:8",
												"trueBody": {
													"id": 3948,
													"nodeType": "Block",
													"src": "26584:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3945,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3928,
																		"src": "26640:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3943,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "26605:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3947,
															"nodeType": "RevertStatement",
															"src": "26598:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3926,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:8",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3951,
												"src": "26457:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3927,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:8"
									},
									"returnParameters": {
										"id": 3932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3931,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3951,
												"src": "26494:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3930,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:8"
									},
									"scope": 4356,
									"src": "26439:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3976,
										"nodeType": "Block",
										"src": "27060:150:8",
										"statements": [
											{
												"expression": {
													"id": 3964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3959,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3957,
														"src": "27070:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3962,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3954,
																"src": "27090:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3960,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3965,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3966,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3957,
														"src": "27110:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3967,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3954,
														"src": "27124:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3975,
												"nodeType": "IfStatement",
												"src": "27106:98:8",
												"trueBody": {
													"id": 3974,
													"nodeType": "Block",
													"src": "27131:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3971,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3954,
																		"src": "27187:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3969,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "27152:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3973,
															"nodeType": "RevertStatement",
															"src": "27145:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3952,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:8",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3977,
												"src": "27004:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3953,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:8"
									},
									"returnParameters": {
										"id": 3958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3957,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3977,
												"src": "27041:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3956,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:8"
									},
									"scope": 4356,
									"src": "26986:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4002,
										"nodeType": "Block",
										"src": "27607:150:8",
										"statements": [
											{
												"expression": {
													"id": 3990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3985,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3983,
														"src": "27617:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3988,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3980,
																"src": "27637:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3986,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 3989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3991,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3992,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3983,
														"src": "27657:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3993,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3980,
														"src": "27671:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4001,
												"nodeType": "IfStatement",
												"src": "27653:98:8",
												"trueBody": {
													"id": 4000,
													"nodeType": "Block",
													"src": "27678:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3997,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3980,
																		"src": "27734:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3995,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "27699:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3999,
															"nodeType": "RevertStatement",
															"src": "27692:48:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3978,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:8",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4003,
												"src": "27551:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3979,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:8"
									},
									"returnParameters": {
										"id": 3984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3983,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4003,
												"src": "27588:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3982,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:8"
									},
									"scope": 4356,
									"src": "27533:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4028,
										"nodeType": "Block",
										"src": "28147:148:8",
										"statements": [
											{
												"expression": {
													"id": 4016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4011,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4009,
														"src": "28157:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4014,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4006,
																"src": "28176:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 4012,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 4017,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4018,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4009,
														"src": "28196:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4019,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4006,
														"src": "28210:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4027,
												"nodeType": "IfStatement",
												"src": "28192:97:8",
												"trueBody": {
													"id": 4026,
													"nodeType": "Block",
													"src": "28217:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4023,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4006,
																		"src": "28272:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4021,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "28238:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4025,
															"nodeType": "RevertStatement",
															"src": "28231:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4004,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:8",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4006,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4029,
												"src": "28092:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4005,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:8"
									},
									"returnParameters": {
										"id": 4010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4009,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4029,
												"src": "28129:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 4008,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:8"
									},
									"scope": 4356,
									"src": "28075:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4054,
										"nodeType": "Block",
										"src": "28685:148:8",
										"statements": [
											{
												"expression": {
													"id": 4042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4037,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4035,
														"src": "28695:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4040,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4032,
																"src": "28714:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4038,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4043,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4044,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4035,
														"src": "28734:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4045,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4032,
														"src": "28748:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4053,
												"nodeType": "IfStatement",
												"src": "28730:97:8",
												"trueBody": {
													"id": 4052,
													"nodeType": "Block",
													"src": "28755:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4049,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4032,
																		"src": "28810:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4047,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "28776:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4051,
															"nodeType": "RevertStatement",
															"src": "28769:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4030,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:8",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4055,
												"src": "28630:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4031,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:8"
									},
									"returnParameters": {
										"id": 4036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4035,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4055,
												"src": "28667:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4034,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:8"
									},
									"scope": 4356,
									"src": "28613:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4080,
										"nodeType": "Block",
										"src": "29223:148:8",
										"statements": [
											{
												"expression": {
													"id": 4068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4063,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4061,
														"src": "29233:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4066,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4058,
																"src": "29252:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4064,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4069,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4070,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4061,
														"src": "29272:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4071,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4058,
														"src": "29286:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4079,
												"nodeType": "IfStatement",
												"src": "29268:97:8",
												"trueBody": {
													"id": 4078,
													"nodeType": "Block",
													"src": "29293:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4075,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4058,
																		"src": "29348:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4073,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "29314:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4077,
															"nodeType": "RevertStatement",
															"src": "29307:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4056,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:8",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4081,
												"src": "29168:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4057,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:8"
									},
									"returnParameters": {
										"id": 4062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4061,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4081,
												"src": "29205:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4060,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:8"
									},
									"scope": 4356,
									"src": "29151:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4106,
										"nodeType": "Block",
										"src": "29761:148:8",
										"statements": [
											{
												"expression": {
													"id": 4094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4089,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4087,
														"src": "29771:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4092,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4084,
																"src": "29790:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4090,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4095,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4096,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4087,
														"src": "29810:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4097,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4084,
														"src": "29824:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4105,
												"nodeType": "IfStatement",
												"src": "29806:97:8",
												"trueBody": {
													"id": 4104,
													"nodeType": "Block",
													"src": "29831:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4101,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4084,
																		"src": "29886:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4099,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "29852:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4103,
															"nodeType": "RevertStatement",
															"src": "29845:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4082,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:8",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4107,
												"src": "29706:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4083,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:8"
									},
									"returnParameters": {
										"id": 4088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4087,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4107,
												"src": "29743:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4086,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:8"
									},
									"scope": 4356,
									"src": "29689:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4132,
										"nodeType": "Block",
										"src": "30299:148:8",
										"statements": [
											{
												"expression": {
													"id": 4120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4115,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4113,
														"src": "30309:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4118,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4110,
																"src": "30328:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4116,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4121,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4122,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4113,
														"src": "30348:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4123,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4110,
														"src": "30362:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4131,
												"nodeType": "IfStatement",
												"src": "30344:97:8",
												"trueBody": {
													"id": 4130,
													"nodeType": "Block",
													"src": "30369:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4127,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4110,
																		"src": "30424:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4125,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "30390:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4129,
															"nodeType": "RevertStatement",
															"src": "30383:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4108,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:8",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4110,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "30244:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4109,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:8"
									},
									"returnParameters": {
										"id": 4114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4113,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "30281:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4112,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:8"
									},
									"scope": 4356,
									"src": "30227:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4158,
										"nodeType": "Block",
										"src": "30837:148:8",
										"statements": [
											{
												"expression": {
													"id": 4146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4141,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4139,
														"src": "30847:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4144,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4136,
																"src": "30866:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4142,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4147,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4148,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4139,
														"src": "30886:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4149,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4136,
														"src": "30900:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4157,
												"nodeType": "IfStatement",
												"src": "30882:97:8",
												"trueBody": {
													"id": 4156,
													"nodeType": "Block",
													"src": "30907:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4153,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4136,
																		"src": "30962:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4151,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "30928:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4155,
															"nodeType": "RevertStatement",
															"src": "30921:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4134,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:8",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4159,
												"src": "30782:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4135,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:8"
									},
									"returnParameters": {
										"id": 4140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4139,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4159,
												"src": "30819:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4138,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:8"
									},
									"scope": 4356,
									"src": "30765:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4184,
										"nodeType": "Block",
										"src": "31375:148:8",
										"statements": [
											{
												"expression": {
													"id": 4172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4167,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4165,
														"src": "31385:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4170,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4162,
																"src": "31404:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4168,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4173,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4174,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4165,
														"src": "31424:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4175,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4162,
														"src": "31438:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4183,
												"nodeType": "IfStatement",
												"src": "31420:97:8",
												"trueBody": {
													"id": 4182,
													"nodeType": "Block",
													"src": "31445:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4179,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4162,
																		"src": "31500:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4177,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "31466:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4181,
															"nodeType": "RevertStatement",
															"src": "31459:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4160,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:8",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4185,
												"src": "31320:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4161,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:8"
									},
									"returnParameters": {
										"id": 4166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4165,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4185,
												"src": "31357:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4164,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:8"
									},
									"scope": 4356,
									"src": "31303:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4210,
										"nodeType": "Block",
										"src": "31913:148:8",
										"statements": [
											{
												"expression": {
													"id": 4198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4193,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "31923:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4196,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4188,
																"src": "31942:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4194,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4199,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4200,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "31962:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4201,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4188,
														"src": "31976:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4209,
												"nodeType": "IfStatement",
												"src": "31958:97:8",
												"trueBody": {
													"id": 4208,
													"nodeType": "Block",
													"src": "31983:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4205,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4188,
																		"src": "32038:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4203,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "32004:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4207,
															"nodeType": "RevertStatement",
															"src": "31997:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4186,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:8",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4188,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4211,
												"src": "31858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4187,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:8"
									},
									"returnParameters": {
										"id": 4192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4191,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4211,
												"src": "31895:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4190,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:8"
									},
									"scope": 4356,
									"src": "31841:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4236,
										"nodeType": "Block",
										"src": "32451:148:8",
										"statements": [
											{
												"expression": {
													"id": 4224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4219,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4217,
														"src": "32461:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4222,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4214,
																"src": "32480:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4220,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4225,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4226,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4217,
														"src": "32500:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4227,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4214,
														"src": "32514:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4235,
												"nodeType": "IfStatement",
												"src": "32496:97:8",
												"trueBody": {
													"id": 4234,
													"nodeType": "Block",
													"src": "32521:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4231,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4214,
																		"src": "32576:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4229,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "32542:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4233,
															"nodeType": "RevertStatement",
															"src": "32535:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4212,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:8",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4237,
												"src": "32396:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4213,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:8"
									},
									"returnParameters": {
										"id": 4218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4217,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4237,
												"src": "32433:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4216,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:8"
									},
									"scope": 4356,
									"src": "32379:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4262,
										"nodeType": "Block",
										"src": "32989:148:8",
										"statements": [
											{
												"expression": {
													"id": 4250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4245,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4243,
														"src": "32999:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4248,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4240,
																"src": "33018:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 4246,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 4251,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4252,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4243,
														"src": "33038:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4253,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4240,
														"src": "33052:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4261,
												"nodeType": "IfStatement",
												"src": "33034:97:8",
												"trueBody": {
													"id": 4260,
													"nodeType": "Block",
													"src": "33059:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4257,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4240,
																		"src": "33114:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4255,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "33080:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4259,
															"nodeType": "RevertStatement",
															"src": "33073:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4238,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:8",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4240,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4263,
												"src": "32934:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4239,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:8"
									},
									"returnParameters": {
										"id": 4244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4243,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4263,
												"src": "32971:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4242,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:8"
									},
									"scope": 4356,
									"src": "32917:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4288,
										"nodeType": "Block",
										"src": "33527:148:8",
										"statements": [
											{
												"expression": {
													"id": 4276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4271,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4269,
														"src": "33537:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4274,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4266,
																"src": "33556:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4272,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 4275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4277,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4278,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4269,
														"src": "33576:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4279,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4266,
														"src": "33590:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4287,
												"nodeType": "IfStatement",
												"src": "33572:97:8",
												"trueBody": {
													"id": 4286,
													"nodeType": "Block",
													"src": "33597:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4283,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4266,
																		"src": "33652:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4281,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "33618:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4285,
															"nodeType": "RevertStatement",
															"src": "33611:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4264,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:8",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4289,
												"src": "33472:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4265,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:8"
									},
									"returnParameters": {
										"id": 4270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4269,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4289,
												"src": "33509:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4268,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:8"
									},
									"scope": 4356,
									"src": "33455:220:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4314,
										"nodeType": "Block",
										"src": "34058:146:8",
										"statements": [
											{
												"expression": {
													"id": 4302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4297,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4295,
														"src": "34068:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4300,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4292,
																"src": "34086:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4298,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:8",
																"typeDescriptions": {}
															}
														},
														"id": 4301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4303,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4304,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4295,
														"src": "34106:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4305,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4292,
														"src": "34120:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4313,
												"nodeType": "IfStatement",
												"src": "34102:96:8",
												"trueBody": {
													"id": 4312,
													"nodeType": "Block",
													"src": "34127:71:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4309,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4292,
																		"src": "34181:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4307,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "34148:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4311,
															"nodeType": "RevertStatement",
															"src": "34141:46:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4290,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:8",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "34004:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4291,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:8"
									},
									"returnParameters": {
										"id": 4296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4295,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "34041:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4294,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:8"
									},
									"scope": 4356,
									"src": "33988:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4344,
										"nodeType": "Block",
										"src": "34444:250:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4323,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4318,
														"src": "34557:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4327,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:8",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4326,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:8",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4324,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 4331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4338,
												"nodeType": "IfStatement",
												"src": "34553:105:8",
												"trueBody": {
													"id": 4337,
													"nodeType": "Block",
													"src": "34592:66:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4334,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4318,
																		"src": "34641:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4333,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2618,
																	"src": "34613:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4336,
															"nodeType": "RevertStatement",
															"src": "34606:41:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4341,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4318,
															"src": "34681:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4339,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 4342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4322,
												"id": 4343,
												"nodeType": "Return",
												"src": "34667:20:8"
											}
										]
									},
									"documentation": {
										"id": 4316,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:8",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 4345,
												"src": "34398:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:8"
									},
									"returnParameters": {
										"id": 4322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4345,
												"src": "34436:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4320,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:8"
									},
									"scope": 4356,
									"src": "34380:314:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4354,
										"nodeType": "Block",
										"src": "34853:87:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:8",
													"nodeType": "YulBlock",
													"src": "34888:46:8",
													"statements": [
														{
															"nativeSrc": "34902:22:8",
															"nodeType": "YulAssignment",
															"src": "34902:22:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:8"
																		},
																		"nativeSrc": "34914:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:8"
																},
																"nativeSrc": "34907:17:8",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:8"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4348,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:8",
														"valueSize": 1
													},
													{
														"declaration": 4351,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4353,
												"nodeType": "InlineAssembly",
												"src": "34863:71:8"
											}
										]
									},
									"documentation": {
										"id": 4346,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:8",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4348,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 4355,
												"src": "34811:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:8"
									},
									"returnParameters": {
										"id": 4352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4351,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 4355,
												"src": "34842:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:8"
									},
									"scope": 4356,
									"src": "34795:145:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4357,
							"src": "769:34173:8",
							"usedErrors": [
								2601,
								2606,
								2613,
								2618
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:8"
				},
				"id": 8
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Math": [
							2591
						],
						"MyToken": [
							4613
						],
						"Ownable": [
							147
						],
						"Panic": [
							985
						],
						"SafeCast": [
							4356
						]
					},
					"id": 4614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 4359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4614,
							"sourceUnit": 800,
							"src": "58:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4614,
							"sourceUnit": 148,
							"src": "114:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 4361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4614,
							"sourceUnit": 2592,
							"src": "167:53:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4363,
										"name": "ERC20",
										"nameLocations": [
											"335:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "335:5:9"
									},
									"id": 4364,
									"nodeType": "InheritanceSpecifier",
									"src": "335:5:9"
								},
								{
									"baseName": {
										"id": 4365,
										"name": "Ownable",
										"nameLocations": [
											"342:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "342:7:9"
									},
									"id": 4366,
									"nodeType": "InheritanceSpecifier",
									"src": "342:7:9"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4362,
								"nodeType": "StructuredDocumentation",
								"src": "222:92:9",
								"text": " @title MyToken\n @dev ERC-20 토큰 구현, 발행, 구매, 조회 기능 포함"
							},
							"fullyImplemented": true,
							"id": 4613,
							"linearizedBaseContracts": [
								4613,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MyToken",
							"nameLocation": "324:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7ff9b596",
									"id": 4368,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "414:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 4613,
									"src": "399:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 4370,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "478:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 4613,
									"src": "463:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4369,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 4378,
									"name": "TokensPurchased",
									"nameLocation": "528:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4372,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "560:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4378,
												"src": "544:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4374,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfETH",
												"nameLocation": "575:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 4378,
												"src": "567:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4376,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfTokens",
												"nameLocation": "596:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4378,
												"src": "588:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:68:9"
									},
									"src": "522:90:9"
								},
								{
									"body": {
										"id": 4426,
										"nodeType": "Block",
										"src": "1098:305:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4401,
																"name": "_initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4385,
																"src": "1116:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 4402,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4389,
																"src": "1134:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c20737570706c792063616e6e6f7420657863656564206d617820737570706c79",
															"id": 4404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1146:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14",
																"typeString": "literal_string \"Initial supply cannot exceed max supply\""
															},
															"value": "Initial supply cannot exceed max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a59d3b105bfab6ec8bedcff162a157dc3a7c3a5ab98ecedc8e9940827828ac14",
																"typeString": "literal_string \"Initial supply cannot exceed max supply\""
															}
														],
														"id": 4400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1108:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4406,
												"nodeType": "ExpressionStatement",
												"src": "1108:80:9"
											},
											{
												"expression": {
													"id": 4409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4407,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4368,
														"src": "1207:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4408,
														"name": "_tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4387,
														"src": "1220:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1207:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4410,
												"nodeType": "ExpressionStatement",
												"src": "1207:24:9"
											},
											{
												"expression": {
													"id": 4413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4411,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4370,
														"src": "1241:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4412,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4389,
														"src": "1253:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1241:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4414,
												"nodeType": "ExpressionStatement",
												"src": "1241:22:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4416,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1352:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1356:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1352:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4418,
																"name": "_initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4385,
																"src": "1364:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 4419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1381:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 4420,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1385:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 4421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1385:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1381:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1364:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4415,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1346:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4425,
												"nodeType": "ExpressionStatement",
												"src": "1346:50:9"
											}
										]
									},
									"documentation": {
										"id": 4379,
										"nodeType": "StructuredDocumentation",
										"src": "618:266:9",
										"text": " @dev 컨트랙트 생성자\n @param _name 토큰 이름\n @param _symbol 토큰 심볼\n @param _initialSupply 초기 발행량\n @param _tokenPrice 토큰 가격 (1 ETH당 토큰 수)\n @param _maxSupply 최대 발행량"
									},
									"id": 4427,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4392,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4381,
													"src": "1062:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 4393,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4383,
													"src": "1069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 4394,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4391,
												"name": "ERC20",
												"nameLocations": [
													"1056:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1056:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1056:21:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 4396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1086:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 4397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1090:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1086:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 4398,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4395,
												"name": "Ownable",
												"nameLocations": [
													"1078:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1078:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1078:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4381,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "924:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4427,
												"src": "910:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "910:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4383,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "953:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4427,
												"src": "939:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "939:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4385,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "978:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 4427,
												"src": "970:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4387,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "1010:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 4427,
												"src": "1002:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4389,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "1039:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4427,
												"src": "1031:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:155:9"
									},
									"returnParameters": {
										"id": 4399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:0:9"
									},
									"scope": 4613,
									"src": "889:514:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4457,
										"nodeType": "Block",
										"src": "1622:127:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 4438,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1640:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 4439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1640:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 4440,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4432,
																	"src": "1656:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1640:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4442,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4370,
																	"src": "1666:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 4443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1678:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 4444,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "1682:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 4445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1682:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1678:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1666:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1640:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 4449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1694:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 4437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1632:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1632:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4451,
												"nodeType": "ExpressionStatement",
												"src": "1632:83:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4430,
															"src": "1731:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4432,
															"src": "1735:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4452,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1725:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4456,
												"nodeType": "ExpressionStatement",
												"src": "1725:17:9"
											}
										]
									},
									"documentation": {
										"id": 4428,
										"nodeType": "StructuredDocumentation",
										"src": "1409:149:9",
										"text": " @dev 추가 토큰 발행 (소유자만 가능)\n @param to 토큰을 받을 주소\n @param amount 발행할 토큰 양"
									},
									"functionSelector": "40c10f19",
									"id": 4458,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4434,
												"name": "onlyOwner",
												"nameLocations": [
													"1612:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1612:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1612:9:9"
										}
									],
									"name": "mint",
									"nameLocation": "1572:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4430,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1585:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 4458,
												"src": "1577:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1597:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 4458,
												"src": "1589:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:28:9"
									},
									"returnParameters": {
										"id": 4436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1622:0:9"
									},
									"scope": 4613,
									"src": "1563:186:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4506,
										"nodeType": "Block",
										"src": "1850:486:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4463,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1868:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1872:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1868:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1880:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1868:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e642045544820746f2062757920746f6b656e73",
															"id": 4467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1883:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
																"typeString": "literal_string \"Send ETH to buy tokens\""
															},
															"value": "Send ETH to buy tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37a1941a49ca10610c0d45f5736ace3fa56fac03d0b0866fdb19f7f13c7715a9",
																"typeString": "literal_string \"Send ETH to buy tokens\""
															}
														],
														"id": 4462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1860:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1860:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4469,
												"nodeType": "ExpressionStatement",
												"src": "1860:48:9"
											},
											{
												"assignments": [
													4471
												],
												"declarations": [
													{
														"constant": false,
														"id": 4471,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "1974:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 4506,
														"src": "1966:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4470,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1966:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4476,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4472,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1988:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1992:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1988:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 4474,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4368,
														"src": "2000:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1988:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1966:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 4478,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "2072:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 4479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2072:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 4480,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4471,
																	"src": "2088:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2072:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4482,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4370,
																	"src": "2103:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 4483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2115:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 4484,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "2119:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 4485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2119:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2115:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2103:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2072:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 4489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2131:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 4477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2064:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:88:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4491,
												"nodeType": "ExpressionStatement",
												"src": "2064:88:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2202:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2206:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2202:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4495,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4471,
															"src": "2214:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4492,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2196:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4497,
												"nodeType": "ExpressionStatement",
												"src": "2196:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2294:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2298:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2294:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4501,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2306:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2310:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2306:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4503,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4471,
															"src": "2317:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4498,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4378,
														"src": "2278:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2278:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4505,
												"nodeType": "EmitStatement",
												"src": "2273:56:9"
											}
										]
									},
									"documentation": {
										"id": 4459,
										"nodeType": "StructuredDocumentation",
										"src": "1755:54:9",
										"text": " @dev ETH를 보내고 토큰 구매"
									},
									"functionSelector": "d0febe4c",
									"id": 4507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "1823:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:2:9"
									},
									"returnParameters": {
										"id": 4461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:0:9"
									},
									"scope": 4613,
									"src": "1814:522:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4521,
										"nodeType": "Block",
										"src": "2489:45:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 4517,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2514:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MyToken_$4613",
																	"typeString": "contract MyToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MyToken_$4613",
																	"typeString": "contract MyToken"
																}
															],
															"id": 4516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2506:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4515,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2506:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 4518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2506:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 4519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2520:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2506:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4514,
												"id": 4520,
												"nodeType": "Return",
												"src": "2499:28:9"
											}
										]
									},
									"documentation": {
										"id": 4508,
										"nodeType": "StructuredDocumentation",
										"src": "2342:72:9",
										"text": " @dev 컨트랙트 잔고 확인 (소유자만 가능)"
									},
									"functionSelector": "6f9fb98a",
									"id": 4522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4511,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4510,
												"name": "onlyOwner",
												"nameLocations": [
													"2461:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2461:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2461:9:9"
										}
									],
									"name": "getContractBalance",
									"nameLocation": "2428:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2446:2:9"
									},
									"returnParameters": {
										"id": 4514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4522,
												"src": "2480:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:9:9"
									},
									"scope": 4613,
									"src": "2419:115:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4550,
										"nodeType": "Block",
										"src": "2658:138:9",
										"statements": [
											{
												"assignments": [
													4529,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 4529,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2674:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 4550,
														"src": "2669:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 4528,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2669:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 4544,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 4542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2739:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 4532,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "2695:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 4533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2695:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 4531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2687:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 4530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2687:8:9",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 4534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2687:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 4535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2704:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2687:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 4541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4538,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2724:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyToken_$4613",
																				"typeString": "contract MyToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyToken_$4613",
																				"typeString": "contract MyToken"
																			}
																		],
																		"id": 4537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2716:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4536,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2716:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2716:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 4540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2730:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2716:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2687:51:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 4543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2668:74:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4546,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4529,
															"src": "2760:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c206661696c6564",
															"id": 4547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															},
															"value": "Withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															}
														],
														"id": 4545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2752:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4549,
												"nodeType": "ExpressionStatement",
												"src": "2752:37:9"
											}
										]
									},
									"documentation": {
										"id": 4523,
										"nodeType": "StructuredDocumentation",
										"src": "2544:69:9",
										"text": " @dev 컨트랙트 ETH 인출 (소유자만 가능)"
									},
									"functionSelector": "e086e5ec",
									"id": 4551,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4525,
												"name": "onlyOwner",
												"nameLocations": [
													"2648:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2648:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2648:9:9"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "2627:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:2:9"
									},
									"returnParameters": {
										"id": 4527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:0:9"
									},
									"scope": 4613,
									"src": "2618:178:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4570,
										"nodeType": "Block",
										"src": "2984:103:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4560,
																"name": "_newPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4554,
																"src": "3002:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3014:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3002:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
															"id": 4563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3017:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															},
															"value": "Price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															}
														],
														"id": 4559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2994:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4565,
												"nodeType": "ExpressionStatement",
												"src": "2994:54:9"
											},
											{
												"expression": {
													"id": 4568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4566,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4368,
														"src": "3058:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4567,
														"name": "_newPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4554,
														"src": "3071:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3058:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4569,
												"nodeType": "ExpressionStatement",
												"src": "3058:22:9"
											}
										]
									},
									"documentation": {
										"id": 4552,
										"nodeType": "StructuredDocumentation",
										"src": "2806:114:9",
										"text": " @dev 토큰 가격 업데이트 (소유자만 가능)\n @param _newPrice 새 토큰 가격"
									},
									"functionSelector": "6a61e5fc",
									"id": 4571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4556,
												"name": "onlyOwner",
												"nameLocations": [
													"2974:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2974:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2974:9:9"
										}
									],
									"name": "setTokenPrice",
									"nameLocation": "2934:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4554,
												"mutability": "mutable",
												"name": "_newPrice",
												"nameLocation": "2956:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 4571,
												"src": "2948:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2948:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2947:19:9"
									},
									"returnParameters": {
										"id": 4558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2984:0:9"
									},
									"scope": 4613,
									"src": "2925:162:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4583,
										"nodeType": "Block",
										"src": "3300:42:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4580,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4574,
															"src": "3327:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4579,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3317:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 4581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3317:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4578,
												"id": 4582,
												"nodeType": "Return",
												"src": "3310:25:9"
											}
										]
									},
									"documentation": {
										"id": 4572,
										"nodeType": "StructuredDocumentation",
										"src": "3097:129:9",
										"text": " @dev 특정 주소의 토큰 잔액 조회\n @param account 조회할 주소\n @return 토큰 잔액"
									},
									"functionSelector": "5f515226",
									"id": 4584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkBalance",
									"nameLocation": "3240:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4574,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3261:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "3253:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:17:9"
									},
									"returnParameters": {
										"id": 4578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "3291:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3290:9:9"
									},
									"scope": 4613,
									"src": "3231:111:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4593,
										"nodeType": "Block",
										"src": "3497:37:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4590,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3514:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 4591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3514:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4589,
												"id": 4592,
												"nodeType": "Return",
												"src": "3507:20:9"
											}
										]
									},
									"documentation": {
										"id": 4585,
										"nodeType": "StructuredDocumentation",
										"src": "3352:84:9",
										"text": " @dev 발행된 총 토큰 양 조회\n @return 총 공급량"
									},
									"functionSelector": "c4e41b22",
									"id": 4594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "3450:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3464:2:9"
									},
									"returnParameters": {
										"id": 4589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4594,
												"src": "3488:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:9:9"
									},
									"scope": 4613,
									"src": "3441:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4611,
										"nodeType": "Block",
										"src": "3713:68:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4600,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4370,
																	"src": "3731:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 4601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3743:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 4602,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "3747:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 4603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3747:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3743:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3731:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4606,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3730:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4607,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3761:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 4608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3761:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3730:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4599,
												"id": 4610,
												"nodeType": "Return",
												"src": "3723:51:9"
											}
										]
									},
									"documentation": {
										"id": 4595,
										"nodeType": "StructuredDocumentation",
										"src": "3544:104:9",
										"text": " @dev 남은 발행 가능한 토큰 양 조회\n @return 남은 발행 가능량"
									},
									"functionSelector": "e4b7fb73",
									"id": 4612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainingSupply",
									"nameLocation": "3662:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3680:2:9"
									},
									"returnParameters": {
										"id": 4599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4612,
												"src": "3704:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3703:9:9"
									},
									"scope": 4613,
									"src": "3653:128:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4614,
							"src": "315:3468:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								4378
							]
						}
					],
					"src": "32:3751:9"
				},
				"id": 9
			}
		}
	}
}